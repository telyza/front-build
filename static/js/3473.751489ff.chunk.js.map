{"version":3,"file":"static/js/3473.751489ff.chunk.js","mappings":"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","sources":["components/custom-date-range-picker/utils.ts","components/custom-date-range-picker/custom-date-range-picker.tsx","components/custom-date-range-picker/use-date-range-picker.ts","components/custom-dialog/confirm-dialog.tsx","components/empty-content/empty-content.tsx","components/lightbox/styles.tsx","components/lightbox/lightbox.tsx","components/lightbox/use-light-box.ts","components/search-not-found/search-not-found.tsx","api/kanban.ts","sections/kanban/kanban-task-add.tsx","sections/kanban/kanban-input-name.tsx","sections/kanban/kanban-details-toolbar.tsx","sections/kanban/kanban-contacts-dialog.tsx","sections/kanban/kanban-details-priority.tsx","sections/kanban/kanban-details-attachments.tsx","sections/kanban/kanban-details-comment-list.tsx","sections/kanban/kanban-details-comment-input.tsx","sections/kanban/kanban-details.tsx","sections/kanban/kanban-task-item.tsx","sections/kanban/kanban-column-tool-bar.tsx","sections/kanban/kanban-column.tsx","sections/kanban/kanban-column-add.tsx","sections/kanban/kanban-skeleton.tsx","sections/kanban/view/kanban-view.tsx","pages/dashboard/kanban.tsx","utils/uuidv4.ts"],"sourcesContent":["import { getYear, isSameDay, isSameMonth } from 'date-fns';\n\nimport { fDate } from 'src/utils/format-time';\n\n// ----------------------------------------------------------------------\n\nexport function shortDateLabel(startDate: Date | null, endDate: Date | null) {\n  const getCurrentYear = new Date().getFullYear();\n\n  const startDateYear = startDate ? getYear(startDate) : null;\n\n  const endDateYear = endDate ? getYear(endDate) : null;\n\n  const currentYear = getCurrentYear === startDateYear && getCurrentYear === endDateYear;\n\n  const sameDay = startDate && endDate ? isSameDay(new Date(startDate), new Date(endDate)) : false;\n\n  const sameMonth =\n    startDate && endDate ? isSameMonth(new Date(startDate), new Date(endDate)) : false;\n\n  if (currentYear) {\n    if (sameMonth) {\n      if (sameDay) {\n        return fDate(endDate, 'dd MMM yy');\n      }\n      return `${fDate(startDate, 'dd')} - ${fDate(endDate, 'dd MMM yy')}`;\n    }\n    return `${fDate(startDate, 'dd MMM')} - ${fDate(endDate, 'dd MMM yy')}`;\n  }\n\n  return `${fDate(startDate, 'dd MMM yy')} - ${fDate(endDate, 'dd MMM yy')}`;\n}\n","import Paper from '@mui/material/Paper';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { DateCalendar } from '@mui/x-date-pickers/DateCalendar';\n\nimport { useResponsive } from 'src/hooks/use-responsive';\n\nimport { DateRangePickerProps } from './types';\n\n// ----------------------------------------------------------------------\n\nexport default function CustomDateRangePicker({\n  title = 'Select date range',\n  variant = 'input',\n  //\n  startDate,\n  endDate,\n  //\n  onChangeStartDate,\n  onChangeEndDate,\n  //\n  open,\n  onClose,\n  //\n  error,\n}: DateRangePickerProps) {\n  const mdUp = useResponsive('up', 'md');\n\n  const isCalendarView = variant === 'calendar';\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth={isCalendarView ? false : 'xs'}\n      open={open}\n      onClose={onClose}\n      PaperProps={{\n        sx: {\n          ...(isCalendarView && {\n            maxWidth: 720,\n          }),\n        },\n      }}\n    >\n      <DialogTitle sx={{ pb: 2 }}>{title}</DialogTitle>\n\n      <DialogContent\n        sx={{\n          ...(isCalendarView &&\n            mdUp && {\n              overflow: 'unset',\n            }),\n        }}\n      >\n        <Stack\n          justifyContent=\"center\"\n          spacing={isCalendarView ? 3 : 2}\n          direction={isCalendarView && mdUp ? 'row' : 'column'}\n          sx={{ pt: 1 }}\n        >\n          {isCalendarView ? (\n            <>\n              <Paper\n                variant=\"outlined\"\n                sx={{\n                  borderRadius: 2,\n                  borderColor: 'divider',\n                  borderStyle: 'dashed',\n                }}\n              >\n                <DateCalendar value={startDate} onChange={onChangeStartDate} />\n              </Paper>\n\n              <Paper\n                variant=\"outlined\"\n                sx={{\n                  borderRadius: 2,\n                  borderColor: 'divider',\n                  borderStyle: 'dashed',\n                }}\n              >\n                <DateCalendar value={endDate} onChange={onChangeEndDate} />\n              </Paper>\n            </>\n          ) : (\n            <>\n              <DatePicker label=\"Start date\" value={startDate} onChange={onChangeStartDate} />\n\n              <DatePicker label=\"End date\" value={endDate} onChange={onChangeEndDate} />\n            </>\n          )}\n        </Stack>\n\n        {error && (\n          <FormHelperText error sx={{ px: 2 }}>\n            End date must be later than start date\n          </FormHelperText>\n        )}\n      </DialogContent>\n\n      <DialogActions>\n        <Button variant=\"outlined\" color=\"inherit\" onClick={onClose}>\n          Cancel\n        </Button>\n\n        <Button disabled={error} variant=\"contained\" onClick={onClose}>\n          Apply\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import { useState, useCallback } from 'react';\n\nimport { fDate } from 'src/utils/format-time';\n\nimport { shortDateLabel } from './utils';\nimport { DateRangePickerProps } from './types';\n\n// ----------------------------------------------------------------------\n\ntype ReturnType = DateRangePickerProps;\n\nexport default function useDateRangePicker(start: Date | null, end: Date | null): ReturnType {\n  const [open, setOpen] = useState(false);\n\n  const [endDate, setEndDate] = useState(end);\n\n  const [startDate, setStartDate] = useState(start);\n\n  const error = start && end ? new Date(start).getTime() > new Date(end).getTime() : false;\n\n  const onOpen = useCallback(() => {\n    setOpen(true);\n  }, []);\n\n  const onClose = useCallback(() => {\n    setOpen(false);\n  }, []);\n\n  const onChangeStartDate = useCallback((newValue: Date | null) => {\n    setStartDate(newValue);\n  }, []);\n\n  const onChangeEndDate = useCallback(\n    (newValue: Date | null) => {\n      if (error) {\n        setEndDate(null);\n      }\n      setEndDate(newValue);\n    },\n    [error]\n  );\n\n  const onReset = useCallback(() => {\n    setStartDate(null);\n    setEndDate(null);\n  }, []);\n\n  return {\n    startDate,\n    endDate,\n    onChangeStartDate,\n    onChangeEndDate,\n    //\n    open,\n    onOpen,\n    onClose,\n    onReset,\n    //\n    selected: !!startDate && !!endDate,\n    error,\n    //\n    label: `${fDate(startDate)} - ${fDate(endDate)}`,\n    shortLabel: shortDateLabel(startDate, endDate),\n    //\n    setStartDate,\n    setEndDate,\n  };\n}\n","import Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\n\nimport { ConfirmDialogProps } from './types';\n\n// ----------------------------------------------------------------------\n\nexport default function ConfirmDialog({\n  title,\n  content,\n  action,\n  open,\n  onClose,\n  ...other\n}: ConfirmDialogProps) {\n  return (\n    <Dialog fullWidth maxWidth=\"xs\" open={open} onClose={onClose} {...other}>\n      <DialogTitle sx={{ pb: 2 }}>{title}</DialogTitle>\n\n      {content && <DialogContent sx={{ typography: 'body2' }}> {content} </DialogContent>}\n\n      <DialogActions>\n        {action}\n\n        <Button variant=\"outlined\" color=\"inherit\" onClick={onClose}>\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import Box from '@mui/material/Box';\nimport { alpha } from '@mui/material/styles';\nimport Typography from '@mui/material/Typography';\nimport Stack, { StackProps } from '@mui/material/Stack';\n\n// ----------------------------------------------------------------------\n\ntype EmptyContentProps = StackProps & {\n  title?: string;\n  imgUrl?: string;\n  filled?: boolean;\n  description?: string;\n  action?: React.ReactNode;\n};\n\nexport default function EmptyContent({\n  title,\n  imgUrl,\n  action,\n  filled,\n  description,\n  sx,\n  ...other\n}: EmptyContentProps) {\n  return (\n    <Stack\n      flexGrow={1}\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      sx={{\n        px: 3,\n        height: 1,\n        ...(filled && {\n          borderRadius: 2,\n          bgcolor: (theme) => alpha(theme.palette.grey[500], 0.04),\n          border: (theme) => `dashed 1px ${alpha(theme.palette.grey[500], 0.08)}`,\n        }),\n        ...sx,\n      }}\n      {...other}\n    >\n      <Box\n        component=\"img\"\n        alt=\"empty content\"\n        src={imgUrl || '/static/assets/icons/empty/ic_content.svg'}\n        sx={{ width: 1, maxWidth: 160 }}\n      />\n\n      {title && (\n        <Typography\n          variant=\"h6\"\n          component=\"span\"\n          sx={{ mt: 1, color: 'text.disabled', textAlign: 'center' }}\n        >\n          {title}\n        </Typography>\n      )}\n\n      {description && (\n        <Typography variant=\"caption\" sx={{ mt: 1, color: 'text.disabled', textAlign: 'center' }}>\n          {description}\n        </Typography>\n      )}\n\n      {action && action}\n    </Stack>\n  );\n}\n","import GlobalStyles from '@mui/material/GlobalStyles';\nimport { alpha, useTheme } from '@mui/material/styles';\n\n// ----------------------------------------------------------------------\n\nexport default function StyledLightbox() {\n  const theme = useTheme();\n\n  const inputGlobalStyles = (\n    <GlobalStyles\n      styles={{\n        '.yarl__root': {\n          '--yarl__thumbnails_thumbnail_padding': 0,\n          '--yarl__thumbnails_thumbnail_border': 'transparent',\n          '--yarl__color_backdrop': alpha(theme.palette.grey[900], 0.9),\n          '--yarl__slide_captions_container_background': alpha(theme.palette.grey[900], 0.48),\n        },\n        // Caption\n        '.yarl__slide_title': {\n          fontSize: theme.typography.h5.fontSize,\n          fontWeight: theme.typography.h5.fontWeight,\n          lineHeight: theme.typography.h5.lineHeight,\n        },\n        '.yarl__slide_description': {\n          fontSize: theme.typography.body2.fontSize,\n          fontWeight: theme.typography.body2.fontWeight,\n          lineHeight: theme.typography.body2.lineHeight,\n        },\n        // Button\n        '.yarl__button': {\n          filter: 'unset',\n        },\n        // Thumbnails\n        '.yarl__thumbnails_thumbnail': {\n          opacity: 0.48,\n          '&.yarl__thumbnails_thumbnail_active': {\n            opacity: 1,\n          },\n        },\n        '.yarl__thumbnails_vignette': {\n          '--yarl__thumbnails_vignette_size': 0,\n        },\n        // Video\n        '.yarl__video_container': {\n          backgroundColor: theme.palette.common.black,\n        },\n      }}\n    />\n  );\n\n  return inputGlobalStyles;\n}\n","import Zoom from 'yet-another-react-lightbox/plugins/zoom';\nimport Video from 'yet-another-react-lightbox/plugins/video';\nimport Captions from 'yet-another-react-lightbox/plugins/captions';\nimport Slideshow from 'yet-another-react-lightbox/plugins/slideshow';\nimport Fullscreen from 'yet-another-react-lightbox/plugins/fullscreen';\nimport Thumbnails from 'yet-another-react-lightbox/plugins/thumbnails';\nimport ReactLightbox, { useLightboxState } from 'yet-another-react-lightbox';\n\nimport Box from '@mui/material/Box';\n\nimport Iconify from '../iconify';\nimport StyledLightbox from './styles';\nimport { LightBoxProps } from './types';\n\n// ----------------------------------------------------------------------\n\nexport default function Lightbox({\n  slides,\n  disabledZoom,\n  disabledVideo,\n  disabledTotal,\n  disabledCaptions,\n  disabledSlideshow,\n  disabledThumbnails,\n  disabledFullscreen,\n  onGetCurrentIndex,\n  ...other\n}: LightBoxProps) {\n  const totalItems = slides ? slides.length : 0;\n\n  return (\n    <>\n      <StyledLightbox />\n\n      <ReactLightbox\n        slides={slides}\n        animation={{ swipe: 240 }}\n        carousel={{ finite: totalItems < 5 }}\n        controller={{ closeOnBackdropClick: true }}\n        plugins={getPlugins({\n          disabledZoom,\n          disabledVideo,\n          disabledCaptions,\n          disabledSlideshow,\n          disabledThumbnails,\n          disabledFullscreen,\n        })}\n        on={{\n          view: ({ index }: { index: number }) => {\n            if (onGetCurrentIndex) {\n              onGetCurrentIndex(index);\n            }\n          },\n        }}\n        toolbar={{\n          buttons: [\n            <DisplayTotal key={0} totalItems={totalItems} disabledTotal={disabledTotal} />,\n            'close',\n          ],\n        }}\n        render={{\n          iconClose: () => <Iconify width={24} icon=\"carbon:close\" />,\n          iconZoomIn: () => <Iconify width={24} icon=\"carbon:zoom-in\" />,\n          iconZoomOut: () => <Iconify width={24} icon=\"carbon:zoom-out\" />,\n          iconSlideshowPlay: () => <Iconify width={24} icon=\"carbon:play\" />,\n          iconSlideshowPause: () => <Iconify width={24} icon=\"carbon:pause\" />,\n          iconPrev: () => <Iconify width={32} icon=\"carbon:chevron-left\" />,\n          iconNext: () => <Iconify width={32} icon=\"carbon:chevron-right\" />,\n          iconExitFullscreen: () => <Iconify width={24} icon=\"carbon:center-to-fit\" />,\n          iconEnterFullscreen: () => <Iconify width={24} icon=\"carbon:fit-to-screen\" />,\n        }}\n        {...other}\n      />\n    </>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nexport function getPlugins({\n  disabledZoom,\n  disabledVideo,\n  disabledCaptions,\n  disabledSlideshow,\n  disabledThumbnails,\n  disabledFullscreen,\n}: LightBoxProps) {\n  let plugins = [Captions, Fullscreen, Slideshow, Thumbnails, Video, Zoom];\n\n  if (disabledThumbnails) {\n    plugins = plugins.filter((plugin) => plugin !== Thumbnails);\n  }\n  if (disabledCaptions) {\n    plugins = plugins.filter((plugin) => plugin !== Captions);\n  }\n  if (disabledFullscreen) {\n    plugins = plugins.filter((plugin) => plugin !== Fullscreen);\n  }\n  if (disabledSlideshow) {\n    plugins = plugins.filter((plugin) => plugin !== Slideshow);\n  }\n  if (disabledZoom) {\n    plugins = plugins.filter((plugin) => plugin !== Zoom);\n  }\n  if (disabledVideo) {\n    plugins = plugins.filter((plugin) => plugin !== Video);\n  }\n\n  return plugins;\n}\n\n// ----------------------------------------------------------------------\n\ntype DisplayTotalProps = {\n  totalItems: number;\n  disabledTotal?: boolean;\n};\n\nexport function DisplayTotal({ totalItems, disabledTotal }: DisplayTotalProps) {\n  const { currentIndex } = useLightboxState();\n\n  if (disabledTotal) {\n    return null;\n  }\n\n  return (\n    <Box\n      component=\"span\"\n      className=\"yarl__button\"\n      sx={{\n        typography: 'body2',\n        alignItems: 'center',\n        display: 'inline-flex',\n        justifyContent: 'center',\n      }}\n    >\n      <strong> {currentIndex + 1} </strong> / {totalItems}\n    </Box>\n  );\n}\n","import { useState, useCallback } from 'react';\nimport { Slide, SlideImage, SlideVideo } from 'yet-another-react-lightbox';\n\n// ----------------------------------------------------------------------\n\ntype ReturnType = {\n  open: boolean;\n  selected: number;\n  onClose: VoidFunction;\n  onOpen: (slideUrl: string) => void;\n  setSelected: React.Dispatch<React.SetStateAction<number>>;\n};\n\nexport default function useLightBox(slides: Slide[]): ReturnType {\n  const [selected, setSelected] = useState(-1);\n\n  const handleOpen = useCallback(\n    (slideUrl: string) => {\n      const slideIndex = slides.findIndex((slide) =>\n        slide.type === 'video'\n          ? (slide as SlideVideo).poster === slideUrl\n          : (slide as SlideImage).src === slideUrl\n      );\n\n      setSelected(slideIndex);\n    },\n    [slides]\n  );\n\n  const handleClose = useCallback(() => {\n    setSelected(-1);\n  }, []);\n\n  return {\n    selected,\n    open: selected >= 0,\n    onOpen: handleOpen,\n    onClose: handleClose,\n    setSelected,\n  };\n}\n","import Typography from '@mui/material/Typography';\nimport Paper, { PaperProps } from '@mui/material/Paper';\n\n// ----------------------------------------------------------------------\n\ninterface Props extends PaperProps {\n  query?: string;\n}\n\nexport default function SearchNotFound({ query, sx, ...other }: Props) {\n  return query ? (\n    <Paper\n      sx={{\n        bgcolor: 'unset',\n        textAlign: 'center',\n        ...sx,\n      }}\n      {...other}\n    >\n      <Typography variant=\"h6\" gutterBottom>\n        Not Found\n      </Typography>\n\n      <Typography variant=\"body2\">\n        No results found for &nbsp;\n        <strong>&quot;{query}&quot;</strong>.\n        <br /> Try checking for typos or using complete words.\n      </Typography>\n    </Paper>\n  ) : (\n    <Typography variant=\"body2\" sx={sx}>\n      Please enter keywords\n    </Typography>\n  );\n}\n","import { useMemo } from 'react';\nimport useSWR, { mutate } from 'swr';\n\nimport { fetcher, endpoints } from 'src/utils/axios';\n\nimport { IKanban, IKanbanTask, IKanbanColumn } from 'src/types/kanban';\n\n// ----------------------------------------------------------------------\n\nconst URL = endpoints.kanban;\n\nconst options = {\n  revalidateIfStale: false,\n  revalidateOnFocus: false,\n  revalidateOnReconnect: false,\n};\n\nexport function useGetBoard() {\n  const { data, isLoading, error, isValidating } = useSWR(URL, fetcher, options);\n\n  const memoizedValue = useMemo(\n    () => ({\n      board: data?.board as IKanban,\n      boardLoading: isLoading,\n      boardError: error,\n      boardValidating: isValidating,\n      boardEmpty: !isLoading && !data?.board.ordered.length,\n    }),\n    [data?.board, error, isLoading, isValidating]\n  );\n\n  return memoizedValue;\n}\n\n// ----------------------------------------------------------------------\n\nexport async function createColumn(columnData: IKanbanColumn) {\n  /**\n   * Work on server\n   */\n  // const data = { columnData };\n  // await axios.post(endpoints.kanban, data, { params: { endpoint: 'create-column' } });\n\n  /**\n   * Work in local\n   */\n  mutate(\n    URL,\n    (currentData: any) => {\n      const board = currentData.board as IKanban;\n\n      const columns = {\n        ...board.columns,\n        // add new column in board.columns\n        [columnData.id]: columnData,\n      };\n\n      // add new column in board.ordered\n      const ordered = [...board.ordered, columnData.id];\n\n      return {\n        ...currentData,\n        board: {\n          ...board,\n          columns,\n          ordered,\n        },\n      };\n    },\n    false\n  );\n}\n\n// ----------------------------------------------------------------------\n\nexport async function updateColumn(columnId: string, columnName: string) {\n  /**\n   * Work on server\n   */\n  // const data = { columnId, columnName };\n  // await axios.post(endpoints.kanban, data, { params: { endpoint: 'update-column' } });\n\n  /**\n   * Work in local\n   */\n  mutate(\n    URL,\n    (currentData: any) => {\n      const board = currentData.board as IKanban;\n\n      // current column\n      const column = board.columns[columnId];\n\n      const columns = {\n        ...board.columns,\n        // update column in board.columns\n        [column.id]: {\n          ...column,\n          name: columnName,\n        },\n      };\n\n      return {\n        ...currentData,\n        board: {\n          ...board,\n          columns,\n        },\n      };\n    },\n    false\n  );\n}\n\n// ----------------------------------------------------------------------\n\nexport async function moveColumn(newOrdered: string[]) {\n  /**\n   * Work in local\n   */\n  mutate(\n    URL,\n    (currentData: any) => {\n      const board = currentData.board as IKanban;\n\n      // update ordered in board.ordered\n      const ordered = newOrdered;\n\n      return {\n        ...currentData,\n        board: {\n          ...board,\n          ordered,\n        },\n      };\n    },\n    false\n  );\n\n  /**\n   * Work on server\n   */\n  // const data = { newOrdered };\n  // await axios.post(endpoints.kanban, data, { params: { endpoint: 'move-column' } });\n}\n\n// ----------------------------------------------------------------------\n\nexport async function clearColumn(columnId: string) {\n  /**\n   * Work on server\n   */\n  // const data = { columnId };\n  // await axios.post(endpoints.kanban, data, { params: { endpoint: 'clear-column' } });\n\n  /**\n   * Work in local\n   */\n  mutate(\n    URL,\n    (currentData: any) => {\n      const board = currentData.board as IKanban;\n\n      const { tasks } = board;\n\n      // current column\n      const column = board.columns[columnId];\n\n      // delete tasks in board.tasks\n      column.taskIds.forEach((key: string) => {\n        delete tasks[key];\n      });\n\n      const columns = {\n        ...board.columns,\n        [column.id]: {\n          ...column,\n          // delete task in column\n          taskIds: [],\n        },\n      };\n\n      return {\n        ...currentData,\n        board: {\n          ...board,\n          columns,\n          tasks,\n        },\n      };\n    },\n    false\n  );\n}\n\n// ----------------------------------------------------------------------\n\nexport async function deleteColumn(columnId: string) {\n  /**\n   * Work on server\n   */\n  // const data = { columnId };\n  // await axios.post(endpoints.kanban, data, { params: { endpoint: 'delete-column' } });\n\n  /**\n   * Work in local\n   */\n  mutate(\n    URL,\n    (currentData: any) => {\n      const board = currentData.board as IKanban;\n\n      const { columns, tasks } = board;\n\n      // current column\n      const column = columns[columnId];\n\n      // delete column in board.columns\n      delete columns[columnId];\n\n      // delete tasks in board.tasks\n      column.taskIds.forEach((key: string) => {\n        delete tasks[key];\n      });\n\n      // delete column in board.ordered\n      const ordered = board.ordered.filter((id: string) => id !== columnId);\n\n      return {\n        ...currentData,\n        board: {\n          ...board,\n          columns,\n          tasks,\n          ordered,\n        },\n      };\n    },\n    false\n  );\n}\n\n// ----------------------------------------------------------------------\n\nexport async function createTask(columnId: string, taskData: IKanbanTask) {\n  /**\n   * Work on server\n   */\n  // const data = { columnId, taskData };\n  // await axios.post(endpoints.kanban, data, { params: { endpoint: 'create-task' } });\n\n  /**\n   * Work in local\n   */\n  mutate(\n    URL,\n    (currentData: any) => {\n      const board = currentData.board as IKanban;\n\n      // current column\n      const column = board.columns[columnId];\n\n      const columns = {\n        ...board.columns,\n        [columnId]: {\n          ...column,\n          // add task in column\n          taskIds: [...column.taskIds, taskData.id],\n        },\n      };\n\n      // add task in board.tasks\n      const tasks = {\n        ...board.tasks,\n        [taskData.id]: taskData,\n      };\n\n      return {\n        ...currentData,\n        board: {\n          ...board,\n          columns,\n          tasks,\n        },\n      };\n    },\n    false\n  );\n}\n\n// ----------------------------------------------------------------------\n\nexport async function updateTask(taskData: IKanbanTask) {\n  /**\n   * Work on server\n   */\n  // const data = { taskData };\n  // await axios.post(endpoints.kanban, data, { params: { endpoint: 'update-task' } });\n\n  /**\n   * Work in local\n   */\n  mutate(\n    URL,\n    (currentData: any) => {\n      const board = currentData.board as IKanban;\n\n      const tasks = {\n        ...board.tasks,\n        // add task in board.tasks\n        [taskData.id]: taskData,\n      };\n\n      return {\n        ...currentData,\n        board: {\n          ...board,\n          tasks,\n        },\n      };\n    },\n    false\n  );\n}\n\n// ----------------------------------------------------------------------\n\nexport async function moveTask(updateColumns: Record<string, IKanbanColumn>) {\n  /**\n   * Work in local\n   */\n  mutate(\n    URL,\n    (currentData) => {\n      const board = currentData.board as IKanban;\n\n      // update board.columns\n      const columns = updateColumns;\n\n      return {\n        ...currentData,\n        board: {\n          ...board,\n          columns,\n        },\n      };\n    },\n    false\n  );\n\n  /**\n   * Work on server\n   */\n  // const data = { updateColumns };\n  // await axios.post(endpoints.kanban, data, { params: { endpoint: 'move-task' } });\n}\n\n// ----------------------------------------------------------------------\n\nexport async function deleteTask(columnId: string, taskId: string) {\n  /**\n   * Work on server\n   */\n  // const data = { columnId, taskId };\n  // await axios.post(endpoints.kanban, data, { params: { endpoint: 'delete-task' } });\n\n  /**\n   * Work in local\n   */\n  mutate(\n    URL,\n    (currentData: any) => {\n      const board = currentData.board as IKanban;\n\n      const { tasks } = board;\n\n      // current column\n      const column = board.columns[columnId];\n\n      const columns = {\n        ...board.columns,\n        [column.id]: {\n          ...column,\n          // delete tasks in column\n          taskIds: column.taskIds.filter((id: string) => id !== taskId),\n        },\n      };\n\n      // delete tasks in board.tasks\n      delete tasks[taskId];\n\n      return {\n        ...currentData,\n        board: {\n          ...board,\n          columns,\n          tasks,\n        },\n      };\n    },\n    false\n  );\n}\n","import { useMemo, useState, useCallback } from 'react';\n\nimport Paper from '@mui/material/Paper';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport InputBase, { inputBaseClasses } from '@mui/material/InputBase';\n\nimport uuidv4 from 'src/utils/uuidv4';\n\nimport { _mock } from 'src/_mock';\n\nimport { IKanbanTask } from 'src/types/kanban';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  status: string;\n  onCloseAddTask: VoidFunction;\n  onAddTask: (task: IKanbanTask) => void;\n};\n\nexport default function KanbanTaskAdd({ status, onAddTask, onCloseAddTask }: Props) {\n  const [name, setName] = useState('');\n\n  const defaultTask: IKanbanTask = useMemo(\n    () => ({\n      id: uuidv4(),\n      status,\n      name: name.trim(),\n      priority: 'medium',\n      attachments: [],\n      labels: [],\n      comments: [],\n      assignee: [],\n      due: [null, null],\n      reporter: {\n        id: _mock.id(16),\n        name: _mock.fullName(16),\n        avatarUrl: _mock.image.avatar(16),\n      },\n    }),\n    [name, status]\n  );\n\n  const handleKeyUpAddTask = useCallback(\n    (event: React.KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === 'Enter') {\n        if (name) {\n          onAddTask(defaultTask);\n        }\n      }\n    },\n    [defaultTask, name, onAddTask]\n  );\n\n  const handleClickAddTask = useCallback(() => {\n    if (name) {\n      onAddTask(defaultTask);\n    } else {\n      onCloseAddTask();\n    }\n  }, [defaultTask, name, onAddTask, onCloseAddTask]);\n\n  const handleChangeName = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    setName(event.target.value);\n  }, []);\n\n  return (\n    <ClickAwayListener onClickAway={handleClickAddTask}>\n      <Paper\n        sx={{\n          borderRadius: 1.5,\n          bgcolor: 'background.default',\n          boxShadow: (theme) => theme.customShadows.z1,\n        }}\n      >\n        <InputBase\n          autoFocus\n          multiline\n          fullWidth\n          placeholder=\"Task name\"\n          value={name}\n          onChange={handleChangeName}\n          onKeyUp={handleKeyUpAddTask}\n          sx={{\n            px: 2,\n            height: 56,\n            [`& .${inputBaseClasses.input}`]: {\n              typography: 'subtitle2',\n            },\n          }}\n        />\n      </Paper>\n    </ClickAwayListener>\n  );\n}\n","import InputBase, { InputBaseProps, inputBaseClasses } from '@mui/material/InputBase';\n\n// ----------------------------------------------------------------------\n\nexport default function KanbanInputName({ sx, ...other }: InputBaseProps) {\n  return (\n    <InputBase\n      sx={{\n        [`&.${inputBaseClasses.root}`]: {\n          py: 0.75,\n          borderRadius: 1,\n          typography: 'h6',\n          borderWidth: 2,\n          borderStyle: 'solid',\n          borderColor: 'transparent',\n          transition: (theme) => theme.transitions.create(['padding-left', 'border-color']),\n          [`&.${inputBaseClasses.focused}`]: {\n            pl: 1.5,\n            borderColor: 'text.primary',\n          },\n        },\n        [`& .${inputBaseClasses.input}`]: {\n          typography: 'h6',\n        },\n        ...sx,\n      }}\n      {...other}\n    />\n  );\n}\n","import { useState, useCallback } from 'react';\n\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport Tooltip from '@mui/material/Tooltip';\nimport MenuItem from '@mui/material/MenuItem';\nimport IconButton from '@mui/material/IconButton';\n\nimport { useBoolean } from 'src/hooks/use-boolean';\nimport { useResponsive } from 'src/hooks/use-responsive';\n\nimport Iconify from 'src/components/iconify';\nimport { ConfirmDialog } from 'src/components/custom-dialog';\nimport CustomPopover, { usePopover } from 'src/components/custom-popover';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  liked: boolean;\n  taskName: string;\n  taskStatus: string;\n  onLike: VoidFunction;\n  onDelete: VoidFunction;\n  onCloseDetails: VoidFunction;\n};\n\nexport default function KanbanDetailsToolbar({\n  liked,\n  onLike,\n  taskName,\n  onDelete,\n  taskStatus,\n  onCloseDetails,\n}: Props) {\n  const smUp = useResponsive('up', 'sm');\n\n  const confirm = useBoolean();\n\n  const popover = usePopover();\n\n  const [status, setStatus] = useState(taskStatus);\n\n  const handleChangeStatus = useCallback(\n    (newValue: string) => {\n      popover.onClose();\n      setStatus(newValue);\n    },\n    [popover]\n  );\n\n  return (\n    <>\n      <Stack\n        direction=\"row\"\n        alignItems=\"center\"\n        sx={{\n          p: (theme) => theme.spacing(2.5, 1, 2.5, 2.5),\n        }}\n      >\n        {!smUp && (\n          <Tooltip title=\"Back\">\n            <IconButton onClick={onCloseDetails} sx={{ mr: 1 }}>\n              <Iconify icon=\"eva:arrow-ios-back-fill\" />\n            </IconButton>\n          </Tooltip>\n        )}\n\n        <Button\n          size=\"small\"\n          variant=\"soft\"\n          endIcon={<Iconify icon=\"eva:arrow-ios-downward-fill\" width={16} sx={{ ml: -0.5 }} />}\n          onClick={popover.onOpen}\n        >\n          {status}\n        </Button>\n\n        <Stack direction=\"row\" justifyContent=\"flex-end\" flexGrow={1}>\n          <Tooltip title=\"Like\">\n            <IconButton color={liked ? 'default' : 'primary'} onClick={onLike}>\n              <Iconify icon=\"ic:round-thumb-up\" />\n            </IconButton>\n          </Tooltip>\n\n          <Tooltip title=\"Delete task\">\n            <IconButton onClick={confirm.onTrue}>\n              <Iconify icon=\"solar:trash-bin-trash-bold\" />\n            </IconButton>\n          </Tooltip>\n\n          <IconButton>\n            <Iconify icon=\"eva:more-vertical-fill\" />\n          </IconButton>\n        </Stack>\n      </Stack>\n\n      <CustomPopover\n        open={popover.open}\n        onClose={popover.onClose}\n        arrow=\"top-right\"\n        sx={{ width: 140 }}\n      >\n        {['To Do', 'In Progress', 'Ready To Test', 'Done'].map((option) => (\n          <MenuItem\n            key={option}\n            selected={status === option}\n            onClick={() => {\n              handleChangeStatus(option);\n            }}\n          >\n            {option}\n          </MenuItem>\n        ))}\n      </CustomPopover>\n\n      <ConfirmDialog\n        open={confirm.value}\n        onClose={confirm.onFalse}\n        title=\"Delete\"\n        content={\n          <>\n            Are you sure want to delete <strong> {taskName} </strong>?\n          </>\n        }\n        action={\n          <Button variant=\"contained\" color=\"error\" onClick={onDelete}>\n            Delete\n          </Button>\n        }\n      />\n    </>\n  );\n}\n","import { useState, useCallback } from 'react';\n\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Avatar from '@mui/material/Avatar';\nimport Dialog from '@mui/material/Dialog';\nimport ListItem from '@mui/material/ListItem';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport ListItemText from '@mui/material/ListItemText';\nimport DialogContent from '@mui/material/DialogContent';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\n\nimport { _contacts } from 'src/_mock';\n\nimport Iconify from 'src/components/iconify';\nimport Scrollbar from 'src/components/scrollbar';\nimport SearchNotFound from 'src/components/search-not-found';\n\nimport { IKanbanAssignee } from 'src/types/kanban';\n\n// ----------------------------------------------------------------------\n\nconst ITEM_HEIGHT = 64;\n\ntype Props = {\n  open: boolean;\n  onClose: VoidFunction;\n  assignee?: IKanbanAssignee[];\n};\n\nexport default function KanbanContactsDialog({ assignee = [], open, onClose }: Props) {\n  const [searchContact, setSearchContact] = useState('');\n\n  const handleSearchContacts = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchContact(event.target.value);\n  }, []);\n\n  const dataFiltered = applyFilter({\n    inputData: _contacts,\n    query: searchContact,\n  });\n\n  const notFound = !dataFiltered.length && !!searchContact;\n\n  return (\n    <Dialog fullWidth maxWidth=\"xs\" open={open} onClose={onClose}>\n      <DialogTitle sx={{ pb: 0 }}>\n        Contacts <Typography component=\"span\">({_contacts.length})</Typography>\n      </DialogTitle>\n\n      <Box sx={{ px: 3, py: 2.5 }}>\n        <TextField\n          fullWidth\n          value={searchContact}\n          onChange={handleSearchContacts}\n          placeholder=\"Search...\"\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <Iconify icon=\"eva:search-fill\" sx={{ color: 'text.disabled' }} />\n              </InputAdornment>\n            ),\n          }}\n        />\n      </Box>\n\n      <DialogContent sx={{ p: 0 }}>\n        {notFound ? (\n          <SearchNotFound query={searchContact} sx={{ mt: 3, mb: 10 }} />\n        ) : (\n          <Scrollbar\n            sx={{\n              px: 2.5,\n              height: ITEM_HEIGHT * 6,\n            }}\n          >\n            {dataFiltered.map((contact) => {\n              const checked = assignee.map((person) => person.name).includes(contact.name);\n\n              return (\n                <ListItem\n                  key={contact.id}\n                  disableGutters\n                  secondaryAction={\n                    <Button\n                      size=\"small\"\n                      color={checked ? 'primary' : 'inherit'}\n                      startIcon={\n                        <Iconify\n                          width={16}\n                          icon={checked ? 'eva:checkmark-fill' : 'mingcute:add-line'}\n                          sx={{ mr: -0.5 }}\n                        />\n                      }\n                    >\n                      {checked ? 'Assigned' : 'Assign'}\n                    </Button>\n                  }\n                  sx={{ height: ITEM_HEIGHT }}\n                >\n                  <ListItemAvatar>\n                    <Avatar src={contact.avatarUrl} />\n                  </ListItemAvatar>\n\n                  <ListItemText\n                    primaryTypographyProps={{\n                      typography: 'subtitle2',\n                      sx: { mb: 0.25 },\n                    }}\n                    secondaryTypographyProps={{ typography: 'caption' }}\n                    primary={contact.name}\n                    secondary={contact.email}\n                  />\n                </ListItem>\n              );\n            })}\n          </Scrollbar>\n        )}\n      </DialogContent>\n    </Dialog>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction applyFilter({ inputData, query }: { inputData: IKanbanAssignee[]; query: string }) {\n  if (query) {\n    inputData = inputData.filter(\n      (contact) =>\n        contact.name.toLowerCase().indexOf(query.toLowerCase()) !== -1 ||\n        contact.email.toLowerCase().indexOf(query.toLowerCase()) !== -1\n    );\n  }\n\n  return inputData;\n}\n","import Stack from '@mui/material/Stack';\nimport { alpha } from '@mui/material/styles';\nimport ButtonBase from '@mui/material/ButtonBase';\n\nimport Iconify from 'src/components/iconify';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  priority: string;\n  onChangePriority: (newValue: string) => void;\n};\n\nexport default function KanbanDetailsPriority({ priority, onChangePriority }: Props) {\n  return (\n    <Stack direction=\"row\" flexWrap=\"wrap\" spacing={1}>\n      {['low', 'medium', 'hight'].map((option) => (\n        <ButtonBase\n          key={option}\n          onClick={() => onChangePriority(option)}\n          sx={{\n            py: 0.5,\n            pl: 0.75,\n            pr: 1.25,\n            fontSize: 12,\n            borderRadius: 1,\n            lineHeight: '20px',\n            textTransform: 'capitalize',\n            fontWeight: 'fontWeightBold',\n            boxShadow: (theme) => `inset 0 0 0 1px ${alpha(theme.palette.grey[500], 0.24)}`,\n            ...(option === priority && {\n              boxShadow: (theme) => `inset 0 0 0 2px ${theme.palette.text.primary}`,\n            }),\n          }}\n        >\n          <Iconify\n            icon={\n              (option === 'low' && 'solar:double-alt-arrow-down-bold-duotone') ||\n              (option === 'medium' && 'solar:double-alt-arrow-right-bold-duotone') ||\n              'solar:double-alt-arrow-up-bold-duotone'\n            }\n            sx={{\n              mr: 0.5,\n              ...(option === 'low' && {\n                color: 'info.main',\n              }),\n              ...(option === 'medium' && {\n                color: 'warning.main',\n              }),\n              ...(option === 'hight' && {\n                color: 'error.main',\n              }),\n            }}\n          />\n\n          {option}\n        </ButtonBase>\n      ))}\n    </Stack>\n  );\n}\n","import { useState, useCallback } from 'react';\n\nimport Stack from '@mui/material/Stack';\n\nimport { UploadBox, MultiFilePreview } from 'src/components/upload';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  attachments: string[];\n};\n\nexport default function KanbanDetailsAttachments({ attachments }: Props) {\n  const [files, setFiles] = useState<(File | string)[]>(attachments);\n\n  const handleDrop = useCallback(\n    (acceptedFiles: File[]) => {\n      const newFiles = acceptedFiles.map((file: File) =>\n        Object.assign(file, {\n          preview: URL.createObjectURL(file),\n        })\n      );\n\n      setFiles([...files, ...newFiles]);\n    },\n    [files]\n  );\n\n  const handleRemoveFile = useCallback(\n    (inputFile: File | string) => {\n      const filtered = files.filter((file) => file !== inputFile);\n      setFiles(filtered);\n    },\n    [files]\n  );\n\n  return (\n    <Stack direction=\"row\" flexWrap=\"wrap\">\n      <MultiFilePreview\n        thumbnail\n        files={files}\n        onRemove={(file) => handleRemoveFile(file)}\n        sx={{ width: 64, height: 64 }}\n      />\n\n      <UploadBox onDrop={handleDrop} />\n    </Stack>\n  );\n}\n","import Stack from '@mui/material/Stack';\nimport Avatar from '@mui/material/Avatar';\nimport Typography from '@mui/material/Typography';\n\nimport { fToNow } from 'src/utils/format-time';\n\nimport Image from 'src/components/image';\nimport Lightbox, { useLightBox } from 'src/components/lightbox';\n\nimport { IKanbanComment } from 'src/types/kanban';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  comments: IKanbanComment[];\n};\n\nexport default function KanbanDetailsCommentList({ comments }: Props) {\n  const slides = comments\n    .filter((comment) => comment.messageType === 'image')\n    .map((slide) => ({ src: slide.message }));\n\n  const lightbox = useLightBox(slides);\n\n  return (\n    <>\n      <Stack\n        spacing={3}\n        flexGrow={1}\n        sx={{\n          py: 3,\n          px: 2.5,\n          bgcolor: 'background.neutral',\n        }}\n      >\n        {comments.map((comment) => (\n          <Stack key={comment.id} direction=\"row\" spacing={2}>\n            <Avatar src={comment.avatarUrl} />\n\n            <Stack spacing={comment.messageType === 'image' ? 1 : 0.5} flexGrow={1}>\n              <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\n                <Typography variant=\"subtitle2\"> {comment.name}</Typography>\n                <Typography variant=\"caption\" sx={{ color: 'text.disabled' }}>\n                  {fToNow(comment.createdAt)}\n                </Typography>\n              </Stack>\n\n              {comment.messageType === 'image' ? (\n                <Image\n                  alt={comment.message}\n                  src={comment.message}\n                  onClick={() => lightbox.onOpen(comment.message)}\n                  sx={{\n                    borderRadius: 1.5,\n                    cursor: 'pointer',\n                    transition: (theme) => theme.transitions.create(['opacity']),\n                    '&:hover': {\n                      opacity: 0.8,\n                    },\n                  }}\n                />\n              ) : (\n                <Typography variant=\"body2\">{comment.message}</Typography>\n              )}\n            </Stack>\n          </Stack>\n        ))}\n      </Stack>\n\n      <Lightbox\n        index={lightbox.selected}\n        slides={slides}\n        open={lightbox.open}\n        close={lightbox.onClose}\n      />\n    </>\n  );\n}\n","import Paper from '@mui/material/Paper';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport Avatar from '@mui/material/Avatar';\nimport InputBase from '@mui/material/InputBase';\nimport IconButton from '@mui/material/IconButton';\n\nimport { useMockedUser } from 'src/hooks/use-mocked-user';\n\nimport Iconify from 'src/components/iconify';\n\n// ----------------------------------------------------------------------\n\nexport default function KanbanDetailsCommentInput() {\n  const { user } = useMockedUser();\n\n  return (\n    <Stack\n      direction=\"row\"\n      spacing={2}\n      sx={{\n        py: 3,\n        px: 2.5,\n      }}\n    >\n      <Avatar src={user?.photoURL} alt={user?.displayName}>\n        {user?.displayName?.charAt(0).toUpperCase()}\n      </Avatar>\n\n      <Paper variant=\"outlined\" sx={{ p: 1, flexGrow: 1, bgcolor: 'transparent' }}>\n        <InputBase fullWidth multiline rows={2} placeholder=\"Type a message\" sx={{ px: 1 }} />\n\n        <Stack direction=\"row\" alignItems=\"center\">\n          <Stack direction=\"row\" flexGrow={1}>\n            <IconButton>\n              <Iconify icon=\"solar:gallery-add-bold\" />\n            </IconButton>\n\n            <IconButton>\n              <Iconify icon=\"eva:attach-2-fill\" />\n            </IconButton>\n          </Stack>\n\n          <Button variant=\"contained\">Comment</Button>\n        </Stack>\n      </Paper>\n    </Stack>\n  );\n}\n","import { useState, useCallback } from 'react';\n\nimport Chip from '@mui/material/Chip';\nimport Stack from '@mui/material/Stack';\nimport Drawer from '@mui/material/Drawer';\nimport Button from '@mui/material/Button';\nimport Avatar from '@mui/material/Avatar';\nimport Divider from '@mui/material/Divider';\nimport Tooltip from '@mui/material/Tooltip';\nimport TextField from '@mui/material/TextField';\nimport IconButton from '@mui/material/IconButton';\nimport { alpha, styled } from '@mui/material/styles';\n\nimport { useBoolean } from 'src/hooks/use-boolean';\n\nimport Iconify from 'src/components/iconify';\nimport Scrollbar from 'src/components/scrollbar';\nimport CustomDateRangePicker, { useDateRangePicker } from 'src/components/custom-date-range-picker';\n\nimport { IKanbanTask } from 'src/types/kanban';\n\nimport KanbanInputName from './kanban-input-name';\nimport KanbanDetailsToolbar from './kanban-details-toolbar';\nimport KanbanContactsDialog from './kanban-contacts-dialog';\nimport KanbanDetailsPriority from './kanban-details-priority';\nimport KanbanDetailsAttachments from './kanban-details-attachments';\nimport KanbanDetailsCommentList from './kanban-details-comment-list';\nimport KanbanDetailsCommentInput from './kanban-details-comment-input';\n\n// ----------------------------------------------------------------------\n\nconst StyledLabel = styled('span')(({ theme }) => ({\n  ...theme.typography.caption,\n  width: 100,\n  flexShrink: 0,\n  color: theme.palette.text.secondary,\n  fontWeight: theme.typography.fontWeightSemiBold,\n}));\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  task: IKanbanTask;\n  openDetails: boolean;\n  onCloseDetails: VoidFunction;\n  //\n  onUpdateTask: (updateTask: IKanbanTask) => void;\n  onDeleteTask: VoidFunction;\n};\n\nexport default function KanbanDetails({\n  task,\n  openDetails,\n  onCloseDetails,\n  //\n  onUpdateTask,\n  onDeleteTask,\n}: Props) {\n  const [priority, setPriority] = useState(task.priority);\n\n  const [taskName, setTaskName] = useState(task.name);\n\n  const like = useBoolean();\n\n  const contacts = useBoolean();\n\n  const [taskDescription, setTaskDescription] = useState(task.description);\n\n  const rangePicker = useDateRangePicker(task.due[0], task.due[1]);\n\n  const handleChangeTaskName = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    setTaskName(event.target.value);\n  }, []);\n\n  const handleUpdateTask = useCallback(\n    (event: React.KeyboardEvent<HTMLInputElement>) => {\n      try {\n        if (event.key === 'Enter') {\n          if (taskName) {\n            onUpdateTask({\n              ...task,\n              name: taskName,\n            });\n          }\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    [onUpdateTask, task, taskName]\n  );\n\n  const handleChangeTaskDescription = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    setTaskDescription(event.target.value);\n  }, []);\n\n  const handleChangePriority = useCallback((newValue: string) => {\n    setPriority(newValue);\n  }, []);\n\n  const renderHead = (\n    <KanbanDetailsToolbar\n      liked={like.value}\n      taskName={task.name}\n      onLike={like.onToggle}\n      onDelete={onDeleteTask}\n      taskStatus={task.status}\n      onCloseDetails={onCloseDetails}\n    />\n  );\n\n  const renderName = (\n    <KanbanInputName\n      placeholder=\"Task name\"\n      value={taskName}\n      onChange={handleChangeTaskName}\n      onKeyUp={handleUpdateTask}\n    />\n  );\n\n  const renderReporter = (\n    <Stack direction=\"row\" alignItems=\"center\">\n      <StyledLabel>Reporter</StyledLabel>\n      <Avatar alt={task.reporter.name} src={task.reporter.avatarUrl} />\n    </Stack>\n  );\n\n  const renderAssignee = (\n    <Stack direction=\"row\">\n      <StyledLabel sx={{ height: 40, lineHeight: '40px' }}>Assignee</StyledLabel>\n\n      <Stack direction=\"row\" flexWrap=\"wrap\" alignItems=\"center\" spacing={1}>\n        {task.assignee.map((user) => (\n          <Avatar key={user.id} alt={user.name} src={user.avatarUrl} />\n        ))}\n\n        <Tooltip title=\"Add assignee\">\n          <IconButton\n            onClick={contacts.onTrue}\n            sx={{\n              bgcolor: (theme) => alpha(theme.palette.grey[500], 0.08),\n              border: (theme) => `dashed 1px ${theme.palette.divider}`,\n            }}\n          >\n            <Iconify icon=\"mingcute:add-line\" />\n          </IconButton>\n        </Tooltip>\n\n        <KanbanContactsDialog\n          assignee={task.assignee}\n          open={contacts.value}\n          onClose={contacts.onFalse}\n        />\n      </Stack>\n    </Stack>\n  );\n\n  const renderLabel = (\n    <Stack direction=\"row\">\n      <StyledLabel sx={{ height: 24, lineHeight: '24px' }}>Labels</StyledLabel>\n\n      {!!task.labels.length && (\n        <Stack direction=\"row\" flexWrap=\"wrap\" alignItems=\"center\" spacing={1}>\n          {task.labels.map((label) => (\n            <Chip key={label} color=\"info\" label={label} size=\"small\" variant=\"soft\" />\n          ))}\n        </Stack>\n      )}\n    </Stack>\n  );\n\n  const renderDueDate = (\n    <Stack direction=\"row\" alignItems=\"center\">\n      <StyledLabel> Due date </StyledLabel>\n\n      {rangePicker.selected ? (\n        <Button size=\"small\" onClick={rangePicker.onOpen}>\n          {rangePicker.shortLabel}\n        </Button>\n      ) : (\n        <Tooltip title=\"Add due date\">\n          <IconButton\n            onClick={rangePicker.onOpen}\n            sx={{\n              bgcolor: (theme) => alpha(theme.palette.grey[500], 0.08),\n              border: (theme) => `dashed 1px ${theme.palette.divider}`,\n            }}\n          >\n            <Iconify icon=\"mingcute:add-line\" />\n          </IconButton>\n        </Tooltip>\n      )}\n\n      <CustomDateRangePicker\n        variant=\"calendar\"\n        title=\"Choose due date\"\n        startDate={rangePicker.startDate}\n        endDate={rangePicker.endDate}\n        onChangeStartDate={rangePicker.onChangeStartDate}\n        onChangeEndDate={rangePicker.onChangeEndDate}\n        open={rangePicker.open}\n        onClose={rangePicker.onClose}\n        selected={rangePicker.selected}\n        error={rangePicker.error}\n      />\n    </Stack>\n  );\n\n  const renderPriority = (\n    <Stack direction=\"row\" alignItems=\"center\">\n      <StyledLabel>Priority</StyledLabel>\n\n      <KanbanDetailsPriority priority={priority} onChangePriority={handleChangePriority} />\n    </Stack>\n  );\n\n  const renderDescription = (\n    <Stack direction=\"row\">\n      <StyledLabel> Description </StyledLabel>\n\n      <TextField\n        fullWidth\n        multiline\n        size=\"small\"\n        value={taskDescription}\n        onChange={handleChangeTaskDescription}\n        InputProps={{\n          sx: { typography: 'body2' },\n        }}\n      />\n    </Stack>\n  );\n\n  const renderAttachments = (\n    <Stack direction=\"row\">\n      <StyledLabel>Attachments</StyledLabel>\n      <KanbanDetailsAttachments attachments={task.attachments} />\n    </Stack>\n  );\n\n  const renderComments = <KanbanDetailsCommentList comments={task.comments} />;\n\n  return (\n    <Drawer\n      open={openDetails}\n      onClose={onCloseDetails}\n      anchor=\"right\"\n      slotProps={{\n        backdrop: { invisible: true },\n      }}\n      PaperProps={{\n        sx: {\n          width: {\n            xs: 1,\n            sm: 480,\n          },\n        },\n      }}\n    >\n      {renderHead}\n\n      <Divider />\n\n      <Scrollbar\n        sx={{\n          height: 1,\n          '& .simplebar-content': {\n            height: 1,\n            display: 'flex',\n            flexDirection: 'column',\n          },\n        }}\n      >\n        <Stack\n          spacing={3}\n          sx={{\n            pt: 3,\n            pb: 5,\n            px: 2.5,\n          }}\n        >\n          {renderName}\n\n          {renderReporter}\n\n          {renderAssignee}\n\n          {renderLabel}\n\n          {renderDueDate}\n\n          {renderPriority}\n\n          {renderDescription}\n\n          {renderAttachments}\n        </Stack>\n\n        {!!task.comments.length && renderComments}\n      </Scrollbar>\n\n      <KanbanDetailsCommentInput />\n    </Drawer>\n  );\n}\n","import { Draggable } from '@hello-pangea/dnd';\n\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Avatar from '@mui/material/Avatar';\nimport { useTheme } from '@mui/material/styles';\nimport Typography from '@mui/material/Typography';\nimport Paper, { PaperProps } from '@mui/material/Paper';\nimport AvatarGroup, { avatarGroupClasses } from '@mui/material/AvatarGroup';\n\nimport { useBoolean } from 'src/hooks/use-boolean';\n\nimport { bgBlur } from 'src/theme/css';\n\nimport Iconify from 'src/components/iconify';\n\nimport { IKanbanTask } from 'src/types/kanban';\n\nimport KanbanDetails from './kanban-details';\n\n// ----------------------------------------------------------------------\n\ntype Props = PaperProps & {\n  index: number;\n  task: IKanbanTask;\n  onUpdateTask: (updateTask: IKanbanTask) => void;\n  onDeleteTask: VoidFunction;\n};\n\nexport default function KanbanTaskItem({\n  task,\n  index,\n  onDeleteTask,\n  onUpdateTask,\n  sx,\n  ...other\n}: Props) {\n  const theme = useTheme();\n\n  const openDetails = useBoolean();\n\n  const renderPriority = (\n    <Iconify\n      icon={\n        (task.priority === 'low' && 'solar:double-alt-arrow-down-bold-duotone') ||\n        (task.priority === 'medium' && 'solar:double-alt-arrow-right-bold-duotone') ||\n        'solar:double-alt-arrow-up-bold-duotone'\n      }\n      sx={{\n        position: 'absolute',\n        top: 4,\n        right: 4,\n        ...(task.priority === 'low' && {\n          color: 'info.main',\n        }),\n        ...(task.priority === 'medium' && {\n          color: 'warning.main',\n        }),\n        ...(task.priority === 'hight' && {\n          color: 'error.main',\n        }),\n      }}\n    />\n  );\n\n  const renderImg = (\n    <Box\n      sx={{\n        p: theme.spacing(1, 1, 0, 1),\n      }}\n    >\n      <Box\n        component=\"img\"\n        alt={task.attachments[0]}\n        src={task.attachments[0]}\n        sx={{\n          borderRadius: 1.5,\n          ...(openDetails.value && {\n            opacity: 0.8,\n          }),\n        }}\n      />\n    </Box>\n  );\n\n  const renderInfo = (\n    <Stack direction=\"row\" alignItems=\"center\">\n      <Stack\n        flexGrow={1}\n        direction=\"row\"\n        alignItems=\"center\"\n        sx={{\n          typography: 'caption',\n          color: 'text.disabled',\n        }}\n      >\n        <Iconify width={16} icon=\"solar:chat-round-dots-bold\" sx={{ mr: 0.25 }} />\n        <Box component=\"span\" sx={{ mr: 1 }}>\n          {task.comments.length}\n        </Box>\n\n        <Iconify width={16} icon=\"eva:attach-2-fill\" sx={{ mr: 0.25 }} />\n        <Box component=\"span\">{task.attachments.length}</Box>\n      </Stack>\n\n      <AvatarGroup\n        sx={{\n          [`& .${avatarGroupClasses.avatar}`]: {\n            width: 24,\n            height: 24,\n          },\n        }}\n      >\n        {task.assignee.map((user) => (\n          <Avatar key={user.id} alt={user.name} src={user.avatarUrl} />\n        ))}\n      </AvatarGroup>\n    </Stack>\n  );\n\n  return (\n    <>\n      <Draggable draggableId={task.id} index={index}>\n        {(provided, snapshot) => (\n          <Paper\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            onClick={openDetails.onTrue}\n            sx={{\n              width: 1,\n              borderRadius: 1.5,\n              overflow: 'hidden',\n              position: 'relative',\n              bgcolor: 'background.default',\n              boxShadow: theme.customShadows.z1,\n              '&:hover': {\n                boxShadow: theme.customShadows.z20,\n              },\n              ...(openDetails.value && {\n                boxShadow: theme.customShadows.z20,\n              }),\n              ...(snapshot.isDragging && {\n                boxShadow: theme.customShadows.z20,\n                ...bgBlur({\n                  opacity: 0.48,\n                  color: theme.palette.background.default,\n                }),\n              }),\n              ...sx,\n            }}\n            {...other}\n          >\n            {!!task.attachments.length && renderImg}\n\n            <Stack spacing={2} sx={{ px: 2, py: 2.5, position: 'relative' }}>\n              {renderPriority}\n\n              <Typography variant=\"subtitle2\">{task.name}</Typography>\n\n              {renderInfo}\n            </Stack>\n          </Paper>\n        )}\n      </Draggable>\n\n      <KanbanDetails\n        task={task}\n        openDetails={openDetails.value}\n        onCloseDetails={openDetails.onFalse}\n        onUpdateTask={onUpdateTask}\n        onDeleteTask={onDeleteTask}\n      />\n    </>\n  );\n}\n","import { useRef, useState, useEffect, useCallback } from 'react';\n\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport MenuItem from '@mui/material/MenuItem';\nimport IconButton from '@mui/material/IconButton';\n\nimport { useBoolean } from 'src/hooks/use-boolean';\n\nimport Iconify from 'src/components/iconify';\nimport { ConfirmDialog } from 'src/components/custom-dialog';\nimport CustomPopover, { usePopover } from 'src/components/custom-popover';\n\nimport KanbanInputName from './kanban-input-name';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  columnName: string;\n  onDeleteColumn: VoidFunction;\n  onClearColumn: VoidFunction;\n  onUpdateColumn: (inputName: string) => void;\n};\n\nexport default function KanbanColumnToolBar({\n  columnName,\n  onDeleteColumn,\n  onClearColumn,\n  onUpdateColumn,\n}: Props) {\n  const renameRef = useRef<HTMLInputElement>(null);\n\n  const popover = usePopover();\n\n  const confirmDialog = useBoolean();\n\n  const [name, setName] = useState(columnName);\n\n  useEffect(() => {\n    if (popover.open) {\n      if (renameRef.current) {\n        renameRef.current.focus();\n      }\n    }\n  }, [popover.open]);\n\n  const handleChangeName = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    setName(event.target.value);\n  }, []);\n\n  const handleKeyUpUpdateColumn = useCallback(\n    (event: React.KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === 'Enter') {\n        if (renameRef.current) {\n          renameRef.current.blur();\n        }\n        onUpdateColumn(name);\n      }\n    },\n    [name, onUpdateColumn]\n  );\n\n  return (\n    <>\n      <Stack\n        spacing={1}\n        direction=\"row\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        sx={{ pt: 3 }}\n      >\n        <KanbanInputName\n          inputRef={renameRef}\n          placeholder=\"Section name\"\n          value={name}\n          onChange={handleChangeName}\n          onKeyUp={handleKeyUpUpdateColumn}\n        />\n\n        <IconButton color={popover.open ? 'inherit' : 'default'} onClick={popover.onOpen}>\n          <Iconify icon=\"eva:more-horizontal-fill\" />\n        </IconButton>\n      </Stack>\n\n      <CustomPopover\n        open={popover.open}\n        onClose={popover.onClose}\n        sx={{\n          ml: 1.5,\n          width: 160,\n        }}\n      >\n        <MenuItem onClick={popover.onClose}>\n          <Iconify icon=\"solar:pen-bold\" />\n          Rename\n        </MenuItem>\n\n        <MenuItem\n          onClick={() => {\n            onClearColumn();\n            popover.onClose();\n          }}\n        >\n          <Iconify icon=\"solar:eraser-bold\" />\n          Clear\n        </MenuItem>\n\n        <MenuItem\n          onClick={() => {\n            confirmDialog.onTrue();\n            popover.onClose();\n          }}\n          sx={{ color: 'error.main' }}\n        >\n          <Iconify icon=\"solar:trash-bin-trash-bold\" />\n          Delete\n        </MenuItem>\n      </CustomPopover>\n\n      <ConfirmDialog\n        open={confirmDialog.value}\n        onClose={confirmDialog.onFalse}\n        title=\"Delete\"\n        content={\n          <>\n            Are you sure want to delete column?\n            <Box sx={{ typography: 'caption', color: 'error.main', mt: 2 }}>\n              <strong> NOTE: </strong> All tasks related to this category will also be deleted.\n            </Box>\n          </>\n        }\n        action={\n          <Button\n            variant=\"contained\"\n            color=\"error\"\n            onClick={() => {\n              onDeleteColumn();\n              confirmDialog.onFalse();\n            }}\n          >\n            Delete\n          </Button>\n        }\n      />\n    </>\n  );\n}\n","import { useCallback } from 'react';\nimport { Droppable, Draggable } from '@hello-pangea/dnd';\n\nimport Paper from '@mui/material/Paper';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport { alpha } from '@mui/material/styles';\n\nimport { useBoolean } from 'src/hooks/use-boolean';\n\nimport {\n  createTask,\n  updateTask,\n  deleteTask,\n  clearColumn,\n  updateColumn,\n  deleteColumn,\n} from 'src/api/kanban';\n\nimport Iconify from 'src/components/iconify';\nimport { useSnackbar } from 'src/components/snackbar';\n\nimport { IKanbanTask, IKanbanColumn } from 'src/types/kanban';\n\nimport KanbanTaskAdd from './kanban-task-add';\nimport KanbanTaskItem from './kanban-task-item';\nimport KanbanColumnToolBar from './kanban-column-tool-bar';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  column: IKanbanColumn;\n  tasks: Record<string, IKanbanTask>;\n  index: number;\n};\n\nexport default function KanbanColumn({ column, tasks, index }: Props) {\n  const { enqueueSnackbar } = useSnackbar();\n\n  const openAddTask = useBoolean();\n\n  const handleUpdateColumn = useCallback(\n    async (columnName: string) => {\n      try {\n        if (column.name !== columnName) {\n          updateColumn(column.id, columnName);\n\n          enqueueSnackbar('Update success!', {\n            anchorOrigin: { vertical: 'top', horizontal: 'center' },\n          });\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    [column.id, column.name, enqueueSnackbar]\n  );\n\n  const handleClearColumn = useCallback(async () => {\n    try {\n      clearColumn(column.id);\n    } catch (error) {\n      console.error(error);\n    }\n  }, [column.id]);\n\n  const handleDeleteColumn = useCallback(async () => {\n    try {\n      deleteColumn(column.id);\n\n      enqueueSnackbar('Delete success!', {\n        anchorOrigin: { vertical: 'top', horizontal: 'center' },\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  }, [column.id, enqueueSnackbar]);\n\n  const handleAddTask = useCallback(\n    async (taskData: IKanbanTask) => {\n      try {\n        createTask(column.id, taskData);\n\n        openAddTask.onFalse();\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    [column.id, openAddTask]\n  );\n\n  const handleUpdateTask = useCallback(async (taskData: IKanbanTask) => {\n    try {\n      updateTask(taskData);\n    } catch (error) {\n      console.error(error);\n    }\n  }, []);\n\n  const handleDeleteTask = useCallback(\n    async (taskId: string) => {\n      try {\n        deleteTask(column.id, taskId);\n\n        enqueueSnackbar('Delete success!', {\n          anchorOrigin: { vertical: 'top', horizontal: 'center' },\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    [column.id, enqueueSnackbar]\n  );\n\n  const renderAddTask = (\n    <Stack\n      spacing={2}\n      sx={{\n        pb: 3,\n      }}\n    >\n      {openAddTask.value && (\n        <KanbanTaskAdd\n          status={column.name}\n          onAddTask={handleAddTask}\n          onCloseAddTask={openAddTask.onFalse}\n        />\n      )}\n\n      <Button\n        fullWidth\n        size=\"large\"\n        color=\"inherit\"\n        startIcon={\n          <Iconify\n            icon={openAddTask.value ? 'solar:close-circle-broken' : 'mingcute:add-line'}\n            width={18}\n            sx={{ mr: -0.5 }}\n          />\n        }\n        onClick={openAddTask.onToggle}\n        sx={{ fontSize: 14 }}\n      >\n        {openAddTask.value ? 'Close' : 'Add Task'}\n      </Button>\n    </Stack>\n  );\n\n  return (\n    <Draggable draggableId={column.id} index={index}>\n      {(provided, snapshot) => (\n        <Paper\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          sx={{\n            px: 2,\n            borderRadius: 2,\n            bgcolor: 'background.neutral',\n            ...(snapshot.isDragging && {\n              bgcolor: (theme) => alpha(theme.palette.grey[500], 0.24),\n            }),\n          }}\n        >\n          <Stack {...provided.dragHandleProps}>\n            <KanbanColumnToolBar\n              columnName={column.name}\n              onUpdateColumn={handleUpdateColumn}\n              onClearColumn={handleClearColumn}\n              onDeleteColumn={handleDeleteColumn}\n            />\n\n            <Droppable droppableId={column.id} type=\"TASK\">\n              {(dropProvided) => (\n                <Stack\n                  ref={dropProvided.innerRef}\n                  {...dropProvided.droppableProps}\n                  spacing={2}\n                  sx={{\n                    py: 3,\n                    width: 280,\n                  }}\n                >\n                  {column.taskIds.map((taskId, taskIndex) => (\n                    <KanbanTaskItem\n                      key={taskId}\n                      index={taskIndex}\n                      task={tasks[taskId]}\n                      onUpdateTask={handleUpdateTask}\n                      onDeleteTask={() => handleDeleteTask(taskId)}\n                    />\n                  ))}\n                  {dropProvided.placeholder}\n                </Stack>\n              )}\n            </Droppable>\n\n            {renderAddTask}\n          </Stack>\n        </Paper>\n      )}\n    </Draggable>\n  );\n}\n","import { useState, useCallback } from 'react';\n\nimport Paper from '@mui/material/Paper';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport { inputBaseClasses } from '@mui/material/InputBase';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\n\nimport { useBoolean } from 'src/hooks/use-boolean';\n\nimport uuidv4 from 'src/utils/uuidv4';\n\nimport { createColumn } from 'src/api/kanban';\n\nimport Iconify from 'src/components/iconify';\n\n// ----------------------------------------------------------------------\n\nexport default function KanbanColumnAdd() {\n  const [columnName, setColumnName] = useState('');\n\n  const openAddColumn = useBoolean();\n\n  const handleChangeName = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    setColumnName(event.target.value);\n  }, []);\n\n  const handleCreateColumn = useCallback(async () => {\n    try {\n      if (columnName) {\n        createColumn({\n          id: uuidv4(),\n          name: columnName,\n          taskIds: [],\n        });\n        setColumnName('');\n      }\n      openAddColumn.onFalse();\n    } catch (error) {\n      console.error(error);\n    }\n  }, [columnName, openAddColumn]);\n\n  const handleKeyUpCreateColumn = useCallback(\n    (event: React.KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === 'Enter') {\n        handleCreateColumn();\n      }\n    },\n    [handleCreateColumn]\n  );\n\n  return (\n    <Paper sx={{ minWidth: 280, width: 280 }}>\n      {openAddColumn.value ? (\n        <ClickAwayListener onClickAway={handleCreateColumn}>\n          <TextField\n            autoFocus\n            fullWidth\n            placeholder=\"New section\"\n            value={columnName}\n            onChange={handleChangeName}\n            onKeyUp={handleKeyUpCreateColumn}\n            sx={{\n              [`& .${inputBaseClasses.input}`]: {\n                typography: 'h6',\n              },\n            }}\n          />\n        </ClickAwayListener>\n      ) : (\n        <Button\n          fullWidth\n          size=\"large\"\n          color=\"inherit\"\n          variant=\"outlined\"\n          startIcon={<Iconify icon=\"mingcute:add-line\" sx={{ mr: -0.5 }} />}\n          onClick={openAddColumn.onTrue}\n        >\n          Add Section\n        </Button>\n      )}\n    </Paper>\n  );\n}\n","import Paper from '@mui/material/Paper';\nimport Stack from '@mui/material/Stack';\nimport { BoxProps } from '@mui/material/Box';\nimport Skeleton from '@mui/material/Skeleton';\n\n// ----------------------------------------------------------------------\n\ntype Props = BoxProps & {\n  index?: number;\n};\n\nexport function KanbanColumnSkeleton({ index, sx, ...other }: Props) {\n  return (\n    <Stack\n      component={Paper}\n      variant=\"outlined\"\n      sx={{\n        p: 2,\n        borderRadius: 2,\n        ...sx,\n      }}\n      {...other}\n    >\n      <Stack spacing={2} sx={{ width: 280 }}>\n        <Skeleton sx={{ paddingTop: '75%', borderRadius: 1.5 }} />\n        {[0].includes(Number(index)) && <Skeleton sx={{ paddingTop: '50%', borderRadius: 1.5 }} />}\n        {[0, 1].includes(Number(index)) && (\n          <Skeleton sx={{ paddingTop: '25%', borderRadius: 1.5 }} />\n        )}\n        {[0, 1, 2].includes(Number(index)) && (\n          <Skeleton sx={{ paddingTop: '25%', borderRadius: 1.5 }} />\n        )}\n      </Stack>\n    </Stack>\n  );\n}\n","import { useCallback } from 'react';\nimport { Droppable, DropResult, DragDropContext } from '@hello-pangea/dnd';\n\nimport Stack from '@mui/material/Stack';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\n\nimport { moveTask, moveColumn, useGetBoard } from 'src/api/kanban';\n\nimport Scrollbar from 'src/components/scrollbar';\nimport EmptyContent from 'src/components/empty-content';\n\nimport KanbanColumn from '../kanban-column';\nimport KanbanColumnAdd from '../kanban-column-add';\nimport { KanbanColumnSkeleton } from '../kanban-skeleton';\n\n// ----------------------------------------------------------------------\n\nexport default function KanbanView() {\n  const { board, boardLoading, boardEmpty } = useGetBoard();\n\n  const onDragEnd = useCallback(\n    async ({ destination, source, draggableId, type }: DropResult) => {\n      try {\n        if (!destination) {\n          return;\n        }\n\n        if (destination.droppableId === source.droppableId && destination.index === source.index) {\n          return;\n        }\n\n        // Moving column\n        if (type === 'COLUMN') {\n          const newOrdered = [...board.ordered];\n\n          newOrdered.splice(source.index, 1);\n\n          newOrdered.splice(destination.index, 0, draggableId);\n\n          moveColumn(newOrdered);\n          return;\n        }\n\n        const sourceColumn = board?.columns[source.droppableId];\n\n        const destinationColumn = board?.columns[destination.droppableId];\n\n        // Moving task to same list\n        if (sourceColumn.id === destinationColumn.id) {\n          const newTaskIds = [...sourceColumn.taskIds];\n\n          newTaskIds.splice(source.index, 1);\n\n          newTaskIds.splice(destination.index, 0, draggableId);\n\n          moveTask({\n            ...board?.columns,\n            [sourceColumn.id]: {\n              ...sourceColumn,\n              taskIds: newTaskIds,\n            },\n          });\n\n          console.info('Moving to same list!');\n\n          return;\n        }\n\n        // Moving task to different list\n        const sourceTaskIds = [...sourceColumn.taskIds];\n\n        const destinationTaskIds = [...destinationColumn.taskIds];\n\n        // Remove from source\n        sourceTaskIds.splice(source.index, 1);\n\n        // Insert into destination\n        destinationTaskIds.splice(destination.index, 0, draggableId);\n\n        moveTask({\n          ...board?.columns,\n          [sourceColumn.id]: {\n            ...sourceColumn,\n            taskIds: sourceTaskIds,\n          },\n          [destinationColumn.id]: {\n            ...destinationColumn,\n            taskIds: destinationTaskIds,\n          },\n        });\n\n        console.info('Moving to different list!');\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    [board?.columns, board?.ordered]\n  );\n\n  const renderSkeleton = (\n    <Stack direction=\"row\" alignItems=\"flex-start\" spacing={3}>\n      {[...Array(4)].map((_, index) => (\n        <KanbanColumnSkeleton key={index} index={index} />\n      ))}\n    </Stack>\n  );\n\n  return (\n    <Container\n      maxWidth={false}\n      sx={{\n        height: 1,\n      }}\n    >\n      <Typography\n        variant=\"h4\"\n        sx={{\n          mb: { xs: 3, md: 5 },\n        }}\n      >\n        Kanban\n      </Typography>\n\n      {boardLoading && renderSkeleton}\n\n      {boardEmpty && (\n        <EmptyContent\n          filled\n          title=\"No Data\"\n          sx={{\n            py: 10,\n            maxHeight: { md: 480 },\n          }}\n        />\n      )}\n\n      {!!board?.ordered.length && (\n        <DragDropContext onDragEnd={onDragEnd}>\n          <Droppable droppableId=\"board\" type=\"COLUMN\" direction=\"horizontal\">\n            {(provided) => (\n              <Scrollbar\n                sx={{\n                  height: 1,\n                  minHeight: {\n                    xs: '80vh',\n                    md: 'unset',\n                  },\n                }}\n              >\n                <Stack\n                  ref={provided.innerRef}\n                  {...provided.droppableProps}\n                  spacing={3}\n                  direction=\"row\"\n                  alignItems=\"flex-start\"\n                  sx={{\n                    p: 0.25,\n                    height: 1,\n                  }}\n                >\n                  {board?.ordered.map((columnId, index) => (\n                    <KanbanColumn\n                      index={index}\n                      key={columnId}\n                      column={board?.columns[columnId]}\n                      tasks={board?.tasks}\n                    />\n                  ))}\n\n                  {provided.placeholder}\n\n                  <KanbanColumnAdd />\n                </Stack>\n              </Scrollbar>\n            )}\n          </Droppable>\n        </DragDropContext>\n      )}\n    </Container>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n\nimport { KanbanView } from 'src/sections/kanban/view';\n\n// ----------------------------------------------------------------------\n\nexport default function KanbanPage() {\n  return (\n    <>\n      <Helmet>\n        <title> Game: Kanban</title>\n      </Helmet>\n\n      <KanbanView />\n    </>\n  );\n}\n","/* eslint-disable */\n// ----------------------------------------------------------------------\n\nexport default function uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0,\n      v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n"],"names":["shortDateLabel","startDate","endDate","getCurrentYear","Date","getFullYear","startDateYear","getYear","endDateYear","currentYear","sameDay","isSameDay","sameMonth","isSameMonth","fDate","concat","CustomDateRangePicker","_ref","title","variant","onChangeStartDate","onChangeEndDate","open","onClose","error","mdUp","useResponsive","isCalendarView","_jsxs","Dialog","fullWidth","maxWidth","PaperProps","sx","children","_jsx","DialogTitle","pb","DialogContent","overflow","Stack","justifyContent","spacing","direction","pt","_Fragment","Paper","borderRadius","borderColor","borderStyle","DateCalendar","value","onChange","DatePicker","label","FormHelperText","px","DialogActions","Button","color","onClick","disabled","useDateRangePicker","start","end","setOpen","useState","setEndDate","setStartDate","getTime","onOpen","useCallback","newValue","onReset","selected","shortLabel","ConfirmDialog","content","action","other","typography","EmptyContent","imgUrl","filled","description","flexGrow","alignItems","height","bgcolor","theme","alpha","palette","grey","border","Box","component","alt","src","width","Typography","mt","textAlign","StyledLightbox","useTheme","GlobalStyles","styles","fontSize","h5","fontWeight","lineHeight","body2","filter","opacity","backgroundColor","common","black","Lightbox","slides","disabledZoom","disabledVideo","disabledTotal","disabledCaptions","disabledSlideshow","disabledThumbnails","disabledFullscreen","onGetCurrentIndex","totalItems","length","ReactLightbox","animation","swipe","carousel","finite","controller","closeOnBackdropClick","plugins","getPlugins","on","view","_ref2","index","toolbar","buttons","DisplayTotal","render","iconClose","Iconify","icon","iconZoomIn","iconZoomOut","iconSlideshowPlay","iconSlideshowPause","iconPrev","iconNext","iconExitFullscreen","iconEnterFullscreen","_ref3","Captions","Fullscreen","Slideshow","Thumbnails","Video","Zoom","plugin","_ref4","currentIndex","useLightboxState","className","display","useLightBox","setSelected","slideUrl","slideIndex","findIndex","slide","type","poster","SearchNotFound","query","gutterBottom","URL","endpoints","kanban","options","revalidateIfStale","revalidateOnFocus","revalidateOnReconnect","async","moveTask","updateColumns","mutate","currentData","board","columns","KanbanTaskAdd","status","onAddTask","onCloseAddTask","name","setName","defaultTask","useMemo","id","uuidv4","trim","priority","attachments","labels","comments","assignee","due","reporter","_mock","fullName","avatarUrl","image","avatar","handleKeyUpAddTask","event","key","handleClickAddTask","handleChangeName","target","ClickAwayListener","onClickAway","boxShadow","customShadows","z1","InputBase","autoFocus","multiline","placeholder","onKeyUp","inputBaseClasses","input","KanbanInputName","root","py","borderWidth","transition","transitions","create","focused","pl","KanbanDetailsToolbar","liked","onLike","taskName","onDelete","taskStatus","onCloseDetails","smUp","confirm","useBoolean","popover","usePopover","setStatus","handleChangeStatus","p","Tooltip","IconButton","mr","size","endIcon","ml","onTrue","CustomPopover","arrow","map","option","MenuItem","onFalse","ITEM_HEIGHT","KanbanContactsDialog","searchContact","setSearchContact","handleSearchContacts","dataFiltered","inputData","contact","toLowerCase","indexOf","email","applyFilter","_contacts","notFound","TextField","InputProps","startAdornment","InputAdornment","position","mb","Scrollbar","checked","person","includes","ListItem","disableGutters","secondaryAction","startIcon","ListItemAvatar","Avatar","ListItemText","primaryTypographyProps","secondaryTypographyProps","primary","secondary","KanbanDetailsPriority","onChangePriority","flexWrap","ButtonBase","pr","textTransform","text","KanbanDetailsAttachments","files","setFiles","handleDrop","acceptedFiles","newFiles","file","Object","assign","preview","createObjectURL","handleRemoveFile","inputFile","filtered","MultiFilePreview","thumbnail","onRemove","UploadBox","onDrop","KanbanDetailsCommentList","comment","messageType","message","lightbox","fToNow","createdAt","Image","cursor","close","KanbanDetailsCommentInput","_user$displayName","user","useMockedUser","photoURL","displayName","charAt","toUpperCase","rows","StyledLabel","styled","caption","flexShrink","fontWeightSemiBold","KanbanDetails","task","openDetails","onUpdateTask","onDeleteTask","setPriority","setTaskName","like","contacts","taskDescription","setTaskDescription","rangePicker","handleChangeTaskName","handleUpdateTask","console","handleChangeTaskDescription","handleChangePriority","renderHead","onToggle","renderName","renderReporter","renderAssignee","divider","renderLabel","Chip","renderDueDate","renderPriority","renderDescription","renderAttachments","renderComments","Drawer","anchor","slotProps","backdrop","invisible","xs","sm","Divider","flexDirection","KanbanTaskItem","top","right","renderImg","renderInfo","AvatarGroup","avatarGroupClasses","Draggable","draggableId","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","z20","isDragging","bgBlur","background","default","KanbanColumnToolBar","columnName","onDeleteColumn","onClearColumn","onUpdateColumn","renameRef","useRef","confirmDialog","useEffect","current","focus","handleKeyUpUpdateColumn","blur","inputRef","KanbanColumn","column","tasks","enqueueSnackbar","useSnackbar","openAddTask","handleUpdateColumn","columnId","updateColumn","anchorOrigin","vertical","horizontal","handleClearColumn","taskIds","forEach","clearColumn","handleDeleteColumn","ordered","deleteColumn","handleAddTask","taskData","createTask","updateTask","handleDeleteTask","taskId","deleteTask","renderAddTask","Droppable","droppableId","dropProvided","droppableProps","taskIndex","KanbanColumnAdd","setColumnName","openAddColumn","handleCreateColumn","columnData","createColumn","handleKeyUpCreateColumn","minWidth","KanbanColumnSkeleton","Skeleton","paddingTop","Number","KanbanView","boardLoading","boardEmpty","data","isLoading","isValidating","useSWR","fetcher","boardError","boardValidating","useGetBoard","onDragEnd","destination","source","newOrdered","splice","moveColumn","sourceColumn","destinationColumn","newTaskIds","info","sourceTaskIds","destinationTaskIds","renderSkeleton","Array","_","Container","md","maxHeight","DragDropContext","minHeight","KanbanPage","Helmet","replace","c","r","Math","random","toString"],"sourceRoot":""}