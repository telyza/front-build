{"version":3,"file":"static/js/2631.0dc3db49.chunk.js","mappings":"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","sources":["sections/overview/casino/app-game-preview.tsx","sections/overview/casino/view/overview-game-view.tsx","pages/dashboard/casino.tsx"],"sourcesContent":["import { useEffect, useRef } from 'react';\n\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport { alpha, styled, useTheme } from '@mui/material/styles';\nimport { useDispatch, useSelector } from 'src/redux/store';\nimport { getWallet } from 'src/redux/slices/wallet';\nimport { IS_VENDOR_PANEL } from 'src/config-global';\nimport { useLocales } from 'src/locales';\nimport { getLocaleCode } from 'src/utils/format-number';\n\ninterface Props {\n  game_detail?:\n    | {\n        url?: string;\n        // other possible fields\n      }\n    | undefined\n    | null;\n}\n\nconst StyledBox = styled(Box)(({ theme }) => ({\n  border: `1px solid ${alpha(theme.palette.primary.main, 0.5)}`,\n  borderRadius: theme.shape.borderRadius,\n  overflow: 'hidden',\n  width: '100%',\n  height: '0',\n  paddingBottom: '56.25%', // 16:9 aspect ratio\n  position: 'relative',\n}));\n\nconst Iframe = styled('iframe')({\n  border: 0,\n  height: '100%',\n  width: '100%',\n  position: 'absolute',\n  top: 0,\n  left: 0,\n});\n\nexport default function GamePreview({ game_detail }: Props) {\n  const theme = useTheme();\n  const PRIMARY_MAIN = theme.palette.primary.main;\n  const boxRef = useRef<HTMLDivElement>(null);\n  const dispatch = useDispatch();\n  const { currentLang } = useLocales();\n  const accessToken = sessionStorage.getItem('accessToken');\n  const { wallet } = useSelector((state: { wallet: any }) => state.wallet);\n\n  // Add access token to URL\n  const urlWithToken = game_detail?.url\n    ? `${game_detail.url}?token=${accessToken}&is_printing=${IS_VENDOR_PANEL ? '1' : '0'}&lang=${\n        currentLang.value\n      }&currency=${wallet?.currency}`\n    : null;\n\n  const handleFullScreen = () => {\n    const boxElement = boxRef.current;\n    if (boxElement) {\n      if (boxElement.requestFullscreen) {\n        boxElement.requestFullscreen();\n      } else if ((boxElement as any).webkitRequestFullscreen) {\n        /* Safari */\n        (boxElement as any).webkitRequestFullscreen();\n      } else if ((boxElement as any).msRequestFullscreen) {\n        /* IE11 */\n        (boxElement as any).msRequestFullscreen();\n      } else {\n        console.error('Fullscreen API is not supported.');\n      }\n    }\n  };\n\n  useEffect(() => {\n    const handleMessage = async (event: MessageEvent) => {\n      if (event.data?.refreshBalance === true) {\n        dispatch(getWallet());\n      }\n    };\n\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [dispatch]);\n\n  return (\n    <Box>\n      {urlWithToken ? (\n        <Box>\n          <Button onClick={handleFullScreen} variant=\"contained\" color=\"primary\" sx={{ mb: 0.5 }}>\n            Fullscreen\n          </Button>\n          <StyledBox ref={boxRef}>\n            <Iframe src={urlWithToken} allowFullScreen />\n          </StyledBox>\n        </Box>\n      ) : (\n        <Box>No preview available</Box>\n      )}\n    </Box>\n  );\n}\n","import { useState, useEffect, useCallback } from 'react';\nimport Card from '@mui/material/Card';\nimport Stack from '@mui/material/Stack';\nimport { useTheme } from '@mui/material/styles';\nimport Container from '@mui/material/Container';\nimport Grid from '@mui/material/Unstable_Grid2';\nimport Typography from '@mui/material/Typography';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { useParams } from 'react-router-dom';\n\nimport { useResponsive } from 'src/hooks/use-responsive';\n\nimport { useDispatch, useSelector } from 'src/redux/store';\n\nimport { getGameSuccess, getGame } from 'src/redux/slices/generale';\nimport { useSettingsContext } from 'src/components/settings';\n\nimport { IS_VENDOR_PANEL } from 'src/config-global';\n\nimport AppGames from '../app-game-list';\nimport GamePreview from '../app-game-preview';\n\nexport default function OverviewGameView() {\n  const { game_detail } = useSelector((state) => state.generale);\n  const { gameId } = useParams();\n  const theme = useTheme();\n  const isMobile = useResponsive('down', 'sm');\n  const isDesktop = useResponsive('up', 'md');\n  const lgUp = useResponsive('up', 'lg');\n  const isPortrait = useMediaQuery('(orientation: portrait)');\n  const settings = useSettingsContext();\n  const isVertical = settings.themeLayout === 'vertical';\n  const dispatch = useDispatch();\n\n  const fetchGame = useCallback(async () => {\n    if (gameId) {\n      const res = await getGame(gameId);\n      dispatch(getGameSuccess(res));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, gameId]);\n\n  useEffect(() => {\n    fetchGame();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [fetchGame]);\n\n  if (isMobile && isPortrait) {\n    return (\n      <Container maxWidth=\"xl\">\n        <Stack alignItems=\"center\" justifyContent=\"center\" height=\"100vh\">\n          <Typography variant=\"h6\">\n            Veuillez retourner votre appareil en mode paysage pour une meilleure exp√©rience.\n          </Typography>\n        </Stack>\n      </Container>\n    );\n  }\n\n  if ((!isPortrait && !isDesktop) || IS_VENDOR_PANEL) {\n    return (\n      <Container maxWidth=\"xl\">\n        <Grid container spacing={2}>\n          <Grid xs={12} md={12}>\n            {game_detail && (\n              <Stack spacing={2}>\n                <GamePreview game_detail={game_detail} />\n              </Stack>\n            )}\n          </Grid>\n        </Grid>\n      </Container>\n    );\n  }\n\n  return (\n    <Container maxWidth=\"xl\">\n      <Grid container spacing={2}>\n        {lgUp && !isVertical && (\n          <Grid xs={12} md={3}>\n            <Stack spacing={2}>\n              <Card>\n                <AppGames title=\"Jeux\" />\n              </Card>\n            </Stack>\n          </Grid>\n        )}\n        <Grid xs={12} md={lgUp ? 9 : 12}>\n          {game_detail && (\n            <Stack spacing={2}>\n              <GamePreview game_detail={game_detail} />\n            </Stack>\n          )}\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n\nimport { OverviewGameView } from 'src/sections/overview/casino/view';\n\n// ----------------------------------------------------------------------\n\nexport default function OverviewAppPage() {\n  return (\n    <>\n      <Helmet>\n        <title> Game: Casino</title>\n      </Helmet>\n\n      <OverviewGameView />\n    </>\n  );\n}\n"],"names":["StyledBox","styled","Box","_ref","theme","border","concat","alpha","palette","primary","main","borderRadius","shape","overflow","width","height","paddingBottom","position","Iframe","top","left","GamePreview","_ref2","game_detail","useTheme","boxRef","useRef","dispatch","useDispatch","currentLang","useLocales","accessToken","sessionStorage","getItem","wallet","useSelector","state","urlWithToken","url","IS_VENDOR_PANEL","value","currency","useEffect","handleMessage","async","_event$data","event","data","refreshBalance","getWallet","window","addEventListener","removeEventListener","_jsx","children","_jsxs","Button","onClick","handleFullScreen","boxElement","current","requestFullscreen","webkitRequestFullscreen","msRequestFullscreen","console","error","variant","color","sx","mb","ref","src","allowFullScreen","OverviewGameView","generale","gameId","useParams","isMobile","useResponsive","isDesktop","lgUp","isPortrait","useMediaQuery","isVertical","useSettingsContext","themeLayout","fetchGame","useCallback","res","getGame","getGameSuccess","Container","maxWidth","Stack","alignItems","justifyContent","Typography","Grid","container","spacing","xs","md","Card","AppGames","title","OverviewAppPage","_Fragment","Helmet"],"sourceRoot":""}