{"version":3,"file":"static/js/713.ea1cd0c4.chunk.js","mappings":"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","sources":["components/lightbox/styles.tsx","components/lightbox/lightbox.tsx","components/lightbox/use-light-box.ts","components/search-not-found/search-not-found.tsx","api/chat.ts","sections/chat/hooks/use-collapse-nav.ts","sections/chat/chat-nav-item.tsx","sections/chat/hooks/use-get-nav-item.ts","sections/chat/chat-nav-account.tsx","sections/chat/chat-skeleton.tsx","sections/chat/chat-nav-search-results.tsx","sections/chat/chat-nav.tsx","sections/chat/chat-room-participant-dialog.tsx","sections/chat/chat-room-group.tsx","sections/chat/chat-room-single.tsx","sections/chat/chat-room-attachments.tsx","sections/chat/chat-room.tsx","sections/chat/chat-message-item.tsx","sections/chat/hooks/use-get-message.ts","sections/chat/chat-message-list.tsx","sections/chat/hooks/use-messages-scroll.ts","sections/chat/chat-message-input.tsx","sections/chat/chat-header-detail.tsx","sections/chat/chat-header-compose.tsx","sections/chat/view/chat-view.tsx","pages/dashboard/chat.tsx","utils/uuidv4.ts","../node_modules/@mui/material/AvatarGroup/AvatarGroup.js","../node_modules/@mui/material/node_modules/@mui/base/ClickAwayListener/ClickAwayListener.js","../node_modules/lodash/_baseFlatten.js","../node_modules/lodash/_isFlattenable.js","../node_modules/lodash/flatten.js"],"sourcesContent":["import GlobalStyles from '@mui/material/GlobalStyles';\nimport { alpha, useTheme } from '@mui/material/styles';\n\n// ----------------------------------------------------------------------\n\nexport default function StyledLightbox() {\n  const theme = useTheme();\n\n  const inputGlobalStyles = (\n    <GlobalStyles\n      styles={{\n        '.yarl__root': {\n          '--yarl__thumbnails_thumbnail_padding': 0,\n          '--yarl__thumbnails_thumbnail_border': 'transparent',\n          '--yarl__color_backdrop': alpha(theme.palette.grey[900], 0.9),\n          '--yarl__slide_captions_container_background': alpha(theme.palette.grey[900], 0.48),\n        },\n        // Caption\n        '.yarl__slide_title': {\n          fontSize: theme.typography.h5.fontSize,\n          fontWeight: theme.typography.h5.fontWeight,\n          lineHeight: theme.typography.h5.lineHeight,\n        },\n        '.yarl__slide_description': {\n          fontSize: theme.typography.body2.fontSize,\n          fontWeight: theme.typography.body2.fontWeight,\n          lineHeight: theme.typography.body2.lineHeight,\n        },\n        // Button\n        '.yarl__button': {\n          filter: 'unset',\n        },\n        // Thumbnails\n        '.yarl__thumbnails_thumbnail': {\n          opacity: 0.48,\n          '&.yarl__thumbnails_thumbnail_active': {\n            opacity: 1,\n          },\n        },\n        '.yarl__thumbnails_vignette': {\n          '--yarl__thumbnails_vignette_size': 0,\n        },\n        // Video\n        '.yarl__video_container': {\n          backgroundColor: theme.palette.common.black,\n        },\n      }}\n    />\n  );\n\n  return inputGlobalStyles;\n}\n","import Zoom from 'yet-another-react-lightbox/plugins/zoom';\nimport Video from 'yet-another-react-lightbox/plugins/video';\nimport Captions from 'yet-another-react-lightbox/plugins/captions';\nimport Slideshow from 'yet-another-react-lightbox/plugins/slideshow';\nimport Fullscreen from 'yet-another-react-lightbox/plugins/fullscreen';\nimport Thumbnails from 'yet-another-react-lightbox/plugins/thumbnails';\nimport ReactLightbox, { useLightboxState } from 'yet-another-react-lightbox';\n\nimport Box from '@mui/material/Box';\n\nimport Iconify from '../iconify';\nimport StyledLightbox from './styles';\nimport { LightBoxProps } from './types';\n\n// ----------------------------------------------------------------------\n\nexport default function Lightbox({\n  slides,\n  disabledZoom,\n  disabledVideo,\n  disabledTotal,\n  disabledCaptions,\n  disabledSlideshow,\n  disabledThumbnails,\n  disabledFullscreen,\n  onGetCurrentIndex,\n  ...other\n}: LightBoxProps) {\n  const totalItems = slides ? slides.length : 0;\n\n  return (\n    <>\n      <StyledLightbox />\n\n      <ReactLightbox\n        slides={slides}\n        animation={{ swipe: 240 }}\n        carousel={{ finite: totalItems < 5 }}\n        controller={{ closeOnBackdropClick: true }}\n        plugins={getPlugins({\n          disabledZoom,\n          disabledVideo,\n          disabledCaptions,\n          disabledSlideshow,\n          disabledThumbnails,\n          disabledFullscreen,\n        })}\n        on={{\n          view: ({ index }: { index: number }) => {\n            if (onGetCurrentIndex) {\n              onGetCurrentIndex(index);\n            }\n          },\n        }}\n        toolbar={{\n          buttons: [\n            <DisplayTotal key={0} totalItems={totalItems} disabledTotal={disabledTotal} />,\n            'close',\n          ],\n        }}\n        render={{\n          iconClose: () => <Iconify width={24} icon=\"carbon:close\" />,\n          iconZoomIn: () => <Iconify width={24} icon=\"carbon:zoom-in\" />,\n          iconZoomOut: () => <Iconify width={24} icon=\"carbon:zoom-out\" />,\n          iconSlideshowPlay: () => <Iconify width={24} icon=\"carbon:play\" />,\n          iconSlideshowPause: () => <Iconify width={24} icon=\"carbon:pause\" />,\n          iconPrev: () => <Iconify width={32} icon=\"carbon:chevron-left\" />,\n          iconNext: () => <Iconify width={32} icon=\"carbon:chevron-right\" />,\n          iconExitFullscreen: () => <Iconify width={24} icon=\"carbon:center-to-fit\" />,\n          iconEnterFullscreen: () => <Iconify width={24} icon=\"carbon:fit-to-screen\" />,\n        }}\n        {...other}\n      />\n    </>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nexport function getPlugins({\n  disabledZoom,\n  disabledVideo,\n  disabledCaptions,\n  disabledSlideshow,\n  disabledThumbnails,\n  disabledFullscreen,\n}: LightBoxProps) {\n  let plugins = [Captions, Fullscreen, Slideshow, Thumbnails, Video, Zoom];\n\n  if (disabledThumbnails) {\n    plugins = plugins.filter((plugin) => plugin !== Thumbnails);\n  }\n  if (disabledCaptions) {\n    plugins = plugins.filter((plugin) => plugin !== Captions);\n  }\n  if (disabledFullscreen) {\n    plugins = plugins.filter((plugin) => plugin !== Fullscreen);\n  }\n  if (disabledSlideshow) {\n    plugins = plugins.filter((plugin) => plugin !== Slideshow);\n  }\n  if (disabledZoom) {\n    plugins = plugins.filter((plugin) => plugin !== Zoom);\n  }\n  if (disabledVideo) {\n    plugins = plugins.filter((plugin) => plugin !== Video);\n  }\n\n  return plugins;\n}\n\n// ----------------------------------------------------------------------\n\ntype DisplayTotalProps = {\n  totalItems: number;\n  disabledTotal?: boolean;\n};\n\nexport function DisplayTotal({ totalItems, disabledTotal }: DisplayTotalProps) {\n  const { currentIndex } = useLightboxState();\n\n  if (disabledTotal) {\n    return null;\n  }\n\n  return (\n    <Box\n      component=\"span\"\n      className=\"yarl__button\"\n      sx={{\n        typography: 'body2',\n        alignItems: 'center',\n        display: 'inline-flex',\n        justifyContent: 'center',\n      }}\n    >\n      <strong> {currentIndex + 1} </strong> / {totalItems}\n    </Box>\n  );\n}\n","import { useState, useCallback } from 'react';\nimport { Slide, SlideImage, SlideVideo } from 'yet-another-react-lightbox';\n\n// ----------------------------------------------------------------------\n\ntype ReturnType = {\n  open: boolean;\n  selected: number;\n  onClose: VoidFunction;\n  onOpen: (slideUrl: string) => void;\n  setSelected: React.Dispatch<React.SetStateAction<number>>;\n};\n\nexport default function useLightBox(slides: Slide[]): ReturnType {\n  const [selected, setSelected] = useState(-1);\n\n  const handleOpen = useCallback(\n    (slideUrl: string) => {\n      const slideIndex = slides.findIndex((slide) =>\n        slide.type === 'video'\n          ? (slide as SlideVideo).poster === slideUrl\n          : (slide as SlideImage).src === slideUrl\n      );\n\n      setSelected(slideIndex);\n    },\n    [slides]\n  );\n\n  const handleClose = useCallback(() => {\n    setSelected(-1);\n  }, []);\n\n  return {\n    selected,\n    open: selected >= 0,\n    onOpen: handleOpen,\n    onClose: handleClose,\n    setSelected,\n  };\n}\n","import Typography from '@mui/material/Typography';\nimport Paper, { PaperProps } from '@mui/material/Paper';\n\n// ----------------------------------------------------------------------\n\ninterface Props extends PaperProps {\n  query?: string;\n}\n\nexport default function SearchNotFound({ query, sx, ...other }: Props) {\n  return query ? (\n    <Paper\n      sx={{\n        bgcolor: 'unset',\n        textAlign: 'center',\n        ...sx,\n      }}\n      {...other}\n    >\n      <Typography variant=\"h6\" gutterBottom>\n        Not Found\n      </Typography>\n\n      <Typography variant=\"body2\">\n        No results found for &nbsp;\n        <strong>&quot;{query}&quot;</strong>.\n        <br /> Try checking for typos or using complete words.\n      </Typography>\n    </Paper>\n  ) : (\n    <Typography variant=\"body2\" sx={sx}>\n      Please enter keywords\n    </Typography>\n  );\n}\n","import { useMemo } from 'react';\nimport keyBy from 'lodash/keyBy';\nimport useSWR, { mutate } from 'swr';\n\nimport axios, { fetcher, endpoints } from 'src/utils/axios';\n\nimport {\n  IChatMessage,\n  IChatParticipant,\n  IChatConversation,\n  IChatConversations,\n} from 'src/types/chat';\n\n// ----------------------------------------------------------------------\n\nconst options = {\n  revalidateIfStale: false,\n  revalidateOnFocus: false,\n  revalidateOnReconnect: false,\n};\n\nexport function useGetContacts() {\n  const URL = [endpoints.chat, { params: { endpoint: 'contacts' } }];\n\n  const { data, isLoading, error, isValidating } = useSWR(URL, fetcher, options);\n\n  const memoizedValue = useMemo(\n    () => ({\n      contacts: (data?.contacts as IChatParticipant[]) || [],\n      contactsLoading: isLoading,\n      contactsError: error,\n      contactsValidating: isValidating,\n      contactsEmpty: !isLoading && !data?.contacts.length,\n    }),\n    [data?.contacts, error, isLoading, isValidating]\n  );\n\n  return memoizedValue;\n}\n\n// ----------------------------------------------------------------------\n\nexport function useGetConversations() {\n  const URL = [endpoints.chat, { params: { endpoint: 'conversations' } }];\n\n  const { data, isLoading, error, isValidating } = useSWR(URL, fetcher, options);\n\n  const memoizedValue = useMemo(() => {\n    const byId = keyBy(data?.conversations, 'id') || {};\n    const allIds = Object.keys(byId) || [];\n\n    return {\n      conversations: {\n        byId,\n        allIds,\n      } as IChatConversations,\n      conversationsLoading: isLoading,\n      conversationsError: error,\n      conversationsValidating: isValidating,\n      conversationsEmpty: !isLoading && !allIds.length,\n    };\n  }, [data?.conversations, error, isLoading, isValidating]);\n\n  return memoizedValue;\n}\n\n// ----------------------------------------------------------------------\n\nexport function useGetConversation(conversationId: string) {\n  const URL = conversationId\n    ? [endpoints.chat, { params: { conversationId, endpoint: 'conversation' } }]\n    : '';\n\n  const { data, isLoading, error, isValidating } = useSWR(URL, fetcher, options);\n\n  const memoizedValue = useMemo(\n    () => ({\n      conversation: data?.conversation as IChatConversation,\n      conversationLoading: isLoading,\n      conversationError: error,\n      conversationValidating: isValidating,\n    }),\n    [data?.conversation, error, isLoading, isValidating]\n  );\n\n  return memoizedValue;\n}\n\n// ----------------------------------------------------------------------\n\nexport async function sendMessage(conversationId: string, messageData: IChatMessage) {\n  const CONVERSATIONS_URL = [endpoints.chat, { params: { endpoint: 'conversations' } }];\n\n  const CONVERSATION_URL = [\n    endpoints.chat,\n    {\n      params: { conversationId, endpoint: 'conversation' },\n    },\n  ];\n\n  /**\n   * Work on server\n   */\n  // const data = { conversationId, messageData };\n  // await axios.put(endpoints.chat, data);\n\n  /**\n   * Work in local\n   */\n  mutate(\n    CONVERSATION_URL,\n    (currentData: any) => {\n      const { conversation: currentConversation } = currentData;\n\n      const conversation = {\n        ...currentConversation,\n        messages: [...currentConversation.messages, messageData],\n      };\n\n      return {\n        conversation,\n      };\n    },\n    false\n  );\n\n  /**\n   * Work in local\n   */\n  mutate(\n    CONVERSATIONS_URL,\n    (currentData: any) => {\n      const { conversations: currentConversations } = currentData;\n\n      const conversations: IChatConversation[] = currentConversations.map(\n        (conversation: IChatConversation) =>\n          conversation.id === conversationId\n            ? {\n                ...conversation,\n                messages: [...conversation.messages, messageData],\n              }\n            : conversation\n      );\n\n      return {\n        conversations,\n      };\n    },\n    false\n  );\n}\n\n// ----------------------------------------------------------------------\n\nexport async function createConversation(conversationData: IChatConversation) {\n  const URL = [endpoints.chat, { params: { endpoint: 'conversations' } }];\n\n  /**\n   * Work on server\n   */\n  const data = { conversationData };\n  const res = await axios.post(endpoints.chat, data);\n\n  /**\n   * Work in local\n   */\n  mutate(\n    URL,\n    (currentData: any) => {\n      const conversations: IChatConversation[] = [...currentData.conversations, conversationData];\n      return {\n        ...currentData,\n        conversations,\n      };\n    },\n    false\n  );\n\n  return res.data;\n}\n\n// ----------------------------------------------------------------------\n\nexport async function clickConversation(conversationId: string) {\n  const URL = endpoints.chat;\n\n  /**\n   * Work on server\n   */\n  // await axios.get(URL, { params: { conversationId, endpoint: 'mark-as-seen' } });\n\n  /**\n   * Work in local\n   */\n  mutate(\n    [\n      URL,\n      {\n        params: { endpoint: 'conversations' },\n      },\n    ],\n    (currentData: any) => {\n      const conversations: IChatConversations = currentData.conversations.map(\n        (conversation: IChatConversation) =>\n          conversation.id === conversationId ? { ...conversation, unreadCount: 0 } : conversation\n      );\n\n      return {\n        ...currentData,\n        conversations,\n      };\n    },\n    false\n  );\n}\n","import { useState, useCallback } from 'react';\n\n// ----------------------------------------------------------------------\n\nexport default function useCollapseNav() {\n  const [openMobile, setOpenMobile] = useState(false);\n\n  const [collapseDesktop, setCollapseDesktop] = useState(false);\n\n  const onCollapseDesktop = useCallback(() => {\n    setCollapseDesktop((prev) => !prev);\n  }, []);\n\n  const onCloseDesktop = useCallback(() => {\n    setCollapseDesktop(false);\n  }, []);\n\n  const onOpenMobile = useCallback(() => {\n    setOpenMobile(true);\n  }, []);\n\n  const onCloseMobile = useCallback(() => {\n    setOpenMobile(false);\n  }, []);\n\n  return {\n    openMobile,\n    collapseDesktop,\n    //\n    onOpenMobile,\n    onCloseMobile,\n    onCloseDesktop,\n    onCollapseDesktop,\n  };\n}\n","import { useCallback } from 'react';\nimport { formatDistanceToNowStrict } from 'date-fns';\n\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Badge from '@mui/material/Badge';\nimport Avatar from '@mui/material/Avatar';\nimport Typography from '@mui/material/Typography';\nimport AvatarGroup from '@mui/material/AvatarGroup';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemButton from '@mui/material/ListItemButton';\n\nimport { paths } from 'src/routes/paths';\nimport { useRouter } from 'src/routes/hooks';\n\nimport { useResponsive } from 'src/hooks/use-responsive';\nimport { useMockedUser } from 'src/hooks/use-mocked-user';\n\nimport { clickConversation } from 'src/api/chat';\n\nimport { IChatConversation } from 'src/types/chat';\n\nimport { useGetNavItem } from './hooks';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  selected: boolean;\n  collapse: boolean;\n  onCloseMobile: VoidFunction;\n  conversation: IChatConversation;\n};\n\nexport default function ChatNavItem({ selected, collapse, conversation, onCloseMobile }: Props) {\n  const { user } = useMockedUser();\n\n  const mdUp = useResponsive('up', 'md');\n\n  const router = useRouter();\n\n  const { group, displayName, displayText, participants, lastActivity, hasOnlineInGroup } =\n    useGetNavItem({\n      conversation,\n      currentUserId: `${user?.id}`,\n    });\n\n  const singleParticipant = participants[0];\n\n  const { name, avatarUrl, status } = singleParticipant;\n\n  const handleClickConversation = useCallback(async () => {\n    try {\n      if (!mdUp) {\n        onCloseMobile();\n      }\n\n      await clickConversation(conversation.id);\n\n      router.push(`${paths.dashboard.chat}?id=${conversation.id}`);\n    } catch (error) {\n      console.error(error);\n    }\n  }, [conversation.id, mdUp, onCloseMobile, router]);\n\n  const renderGroup = (\n    <Badge\n      variant={hasOnlineInGroup ? 'online' : 'invisible'}\n      anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n    >\n      <AvatarGroup variant=\"compact\" sx={{ width: 48, height: 48 }}>\n        {participants.slice(0, 2).map((participant) => (\n          <Avatar key={participant.id} alt={participant.name} src={participant.avatarUrl} />\n        ))}\n      </AvatarGroup>\n    </Badge>\n  );\n\n  const renderSingle = (\n    <Badge key={status} variant={status} anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}>\n      <Avatar alt={name} src={avatarUrl} sx={{ width: 48, height: 48 }} />\n    </Badge>\n  );\n\n  return (\n    <ListItemButton\n      disableGutters\n      onClick={handleClickConversation}\n      sx={{\n        py: 1.5,\n        px: 2.5,\n        ...(selected && {\n          bgcolor: 'action.selected',\n        }),\n      }}\n    >\n      <Badge\n        color=\"error\"\n        overlap=\"circular\"\n        badgeContent={collapse ? conversation.unreadCount : 0}\n      >\n        {group ? renderGroup : renderSingle}\n      </Badge>\n\n      {!collapse && (\n        <>\n          <ListItemText\n            sx={{ ml: 2 }}\n            primary={displayName}\n            primaryTypographyProps={{\n              noWrap: true,\n              variant: 'subtitle2',\n            }}\n            secondary={displayText}\n            secondaryTypographyProps={{\n              noWrap: true,\n              component: 'span',\n              variant: conversation.unreadCount ? 'subtitle2' : 'body2',\n              color: conversation.unreadCount ? 'text.primary' : 'text.secondary',\n            }}\n          />\n\n          <Stack alignItems=\"flex-end\" sx={{ ml: 2, height: 44 }}>\n            <Typography\n              noWrap\n              variant=\"body2\"\n              component=\"span\"\n              sx={{\n                mb: 1.5,\n                fontSize: 12,\n                color: 'text.disabled',\n              }}\n            >\n              {formatDistanceToNowStrict(new Date(lastActivity), {\n                addSuffix: false,\n              })}\n            </Typography>\n\n            {!!conversation.unreadCount && (\n              <Box\n                sx={{\n                  width: 8,\n                  height: 8,\n                  bgcolor: 'info.main',\n                  borderRadius: '50%',\n                }}\n              />\n            )}\n          </Stack>\n        </>\n      )}\n    </ListItemButton>\n  );\n}\n","import { IChatConversation } from 'src/types/chat';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  currentUserId: string;\n  conversation: IChatConversation;\n};\n\nexport default function useGetNavItem({ currentUserId, conversation }: Props) {\n  const { messages, participants } = conversation;\n\n  const participantsInConversation = participants.filter(\n    (participant) => participant.id !== currentUserId\n  );\n\n  const lastMessage = messages[messages.length - 1];\n\n  const group = participantsInConversation.length > 1;\n\n  const displayName = participantsInConversation.map((participant) => participant.name).join(', ');\n\n  const hasOnlineInGroup = group\n    ? participantsInConversation.map((item) => item.status).includes('online')\n    : false;\n\n  let displayText = '';\n\n  if (lastMessage) {\n    const sender = lastMessage.senderId === currentUserId ? 'You: ' : '';\n\n    const message = lastMessage.contentType === 'image' ? 'Sent a photo' : lastMessage.body;\n\n    displayText = `${sender}${message}`;\n  }\n\n  return {\n    group,\n    displayName,\n    displayText,\n    participants: participantsInConversation,\n    lastActivity: lastMessage.createdAt,\n    hasOnlineInGroup,\n  };\n}\n","import { useState, useCallback } from 'react';\n\nimport Stack from '@mui/material/Stack';\nimport Avatar from '@mui/material/Avatar';\nimport Divider from '@mui/material/Divider';\nimport Tooltip from '@mui/material/Tooltip';\nimport MenuItem from '@mui/material/MenuItem';\nimport InputBase from '@mui/material/InputBase';\nimport IconButton from '@mui/material/IconButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport Badge, { badgeClasses } from '@mui/material/Badge';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\n\nimport { useMockedUser } from 'src/hooks/use-mocked-user';\n\nimport Iconify from 'src/components/iconify';\nimport CustomPopover, { usePopover } from 'src/components/custom-popover';\n\n// ----------------------------------------------------------------------\n\nexport default function ChatNavAccount() {\n  const { user } = useMockedUser();\n\n  const popover = usePopover();\n\n  const [status, setStatus] = useState<'online' | 'alway' | 'busy' | 'offline'>('online');\n\n  const handleChangeStatus = useCallback((event: SelectChangeEvent) => {\n    setStatus(event.target.value as 'online' | 'alway' | 'busy' | 'offline');\n  }, []);\n\n  return (\n    <>\n      <Badge variant={status} anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}>\n        <Avatar\n          src={user?.photoURL}\n          alt={user?.displayName}\n          onClick={popover.onOpen}\n          sx={{ cursor: 'pointer', width: 48, height: 48 }}\n        >\n          {user?.displayName?.charAt(0).toUpperCase()}\n        </Avatar>\n      </Badge>\n\n      <CustomPopover open={popover.open} onClose={popover.onClose} arrow=\"top-left\" sx={{ p: 0 }}>\n        <Stack\n          direction=\"row\"\n          alignItems=\"center\"\n          spacing={2}\n          sx={{\n            py: 2,\n            pr: 1,\n            pl: 2.5,\n          }}\n        >\n          <ListItemText\n            primary={user?.displayName}\n            secondary={user?.email}\n            secondaryTypographyProps={{ component: 'span' }}\n          />\n\n          <Tooltip title=\"Log out\">\n            <IconButton color=\"error\">\n              <Iconify icon=\"ic:round-power-settings-new\" />\n            </IconButton>\n          </Tooltip>\n        </Stack>\n\n        <Divider sx={{ borderStyle: 'dashed' }} />\n\n        <Stack sx={{ p: 1 }}>\n          <MenuItem>\n            <Badge\n              variant={status}\n              sx={{\n                [`& .${badgeClasses.badge}`]: {\n                  position: 'static',\n                  m: 0.75,\n                  width: 12,\n                  height: 12,\n                  flexShrink: 0,\n                },\n              }}\n            />\n\n            <Select\n              native\n              fullWidth\n              value={status}\n              onChange={handleChangeStatus}\n              input={<InputBase sx={{ pl: 2 }} />}\n              inputProps={{\n                sx: { textTransform: 'capitalize' },\n              }}\n            >\n              {['online', 'alway', 'busy', 'offline'].map((option) => (\n                <option key={option} value={option}>\n                  {option}\n                </option>\n              ))}\n            </Select>\n          </MenuItem>\n\n          <MenuItem>\n            <Iconify icon=\"solar:user-id-bold\" width={24} />\n            Profile\n          </MenuItem>\n\n          <MenuItem>\n            <Iconify icon=\"eva:settings-2-fill\" width={24} />\n            Settings\n          </MenuItem>\n        </Stack>\n      </CustomPopover>\n    </>\n  );\n}\n","import Skeleton from '@mui/material/Skeleton';\nimport Stack, { StackProps } from '@mui/material/Stack';\n\n// ----------------------------------------------------------------------\n\nexport function ChatNavItemSkeleton({ sx, ...other }: StackProps) {\n  return (\n    <Stack\n      spacing={2}\n      direction=\"row\"\n      alignItems=\"center\"\n      sx={{\n        px: 2.5,\n        py: 1.5,\n        ...sx,\n      }}\n      {...other}\n    >\n      <Skeleton variant=\"circular\" sx={{ width: 48, height: 48 }} />\n\n      <Stack spacing={1} flexGrow={1}>\n        <Skeleton sx={{ width: 0.75, height: 10 }} />\n        <Skeleton sx={{ width: 0.5, height: 10 }} />\n      </Stack>\n    </Stack>\n  );\n}\n","import Avatar from '@mui/material/Avatar';\nimport Typography from '@mui/material/Typography';\nimport ListItemButton from '@mui/material/ListItemButton';\n\nimport SearchNotFound from 'src/components/search-not-found';\n\nimport { IChatParticipant } from 'src/types/chat';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  query: string;\n  results: IChatParticipant[];\n  onClickResult: (contact: IChatParticipant) => void;\n};\n\nexport default function ChatNavSearchResults({ query, results, onClickResult }: Props) {\n  const totalResults = results.length;\n\n  const notFound = !totalResults && !!query;\n\n  return (\n    <>\n      <Typography\n        variant=\"h6\"\n        sx={{\n          px: 2.5,\n          mb: 2,\n        }}\n      >\n        Contacts ({totalResults})\n      </Typography>\n\n      {notFound ? (\n        <SearchNotFound\n          query={query}\n          sx={{\n            p: 3,\n            mx: 'auto',\n            width: `calc(100% - 40px)`,\n            bgcolor: 'background.neutral',\n          }}\n        />\n      ) : (\n        <>\n          {results.map((result) => (\n            <ListItemButton\n              key={result.id}\n              onClick={() => onClickResult(result)}\n              sx={{\n                px: 2.5,\n                py: 1.5,\n                typography: 'subtitle2',\n              }}\n            >\n              <Avatar alt={result.name} src={result.avatarUrl} sx={{ mr: 2 }} />\n              {result.name}\n            </ListItemButton>\n          ))}\n        </>\n      )}\n    </>\n  );\n}\n","import { useState, useEffect, useCallback } from 'react';\n\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Drawer from '@mui/material/Drawer';\nimport { useTheme } from '@mui/material/styles';\nimport TextField from '@mui/material/TextField';\nimport IconButton from '@mui/material/IconButton';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\n\nimport { paths } from 'src/routes/paths';\nimport { useRouter } from 'src/routes/hooks';\n\nimport { useResponsive } from 'src/hooks/use-responsive';\n\nimport Iconify from 'src/components/iconify';\nimport Scrollbar from 'src/components/scrollbar';\n\nimport { IChatParticipant, IChatConversations } from 'src/types/chat';\n\nimport { useCollapseNav } from './hooks';\nimport ChatNavItem from './chat-nav-item';\nimport ChatNavAccount from './chat-nav-account';\nimport { ChatNavItemSkeleton } from './chat-skeleton';\nimport ChatNavSearchResults from './chat-nav-search-results';\n\n// ----------------------------------------------------------------------\n\nconst NAV_WIDTH = 320;\n\nconst NAV_COLLAPSE_WIDTH = 96;\n\ntype Props = {\n  loading: boolean;\n  selectedConversationId: string;\n  contacts: IChatParticipant[];\n  conversations: IChatConversations;\n};\n\nexport default function ChatNav({\n  loading,\n  contacts,\n  conversations,\n  selectedConversationId,\n}: Props) {\n  const theme = useTheme();\n\n  const router = useRouter();\n\n  const mdUp = useResponsive('up', 'md');\n\n  const {\n    collapseDesktop,\n    onCloseDesktop,\n    onCollapseDesktop,\n    //\n    openMobile,\n    onOpenMobile,\n    onCloseMobile,\n  } = useCollapseNav();\n\n  const [searchContacts, setSearchContacts] = useState<{\n    query: string;\n    results: IChatParticipant[];\n  }>({\n    query: '',\n    results: [],\n  });\n\n  useEffect(() => {\n    if (!mdUp) {\n      onCloseDesktop();\n    }\n  }, [onCloseDesktop, mdUp]);\n\n  const handleToggleNav = useCallback(() => {\n    if (mdUp) {\n      onCollapseDesktop();\n    } else {\n      onCloseMobile();\n    }\n  }, [mdUp, onCloseMobile, onCollapseDesktop]);\n\n  const handleClickCompose = useCallback(() => {\n    if (!mdUp) {\n      onCloseMobile();\n    }\n    router.push(paths.dashboard.chat);\n  }, [mdUp, onCloseMobile, router]);\n\n  const handleSearchContacts = useCallback(\n    (inputValue: string) => {\n      setSearchContacts((prevState) => ({\n        ...prevState,\n        query: inputValue,\n      }));\n\n      if (inputValue) {\n        const results = contacts.filter((contact) =>\n          contact.name.toLowerCase().includes(inputValue)\n        );\n\n        setSearchContacts((prevState) => ({\n          ...prevState,\n          results,\n        }));\n      }\n    },\n    [contacts]\n  );\n\n  const handleClickAwaySearch = useCallback(() => {\n    setSearchContacts({\n      query: '',\n      results: [],\n    });\n  }, []);\n\n  const handleClickResult = useCallback(\n    (result: IChatParticipant) => {\n      handleClickAwaySearch();\n\n      router.push(`${paths.dashboard.chat}?id=${result.id}`);\n    },\n    [handleClickAwaySearch, router]\n  );\n\n  const renderToggleBtn = (\n    <IconButton\n      onClick={onOpenMobile}\n      sx={{\n        left: 0,\n        top: 84,\n        zIndex: 9,\n        width: 32,\n        height: 32,\n        position: 'absolute',\n        borderRadius: `0 12px 12px 0`,\n        bgcolor: theme.palette.primary.main,\n        boxShadow: theme.customShadows.primary,\n        color: theme.palette.primary.contrastText,\n        '&:hover': {\n          bgcolor: theme.palette.primary.darker,\n        },\n      }}\n    >\n      <Iconify width={16} icon=\"solar:users-group-rounded-bold\" />\n    </IconButton>\n  );\n\n  const renderSkeleton = (\n    <>\n      {[...Array(12)].map((_, index) => (\n        <ChatNavItemSkeleton key={index} />\n      ))}\n    </>\n  );\n\n  const renderList = (\n    <>\n      {conversations.allIds.map((conversationId) => (\n        <ChatNavItem\n          key={conversationId}\n          collapse={collapseDesktop}\n          conversation={conversations.byId[conversationId]}\n          selected={conversationId === selectedConversationId}\n          onCloseMobile={onCloseMobile}\n        />\n      ))}\n    </>\n  );\n\n  const renderListResults = (\n    <ChatNavSearchResults\n      query={searchContacts.query}\n      results={searchContacts.results}\n      onClickResult={handleClickResult}\n    />\n  );\n\n  const renderSearchInput = (\n    <ClickAwayListener onClickAway={handleClickAwaySearch}>\n      <TextField\n        fullWidth\n        value={searchContacts.query}\n        onChange={(event) => handleSearchContacts(event.target.value)}\n        placeholder=\"Search contacts...\"\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <Iconify icon=\"eva:search-fill\" sx={{ color: 'text.disabled' }} />\n            </InputAdornment>\n          ),\n        }}\n        sx={{ mt: 2.5 }}\n      />\n    </ClickAwayListener>\n  );\n\n  const renderContent = (\n    <>\n      <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"center\" sx={{ p: 2.5, pb: 0 }}>\n        {!collapseDesktop && (\n          <>\n            <ChatNavAccount />\n            <Box sx={{ flexGrow: 1 }} />\n          </>\n        )}\n\n        <IconButton onClick={handleToggleNav}>\n          <Iconify\n            icon={collapseDesktop ? 'eva:arrow-ios-forward-fill' : 'eva:arrow-ios-back-fill'}\n          />\n        </IconButton>\n\n        {!collapseDesktop && (\n          <IconButton onClick={handleClickCompose}>\n            <Iconify width={24} icon=\"solar:user-plus-bold\" />\n          </IconButton>\n        )}\n      </Stack>\n\n      <Box sx={{ p: 2.5, pt: 0 }}>{!collapseDesktop && renderSearchInput}</Box>\n\n      <Scrollbar sx={{ pb: 1 }}>\n        {searchContacts.query && renderListResults}\n\n        {loading && renderSkeleton}\n\n        {!searchContacts.query && !!conversations.allIds.length && renderList}\n      </Scrollbar>\n    </>\n  );\n\n  return (\n    <>\n      {!mdUp && renderToggleBtn}\n\n      {mdUp ? (\n        <Stack\n          sx={{\n            height: 1,\n            flexShrink: 0,\n            width: NAV_WIDTH,\n            borderRight: `solid 1px ${theme.palette.divider}`,\n            transition: theme.transitions.create(['width'], {\n              duration: theme.transitions.duration.shorter,\n            }),\n            ...(collapseDesktop && {\n              width: NAV_COLLAPSE_WIDTH,\n            }),\n          }}\n        >\n          {renderContent}\n        </Stack>\n      ) : (\n        <Drawer\n          open={openMobile}\n          onClose={onCloseMobile}\n          slotProps={{\n            backdrop: { invisible: true },\n          }}\n          PaperProps={{\n            sx: { width: NAV_WIDTH },\n          }}\n        >\n          {renderContent}\n        </Drawer>\n      )}\n    </>\n  );\n}\n","import Stack from '@mui/material/Stack';\nimport Avatar from '@mui/material/Avatar';\nimport Dialog from '@mui/material/Dialog';\nimport { alpha } from '@mui/material/styles';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport DialogContent from '@mui/material/DialogContent';\n\nimport Iconify from 'src/components/iconify';\n\nimport { IChatParticipant } from 'src/types/chat';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  open: boolean;\n  onClose: VoidFunction;\n  participant: IChatParticipant;\n};\n\nexport default function ChatRoomParticipantDialog({ participant, open, onClose }: Props) {\n  return (\n    <Dialog fullWidth maxWidth=\"xs\" open={open} onClose={onClose}>\n      <IconButton onClick={onClose} sx={{ position: 'absolute', right: 8, top: 8 }}>\n        <Iconify icon=\"mingcute:close-line\" />\n      </IconButton>\n\n      <DialogContent sx={{ py: 5, px: 3, display: 'flex' }}>\n        <Avatar\n          alt={participant.name}\n          src={participant.avatarUrl}\n          sx={{ width: 96, height: 96, mr: 3 }}\n        />\n\n        <Stack spacing={1}>\n          <Typography variant=\"caption\" sx={{ color: 'primary.main' }}>\n            {participant.role}\n          </Typography>\n\n          <Typography variant=\"subtitle1\">{participant.name}</Typography>\n\n          <Stack direction=\"row\" sx={{ typography: 'caption', color: 'text.disabled' }}>\n            <Iconify\n              icon=\"mingcute:location-fill\"\n              width={16}\n              sx={{ flexShrink: 0, mr: 0.5, mt: '2px' }}\n            />\n            {participant.address}\n          </Stack>\n\n          <Stack spacing={1} direction=\"row\" sx={{ pt: 1.5 }}>\n            <IconButton\n              size=\"small\"\n              color=\"error\"\n              sx={{\n                borderRadius: 1,\n                bgcolor: (theme) => alpha(theme.palette.error.main, 0.08),\n                '&:hover': {\n                  bgcolor: (theme) => alpha(theme.palette.error.main, 0.16),\n                },\n              }}\n            >\n              <Iconify width={18} icon=\"solar:phone-bold\" />\n            </IconButton>\n\n            <IconButton\n              size=\"small\"\n              color=\"info\"\n              sx={{\n                borderRadius: 1,\n                bgcolor: (theme) => alpha(theme.palette.info.main, 0.08),\n                '&:hover': {\n                  bgcolor: (theme) => alpha(theme.palette.info.main, 0.16),\n                },\n              }}\n            >\n              <Iconify width={18} icon=\"solar:chat-round-dots-bold\" />\n            </IconButton>\n\n            <IconButton\n              size=\"small\"\n              color=\"primary\"\n              sx={{\n                borderRadius: 1,\n                bgcolor: (theme) => alpha(theme.palette.primary.main, 0.08),\n                '&:hover': {\n                  bgcolor: (theme) => alpha(theme.palette.primary.main, 0.16),\n                },\n              }}\n            >\n              <Iconify width={18} icon=\"fluent:mail-24-filled\" />\n            </IconButton>\n\n            <IconButton\n              size=\"small\"\n              color=\"secondary\"\n              sx={{\n                borderRadius: 1,\n                bgcolor: (theme) => alpha(theme.palette.secondary.main, 0.08),\n                '&:hover': {\n                  bgcolor: (theme) => alpha(theme.palette.secondary.main, 0.16),\n                },\n              }}\n            >\n              <Iconify width={18} icon=\"solar:videocamera-record-bold\" />\n            </IconButton>\n          </Stack>\n        </Stack>\n      </DialogContent>\n    </Dialog>\n  );\n}\n","import { useState, useCallback } from 'react';\n\nimport Box from '@mui/material/Box';\nimport Badge from '@mui/material/Badge';\nimport Avatar from '@mui/material/Avatar';\nimport Collapse from '@mui/material/Collapse';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemButton from '@mui/material/ListItemButton';\n\nimport { useBoolean } from 'src/hooks/use-boolean';\n\nimport Iconify from 'src/components/iconify';\nimport Scrollbar from 'src/components/scrollbar';\n\nimport { IChatParticipant } from 'src/types/chat';\n\nimport ChatRoomParticipantDialog from './chat-room-participant-dialog';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  participants: IChatParticipant[];\n};\n\nexport default function ChatRoomGroup({ participants }: Props) {\n  const [selected, setSelected] = useState<IChatParticipant | null>(null);\n\n  const collapse = useBoolean(true);\n\n  const handleOpen = useCallback((participant: IChatParticipant) => {\n    setSelected(participant);\n  }, []);\n\n  const handleClose = () => {\n    setSelected(null);\n  };\n\n  const totalParticipants = participants.length;\n\n  const renderBtn = (\n    <ListItemButton\n      onClick={collapse.onToggle}\n      sx={{\n        pl: 2.5,\n        pr: 1.5,\n        height: 40,\n        flexShrink: 0,\n        flexGrow: 'unset',\n        typography: 'overline',\n        color: 'text.secondary',\n        bgcolor: 'background.neutral',\n      }}\n    >\n      <Box component=\"span\" sx={{ flexGrow: 1 }}>\n        In room ({totalParticipants})\n      </Box>\n      <Iconify\n        width={16}\n        icon={collapse.value ? 'eva:arrow-ios-downward-fill' : 'eva:arrow-ios-forward-fill'}\n      />\n    </ListItemButton>\n  );\n\n  const renderContent = (\n    <Scrollbar sx={{ height: 56 * 4 }}>\n      {participants.map((participant) => (\n        <ListItemButton key={participant.id} onClick={() => handleOpen(participant)}>\n          <Badge\n            variant={participant.status}\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n          >\n            <Avatar alt={participant.name} src={participant.avatarUrl} />\n          </Badge>\n\n          <ListItemText\n            sx={{ ml: 2 }}\n            primary={participant.name}\n            secondary={participant.role}\n            primaryTypographyProps={{\n              noWrap: true,\n              typography: 'subtitle2',\n            }}\n            secondaryTypographyProps={{\n              noWrap: true,\n              component: 'span',\n              typography: 'caption',\n            }}\n          />\n        </ListItemButton>\n      ))}\n    </Scrollbar>\n  );\n\n  return (\n    <>\n      {renderBtn}\n\n      <div>\n        <Collapse in={collapse.value}>{renderContent}</Collapse>\n      </div>\n\n      {selected && (\n        <ChatRoomParticipantDialog participant={selected} open={!!selected} onClose={handleClose} />\n      )}\n    </>\n  );\n}\n","import Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Avatar from '@mui/material/Avatar';\nimport Collapse from '@mui/material/Collapse';\nimport Typography from '@mui/material/Typography';\nimport ListItemButton from '@mui/material/ListItemButton';\n\nimport { useBoolean } from 'src/hooks/use-boolean';\n\nimport Iconify from 'src/components/iconify';\n\nimport { IChatParticipant } from 'src/types/chat';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  participant: IChatParticipant;\n};\n\nexport default function ChatRoomSingle({ participant }: Props) {\n  const collapse = useBoolean(true);\n\n  const { name, avatarUrl, role, address, phoneNumber, email } = participant;\n\n  const renderInfo = (\n    <Stack alignItems=\"center\" sx={{ py: 5 }}>\n      <Avatar alt={name} src={avatarUrl} sx={{ width: 96, height: 96, mb: 2 }} />\n      <Typography variant=\"subtitle1\">{name}</Typography>\n      <Typography variant=\"body2\" sx={{ color: 'text.secondary', mt: 0.5 }}>\n        {role}\n      </Typography>\n    </Stack>\n  );\n\n  const renderBtn = (\n    <ListItemButton\n      onClick={collapse.onToggle}\n      sx={{\n        pl: 2.5,\n        pr: 1.5,\n        height: 40,\n        flexShrink: 0,\n        flexGrow: 'unset',\n        typography: 'overline',\n        color: 'text.secondary',\n        bgcolor: 'background.neutral',\n      }}\n    >\n      <Box component=\"span\" sx={{ flexGrow: 1 }}>\n        Information\n      </Box>\n      <Iconify\n        width={16}\n        icon={collapse.value ? 'eva:arrow-ios-downward-fill' : 'eva:arrow-ios-forward-fill'}\n      />\n    </ListItemButton>\n  );\n\n  const renderContent = (\n    <Stack\n      spacing={2}\n      sx={{\n        px: 2,\n        py: 2.5,\n        '& svg': {\n          mr: 1,\n          flexShrink: 0,\n          color: 'text.disabled',\n        },\n      }}\n    >\n      <Stack direction=\"row\">\n        <Iconify icon=\"mingcute:location-fill\" />\n        <Typography variant=\"body2\">{address}</Typography>\n      </Stack>\n\n      <Stack direction=\"row\">\n        <Iconify icon=\"solar:phone-bold\" />\n        <Typography variant=\"body2\">{phoneNumber}</Typography>\n      </Stack>\n\n      <Stack direction=\"row\">\n        <Iconify icon=\"fluent:mail-24-filled\" />\n        <Typography variant=\"body2\" noWrap>\n          {email}\n        </Typography>\n      </Stack>\n    </Stack>\n  );\n\n  return (\n    <>\n      {renderInfo}\n\n      {renderBtn}\n\n      <div>\n        <Collapse in={collapse.value}>{renderContent}</Collapse>\n      </div>\n    </>\n  );\n}\n","import Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemButton from '@mui/material/ListItemButton';\n\nimport { useBoolean } from 'src/hooks/use-boolean';\n\nimport { fDateTime } from 'src/utils/format-time';\n\nimport Iconify from 'src/components/iconify';\nimport Scrollbar from 'src/components/scrollbar';\nimport FileThumbnail from 'src/components/file-thumbnail';\n\nimport { IChatAttachment } from 'src/types/chat';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  attachments: IChatAttachment[];\n};\n\nexport default function ChatRoomAttachments({ attachments }: Props) {\n  const collapse = useBoolean(true);\n\n  const totalAttachments = attachments.length;\n\n  const renderBtn = (\n    <ListItemButton\n      disabled={!attachments.length}\n      onClick={collapse.onToggle}\n      sx={{\n        pl: 2.5,\n        pr: 1.5,\n        height: 40,\n        flexShrink: 0,\n        flexGrow: 'unset',\n        typography: 'overline',\n        color: 'text.secondary',\n        bgcolor: 'background.neutral',\n      }}\n    >\n      <Box component=\"span\" sx={{ flexGrow: 1 }}>\n        Attachments ({totalAttachments})\n      </Box>\n      <Iconify\n        width={16}\n        icon={\n          (!collapse.value && 'eva:arrow-ios-forward-fill') ||\n          (!attachments.length && 'eva:arrow-ios-forward-fill') ||\n          'eva:arrow-ios-downward-fill'\n        }\n      />\n    </ListItemButton>\n  );\n\n  const renderContent = (\n    <Scrollbar sx={{ px: 2, py: 2.5 }}>\n      {attachments.map((attachment, index) => (\n        <Stack\n          key={attachment.name + index}\n          spacing={1.5}\n          direction=\"row\"\n          alignItems=\"center\"\n          sx={{ mb: 2 }}\n        >\n          <Stack\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            sx={{\n              width: 40,\n              height: 40,\n              flexShrink: 0,\n              borderRadius: 1,\n              overflow: 'hidden',\n              position: 'relative',\n              backgroundColor: 'background.neutral',\n            }}\n          >\n            <FileThumbnail\n              imageView\n              file={attachment.preview}\n              onDownload={() => console.info('DOWNLOAD')}\n              sx={{ width: 28, height: 28 }}\n            />\n          </Stack>\n\n          <ListItemText\n            primary={attachment.name}\n            secondary={fDateTime(attachment.createdAt)}\n            primaryTypographyProps={{\n              noWrap: true,\n              typography: 'body2',\n            }}\n            secondaryTypographyProps={{\n              mt: 0.25,\n              noWrap: true,\n              component: 'span',\n              typography: 'caption',\n              color: 'text.disabled',\n            }}\n          />\n        </Stack>\n      ))}\n    </Scrollbar>\n  );\n\n  return (\n    <>\n      {renderBtn}\n\n      <Box\n        sx={{\n          overflow: 'hidden',\n          height: collapse.value ? 1 : 0,\n          transition: (theme) =>\n            theme.transitions.create(['height'], {\n              duration: theme.transitions.duration.shorter,\n            }),\n        }}\n      >\n        {renderContent}\n      </Box>\n    </>\n  );\n}\n","import uniq from 'lodash/uniq';\nimport flatten from 'lodash/flatten';\nimport { useEffect, useCallback } from 'react';\n\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Drawer from '@mui/material/Drawer';\nimport { useTheme } from '@mui/material/styles';\nimport IconButton from '@mui/material/IconButton';\n\nimport { useResponsive } from 'src/hooks/use-responsive';\n\nimport Iconify from 'src/components/iconify';\n\nimport { IChatParticipant, IChatConversation } from 'src/types/chat';\n\nimport { useCollapseNav } from './hooks';\nimport ChatRoomGroup from './chat-room-group';\nimport ChatRoomSingle from './chat-room-single';\nimport ChatRoomAttachments from './chat-room-attachments';\n\n// ----------------------------------------------------------------------\n\nconst NAV_WIDTH = 240;\n\ntype Props = {\n  participants: IChatParticipant[];\n  conversation: IChatConversation;\n};\n\nexport default function ChatRoom({ participants, conversation }: Props) {\n  const theme = useTheme();\n\n  const lgUp = useResponsive('up', 'lg');\n\n  const {\n    collapseDesktop,\n    onCloseDesktop,\n    onCollapseDesktop,\n    //\n    openMobile,\n    onOpenMobile,\n    onCloseMobile,\n  } = useCollapseNav();\n\n  useEffect(() => {\n    if (!lgUp) {\n      onCloseDesktop();\n    }\n  }, [onCloseDesktop, lgUp]);\n\n  const handleToggleNav = useCallback(() => {\n    if (lgUp) {\n      onCollapseDesktop();\n    } else {\n      onOpenMobile();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [lgUp]);\n\n  const group = participants.length > 1;\n\n  const attachments = uniq(flatten(conversation.messages.map((messages) => messages.attachments)));\n\n  const renderContent = (\n    <>\n      {group ? (\n        <ChatRoomGroup participants={participants} />\n      ) : (\n        <ChatRoomSingle participant={participants[0]} />\n      )}\n\n      <ChatRoomAttachments attachments={attachments} />\n    </>\n  );\n\n  const renderToggleBtn = (\n    <IconButton\n      onClick={handleToggleNav}\n      sx={{\n        top: 12,\n        right: 0,\n        zIndex: 9,\n        width: 32,\n        height: 32,\n        borderRight: 0,\n        position: 'absolute',\n        borderRadius: `12px 0 0 12px`,\n        boxShadow: theme.customShadows.z8,\n        bgcolor: theme.palette.background.paper,\n        border: `solid 1px ${theme.palette.divider}`,\n        '&:hover': {\n          bgcolor: theme.palette.background.neutral,\n        },\n        ...(lgUp && {\n          ...(!collapseDesktop && {\n            right: NAV_WIDTH,\n          }),\n        }),\n      }}\n    >\n      {lgUp ? (\n        <Iconify\n          width={16}\n          icon={collapseDesktop ? 'eva:arrow-ios-back-fill' : 'eva:arrow-ios-forward-fill'}\n        />\n      ) : (\n        <Iconify width={16} icon=\"eva:arrow-ios-back-fill\" />\n      )}\n    </IconButton>\n  );\n\n  return (\n    <Box sx={{ position: 'relative' }}>\n      {renderToggleBtn}\n\n      {lgUp ? (\n        <Stack\n          sx={{\n            height: 1,\n            flexShrink: 0,\n            width: NAV_WIDTH,\n            borderLeft: `solid 1px ${theme.palette.divider}`,\n            transition: theme.transitions.create(['width'], {\n              duration: theme.transitions.duration.shorter,\n            }),\n            ...(collapseDesktop && {\n              width: 0,\n            }),\n          }}\n        >\n          {!collapseDesktop && renderContent}\n        </Stack>\n      ) : (\n        <Drawer\n          anchor=\"right\"\n          open={openMobile}\n          onClose={onCloseMobile}\n          slotProps={{\n            backdrop: { invisible: true },\n          }}\n          PaperProps={{\n            sx: { width: NAV_WIDTH },\n          }}\n        >\n          {renderContent}\n        </Drawer>\n      )}\n    </Box>\n  );\n}\n","import { formatDistanceToNowStrict } from 'date-fns';\n\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Avatar from '@mui/material/Avatar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\n\nimport { useMockedUser } from 'src/hooks/use-mocked-user';\n\nimport Iconify from 'src/components/iconify';\n\nimport { IChatMessage, IChatParticipant } from 'src/types/chat';\n\nimport { useGetMessage } from './hooks';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  message: IChatMessage;\n  participants: IChatParticipant[];\n  onOpenLightbox: (value: string) => void;\n};\n\nexport default function ChatMessageItem({ message, participants, onOpenLightbox }: Props) {\n  const { user } = useMockedUser();\n\n  const { me, senderDetails, hasImage } = useGetMessage({\n    message,\n    participants,\n    currentUserId: `${user?.id}`,\n  });\n\n  const { firstName, avatarUrl } = senderDetails;\n\n  const { body, createdAt } = message;\n\n  const renderInfo = (\n    <Typography\n      noWrap\n      variant=\"caption\"\n      sx={{\n        mb: 1,\n        color: 'text.disabled',\n        ...(!me && {\n          mr: 'auto',\n        }),\n      }}\n    >\n      {!me && `${firstName},`} &nbsp;\n      {formatDistanceToNowStrict(new Date(createdAt), {\n        addSuffix: true,\n      })}\n    </Typography>\n  );\n\n  const renderBody = (\n    <Stack\n      sx={{\n        p: 1.5,\n        minWidth: 48,\n        maxWidth: 320,\n        borderRadius: 1,\n        typography: 'body2',\n        bgcolor: 'background.neutral',\n        ...(me && {\n          color: 'grey.800',\n          bgcolor: 'primary.lighter',\n        }),\n        ...(hasImage && {\n          p: 0,\n          bgcolor: 'transparent',\n        }),\n      }}\n    >\n      {hasImage ? (\n        <Box\n          component=\"img\"\n          alt=\"attachment\"\n          src={body}\n          onClick={() => onOpenLightbox(body)}\n          sx={{\n            minHeight: 220,\n            borderRadius: 1.5,\n            cursor: 'pointer',\n            '&:hover': {\n              opacity: 0.9,\n            },\n          }}\n        />\n      ) : (\n        body\n      )}\n    </Stack>\n  );\n\n  const renderActions = (\n    <Stack\n      direction=\"row\"\n      className=\"message-actions\"\n      sx={{\n        pt: 0.5,\n        opacity: 0,\n        top: '100%',\n        left: 0,\n        position: 'absolute',\n        transition: (theme) =>\n          theme.transitions.create(['opacity'], {\n            duration: theme.transitions.duration.shorter,\n          }),\n        ...(me && {\n          left: 'unset',\n          right: 0,\n        }),\n      }}\n    >\n      <IconButton size=\"small\">\n        <Iconify icon=\"solar:reply-bold\" width={16} />\n      </IconButton>\n      <IconButton size=\"small\">\n        <Iconify icon=\"eva:smiling-face-fill\" width={16} />\n      </IconButton>\n      <IconButton size=\"small\">\n        <Iconify icon=\"solar:trash-bin-trash-bold\" width={16} />\n      </IconButton>\n    </Stack>\n  );\n\n  return (\n    <Stack direction=\"row\" justifyContent={me ? 'flex-end' : 'unset'} sx={{ mb: 5 }}>\n      {!me && <Avatar alt={firstName} src={avatarUrl} sx={{ width: 32, height: 32, mr: 2 }} />}\n\n      <Stack alignItems=\"flex-end\">\n        {renderInfo}\n\n        <Stack\n          direction=\"row\"\n          alignItems=\"center\"\n          sx={{\n            position: 'relative',\n            '&:hover': {\n              '& .message-actions': {\n                opacity: 1,\n              },\n            },\n          }}\n        >\n          {renderBody}\n          {renderActions}\n        </Stack>\n      </Stack>\n    </Stack>\n  );\n}\n","import { IChatMessage, IChatParticipant } from 'src/types/chat';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  message: IChatMessage;\n  currentUserId: string;\n  participants: IChatParticipant[];\n};\n\nexport default function useGetMessage({ message, participants, currentUserId }: Props) {\n  const sender = participants.find((participant) => participant.id === message.senderId);\n\n  const senderDetails =\n    message.senderId === currentUserId\n      ? {\n          type: 'me',\n        }\n      : {\n          avatarUrl: sender?.avatarUrl,\n          firstName: sender?.name.split(' ')[0],\n        };\n\n  const me = senderDetails.type === 'me';\n\n  const hasImage = message.contentType === 'image';\n\n  return {\n    hasImage,\n    me,\n    senderDetails,\n  };\n}\n","import Box from '@mui/material/Box';\n\nimport Scrollbar from 'src/components/scrollbar';\nimport Lightbox, { useLightBox } from 'src/components/lightbox';\n\nimport { IChatMessage, IChatParticipant } from 'src/types/chat';\n\nimport { useMessagesScroll } from './hooks';\nimport ChatMessageItem from './chat-message-item';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  messages: IChatMessage[];\n  participants: IChatParticipant[];\n};\n\nexport default function ChatMessageList({ messages = [], participants }: Props) {\n  const { messagesEndRef } = useMessagesScroll(messages);\n\n  const slides = messages\n    .filter((message) => message.contentType === 'image')\n    .map((message) => ({ src: message.body }));\n\n  const lightbox = useLightBox(slides);\n\n  return (\n    <>\n      <Scrollbar ref={messagesEndRef} sx={{ px: 3, py: 5, height: 1 }}>\n        <Box>\n          {messages.map((message) => (\n            <ChatMessageItem\n              key={message.id}\n              message={message}\n              participants={participants}\n              onOpenLightbox={() => lightbox.onOpen(message.body)}\n            />\n          ))}\n        </Box>\n      </Scrollbar>\n\n      <Lightbox\n        index={lightbox.selected}\n        slides={slides}\n        open={lightbox.open}\n        close={lightbox.onClose}\n      />\n    </>\n  );\n}\n","import { useRef, useEffect, useCallback } from 'react';\n\nimport { IChatMessage } from 'src/types/chat';\n\n// ----------------------------------------------------------------------\n\nexport default function useMessagesScroll(messages: IChatMessage[]) {\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n\n  const scrollMessagesToBottom = useCallback(() => {\n    if (!messages) {\n      return;\n    }\n\n    if (!messagesEndRef.current) {\n      return;\n    }\n\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollTop = messagesEndRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  useEffect(\n    () => {\n      scrollMessagesToBottom();\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [messages]\n  );\n\n  return {\n    messagesEndRef,\n  };\n}\n","import { sub } from 'date-fns';\nimport { useRef, useMemo, useState, useCallback } from 'react';\n\nimport Stack from '@mui/material/Stack';\nimport InputBase from '@mui/material/InputBase';\nimport IconButton from '@mui/material/IconButton';\n\nimport { paths } from 'src/routes/paths';\nimport { useRouter } from 'src/routes/hooks';\n\nimport { useMockedUser } from 'src/hooks/use-mocked-user';\n\nimport uuidv4 from 'src/utils/uuidv4';\n\nimport { sendMessage, createConversation } from 'src/api/chat';\n\nimport Iconify from 'src/components/iconify';\n\nimport { IChatParticipant } from 'src/types/chat';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  recipients: IChatParticipant[];\n  onAddRecipients: (recipients: IChatParticipant[]) => void;\n  //\n  disabled: boolean;\n  selectedConversationId: string;\n};\n\nexport default function ChatMessageInput({\n  recipients,\n  onAddRecipients,\n  //\n  disabled,\n  selectedConversationId,\n}: Props) {\n  const router = useRouter();\n\n  const { user } = useMockedUser();\n\n  const fileRef = useRef<HTMLInputElement>(null);\n\n  const [message, setMessage] = useState('');\n\n  const myContact = useMemo(\n    () => ({\n      id: `${user?.id}`,\n      role: `${user?.role}`,\n      email: `${user?.email}`,\n      address: `${user?.address}`,\n      name: `${user?.displayName}`,\n      lastActivity: new Date(),\n      avatarUrl: `${user?.photoURL}`,\n      phoneNumber: `${user?.phoneNumber}`,\n      status: 'online' as 'online' | 'offline' | 'alway' | 'busy',\n    }),\n    [user]\n  );\n\n  const messageData = useMemo(\n    () => ({\n      id: uuidv4(),\n      attachments: [],\n      body: message,\n      contentType: 'text',\n      createdAt: sub(new Date(), { minutes: 1 }),\n      senderId: myContact.id,\n    }),\n    [message, myContact.id]\n  );\n\n  const conversationData = useMemo(\n    () => ({\n      id: uuidv4(),\n      messages: [messageData],\n      participants: [...recipients, myContact],\n      type: recipients.length > 1 ? 'GROUP' : 'ONE_TO_ONE',\n      unreadCount: 0,\n    }),\n    [messageData, myContact, recipients]\n  );\n\n  const handleAttach = useCallback(() => {\n    if (fileRef.current) {\n      fileRef.current.click();\n    }\n  }, []);\n\n  const handleChangeMessage = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    setMessage(event.target.value);\n  }, []);\n\n  const handleSendMessage = useCallback(\n    async (event: React.KeyboardEvent<HTMLInputElement>) => {\n      try {\n        if (event.key === 'Enter') {\n          if (message) {\n            if (selectedConversationId) {\n              await sendMessage(selectedConversationId, messageData);\n            } else {\n              const res = await createConversation(conversationData);\n\n              router.push(`${paths.dashboard.chat}?id=${res.conversation.id}`);\n\n              onAddRecipients([]);\n            }\n          }\n          setMessage('');\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    [conversationData, message, messageData, onAddRecipients, router, selectedConversationId]\n  );\n\n  return (\n    <>\n      <InputBase\n        value={message}\n        onKeyUp={handleSendMessage}\n        onChange={handleChangeMessage}\n        placeholder=\"Type a message\"\n        disabled={disabled}\n        startAdornment={\n          <IconButton>\n            <Iconify icon=\"eva:smiling-face-fill\" />\n          </IconButton>\n        }\n        endAdornment={\n          <Stack direction=\"row\" sx={{ flexShrink: 0 }}>\n            <IconButton onClick={handleAttach}>\n              <Iconify icon=\"solar:gallery-add-bold\" />\n            </IconButton>\n            <IconButton onClick={handleAttach}>\n              <Iconify icon=\"eva:attach-2-fill\" />\n            </IconButton>\n            <IconButton>\n              <Iconify icon=\"solar:microphone-bold\" />\n            </IconButton>\n          </Stack>\n        }\n        sx={{\n          px: 1,\n          height: 56,\n          flexShrink: 0,\n          borderTop: (theme) => `solid 1px ${theme.palette.divider}`,\n        }}\n      />\n\n      <input type=\"file\" ref={fileRef} style={{ display: 'none' }} />\n    </>\n  );\n}\n","import Stack from '@mui/material/Stack';\nimport Badge from '@mui/material/Badge';\nimport Avatar from '@mui/material/Avatar';\nimport IconButton from '@mui/material/IconButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport AvatarGroup, { avatarGroupClasses } from '@mui/material/AvatarGroup';\n\nimport { fToNow } from 'src/utils/format-time';\n\nimport Iconify from 'src/components/iconify';\n\nimport { IChatParticipant } from 'src/types/chat';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  participants: IChatParticipant[];\n};\n\nexport default function ChatHeaderDetail({ participants }: Props) {\n  const group = participants.length > 1;\n\n  const singleParticipant = participants[0];\n\n  const renderGroup = (\n    <AvatarGroup\n      max={3}\n      sx={{\n        [`& .${avatarGroupClasses.avatar}`]: {\n          width: 32,\n          height: 32,\n        },\n      }}\n    >\n      {participants.map((participant) => (\n        <Avatar key={participant.id} alt={participant.name} src={participant.avatarUrl} />\n      ))}\n    </AvatarGroup>\n  );\n\n  const renderSingle = (\n    <Stack flexGrow={1} direction=\"row\" alignItems=\"center\" spacing={2}>\n      <Badge\n        variant={singleParticipant.status}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n      >\n        <Avatar src={singleParticipant.avatarUrl} alt={singleParticipant.name} />\n      </Badge>\n\n      <ListItemText\n        primary={singleParticipant.name}\n        secondary={\n          singleParticipant.status === 'offline'\n            ? fToNow(singleParticipant.lastActivity)\n            : singleParticipant.status\n        }\n        secondaryTypographyProps={{\n          component: 'span',\n          ...(singleParticipant.status !== 'offline' && {\n            textTransform: 'capitalize',\n          }),\n        }}\n      />\n    </Stack>\n  );\n\n  return (\n    <>\n      {group ? renderGroup : renderSingle}\n\n      <Stack flexGrow={1} />\n\n      <IconButton>\n        <Iconify icon=\"solar:phone-bold\" />\n      </IconButton>\n      <IconButton>\n        <Iconify icon=\"solar:videocamera-record-bold\" />\n      </IconButton>\n      <IconButton>\n        <Iconify icon=\"eva:more-vertical-fill\" />\n      </IconButton>\n    </>\n  );\n}\n","import { useState, useCallback } from 'react';\n\nimport Box from '@mui/material/Box';\nimport Chip from '@mui/material/Chip';\nimport Stack from '@mui/material/Stack';\nimport Avatar from '@mui/material/Avatar';\nimport { alpha } from '@mui/material/styles';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport Autocomplete from '@mui/material/Autocomplete';\n\nimport Iconify from 'src/components/iconify';\nimport SearchNotFound from 'src/components/search-not-found';\n\nimport { IChatParticipant } from 'src/types/chat';\n//\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  contacts: IChatParticipant[];\n  onAddRecipients: (selected: IChatParticipant[]) => void;\n};\n\nexport default function ChatHeaderCompose({ contacts, onAddRecipients }: Props) {\n  const [searchRecipients, setSearchRecipients] = useState('');\n\n  const handleAddRecipients = useCallback(\n    (selected: IChatParticipant[]) => {\n      setSearchRecipients('');\n      onAddRecipients(selected);\n    },\n    [onAddRecipients]\n  );\n\n  return (\n    <>\n      <Typography variant=\"subtitle2\" sx={{ color: 'text.primary', mr: 2 }}>\n        To:\n      </Typography>\n\n      <Autocomplete\n        sx={{ minWidth: 320 }}\n        multiple\n        limitTags={3}\n        popupIcon={null}\n        defaultValue={[]}\n        disableCloseOnSelect\n        noOptionsText={<SearchNotFound query={searchRecipients} />}\n        onChange={(event, newValue) => handleAddRecipients(newValue)}\n        onInputChange={(event, newValue) => setSearchRecipients(newValue)}\n        options={contacts}\n        getOptionLabel={(recipient) => recipient.name}\n        isOptionEqualToValue={(option, value) => option.id === value.id}\n        renderInput={(params) => <TextField {...params} placeholder=\"+ Recipients\" />}\n        renderOption={(props, recipient, { selected }) => (\n          <li {...props} key={recipient.id}>\n            <Box\n              key={recipient.id}\n              sx={{\n                mr: 1,\n                width: 32,\n                height: 32,\n                overflow: 'hidden',\n                borderRadius: '50%',\n                position: 'relative',\n              }}\n            >\n              <Avatar alt={recipient.name} src={recipient.avatarUrl} sx={{ width: 1, height: 1 }} />\n              <Stack\n                alignItems=\"center\"\n                justifyContent=\"center\"\n                sx={{\n                  top: 0,\n                  left: 0,\n                  width: 1,\n                  height: 1,\n                  opacity: 0,\n                  position: 'absolute',\n                  bgcolor: (theme) => alpha(theme.palette.grey[900], 0.8),\n                  transition: (theme) =>\n                    theme.transitions.create(['opacity'], {\n                      easing: theme.transitions.easing.easeInOut,\n                      duration: theme.transitions.duration.shorter,\n                    }),\n                  ...(selected && {\n                    opacity: 1,\n                    color: 'primary.main',\n                  }),\n                }}\n              >\n                <Iconify icon=\"eva:checkmark-fill\" />\n              </Stack>\n            </Box>\n\n            {recipient.name}\n          </li>\n        )}\n        renderTags={(selected, getTagProps) =>\n          selected.map((recipient, index) => (\n            <Chip\n              {...getTagProps({ index })}\n              key={recipient.id}\n              label={recipient.name}\n              avatar={<Avatar alt={recipient.name} src={recipient.avatarUrl} />}\n              size=\"small\"\n              variant=\"soft\"\n            />\n          ))\n        }\n      />\n    </>\n  );\n}\n","import { useState, useEffect, useCallback } from 'react';\n\nimport Card from '@mui/material/Card';\nimport Stack from '@mui/material/Stack';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\n\nimport { paths } from 'src/routes/paths';\nimport { useRouter, useSearchParams } from 'src/routes/hooks';\n\nimport { useMockedUser } from 'src/hooks/use-mocked-user';\n\nimport { useGetContacts, useGetConversation, useGetConversations } from 'src/api/chat';\n\nimport { useSettingsContext } from 'src/components/settings';\n\nimport { IChatParticipant } from 'src/types/chat';\n\nimport ChatNav from '../chat-nav';\nimport ChatRoom from '../chat-room';\nimport ChatMessageList from '../chat-message-list';\nimport ChatMessageInput from '../chat-message-input';\nimport ChatHeaderDetail from '../chat-header-detail';\nimport ChatHeaderCompose from '../chat-header-compose';\n\n// ----------------------------------------------------------------------\n\nexport default function ChatView() {\n  const router = useRouter();\n\n  const { user } = useMockedUser();\n\n  const settings = useSettingsContext();\n\n  const searchParams = useSearchParams();\n\n  const selectedConversationId = searchParams.get('id') || '';\n\n  const [recipients, setRecipients] = useState<IChatParticipant[]>([]);\n\n  const { contacts } = useGetContacts();\n\n  const { conversations, conversationsLoading } = useGetConversations();\n\n  const { conversation, conversationError } = useGetConversation(`${selectedConversationId}`);\n\n  const participants: IChatParticipant[] = conversation\n    ? conversation.participants.filter(\n        (participant: IChatParticipant) => participant.id !== `${user?.id}`\n      )\n    : [];\n\n  useEffect(() => {\n    if (conversationError || !selectedConversationId) {\n      router.push(paths.dashboard.chat);\n    }\n  }, [conversationError, router, selectedConversationId]);\n\n  const handleAddRecipients = useCallback((selected: IChatParticipant[]) => {\n    setRecipients(selected);\n  }, []);\n\n  const details = !!conversation;\n\n  const renderHead = (\n    <Stack\n      direction=\"row\"\n      alignItems=\"center\"\n      flexShrink={0}\n      sx={{ pr: 1, pl: 2.5, py: 1, minHeight: 72 }}\n    >\n      {selectedConversationId ? (\n        <>{details && <ChatHeaderDetail participants={participants} />}</>\n      ) : (\n        <ChatHeaderCompose contacts={contacts} onAddRecipients={handleAddRecipients} />\n      )}\n    </Stack>\n  );\n\n  const renderNav = (\n    <ChatNav\n      contacts={contacts}\n      conversations={conversations}\n      loading={conversationsLoading}\n      selectedConversationId={selectedConversationId}\n    />\n  );\n\n  const renderMessages = (\n    <Stack\n      sx={{\n        width: 1,\n        height: 1,\n        overflow: 'hidden',\n      }}\n    >\n      <ChatMessageList messages={conversation?.messages} participants={participants} />\n\n      <ChatMessageInput\n        recipients={recipients}\n        onAddRecipients={handleAddRecipients}\n        //\n        selectedConversationId={selectedConversationId}\n        disabled={!recipients.length && !selectedConversationId}\n      />\n    </Stack>\n  );\n\n  return (\n    <Container maxWidth={settings.themeStretch ? false : 'xl'}>\n      <Typography\n        variant=\"h4\"\n        sx={{\n          mb: { xs: 3, md: 5 },\n        }}\n      >\n        Chat\n      </Typography>\n\n      <Stack component={Card} direction=\"row\" sx={{ height: '72vh' }}>\n        {renderNav}\n\n        <Stack\n          sx={{\n            width: 1,\n            height: 1,\n            overflow: 'hidden',\n          }}\n        >\n          {renderHead}\n\n          <Stack\n            direction=\"row\"\n            sx={{\n              width: 1,\n              height: 1,\n              overflow: 'hidden',\n              borderTop: (theme) => `solid 1px ${theme.palette.divider}`,\n            }}\n          >\n            {renderMessages}\n\n            {details && <ChatRoom conversation={conversation} participants={participants} />}\n          </Stack>\n        </Stack>\n      </Stack>\n    </Container>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n\nimport { ChatView } from 'src/sections/chat/view';\n\n// ----------------------------------------------------------------------\n\nexport default function ChatPage() {\n  return (\n    <>\n      <Helmet>\n        <title> Game: Chat</title>\n      </Helmet>\n\n      <ChatView />\n    </>\n  );\n}\n","/* eslint-disable */\n// ----------------------------------------------------------------------\n\nexport default function uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0,\n      v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"componentsProps\", \"max\", \"renderSurplus\", \"slotProps\", \"spacing\", \"total\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { isFragment } from 'react-is';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Avatar, { avatarClasses } from '../Avatar';\nimport avatarGroupClasses, { getAvatarGroupUtilityClass } from './avatarGroupClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst SPACINGS = {\n  small: -16,\n  medium: null\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar']\n  };\n  return composeClasses(slots, getAvatarGroupUtilityClass, classes);\n};\nconst AvatarGroupRoot = styled('div', {\n  name: 'MuiAvatarGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${avatarGroupClasses.avatar}`]: styles.avatar\n  }, styles.root)\n})(({\n  theme,\n  ownerState\n}) => {\n  const marginValue = ownerState.spacing && SPACINGS[ownerState.spacing] !== undefined ? SPACINGS[ownerState.spacing] : -ownerState.spacing;\n  return {\n    [`& .${avatarClasses.root}`]: {\n      border: `2px solid ${(theme.vars || theme).palette.background.default}`,\n      boxSizing: 'content-box',\n      marginLeft: marginValue != null ? marginValue : -8,\n      '&:last-child': {\n        marginLeft: 0\n      }\n    },\n    display: 'flex',\n    flexDirection: 'row-reverse'\n  };\n});\nconst AvatarGroup = /*#__PURE__*/React.forwardRef(function AvatarGroup(inProps, ref) {\n  var _slotProps$additional;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAvatarGroup'\n  });\n  const {\n      children: childrenProp,\n      className,\n      component = 'div',\n      componentsProps = {},\n      max = 5,\n      renderSurplus,\n      slotProps = {},\n      spacing = 'medium',\n      total,\n      variant = 'circular'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  let clampedMax = max < 2 ? 2 : max;\n  const ownerState = _extends({}, props, {\n    max,\n    spacing,\n    component,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const children = React.Children.toArray(childrenProp).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The AvatarGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n    return /*#__PURE__*/React.isValidElement(child);\n  });\n  const totalAvatars = total || children.length;\n  if (totalAvatars === clampedMax) {\n    clampedMax += 1;\n  }\n  clampedMax = Math.min(totalAvatars + 1, clampedMax);\n  const maxAvatars = Math.min(children.length, clampedMax - 1);\n  const extraAvatars = Math.max(totalAvatars - clampedMax, totalAvatars - maxAvatars, 0);\n  const extraAvatarsElement = renderSurplus ? renderSurplus(extraAvatars) : `+${extraAvatars}`;\n  const additionalAvatarSlotProps = (_slotProps$additional = slotProps.additionalAvatar) != null ? _slotProps$additional : componentsProps.additionalAvatar;\n  return /*#__PURE__*/_jsxs(AvatarGroupRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: [extraAvatars ? /*#__PURE__*/_jsx(Avatar, _extends({\n      variant: variant\n    }, additionalAvatarSlotProps, {\n      className: clsx(classes.avatar, additionalAvatarSlotProps == null ? void 0 : additionalAvatarSlotProps.className),\n      children: extraAvatarsElement\n    })) : null, children.slice(0, maxAvatars).reverse().map(child => {\n      return /*#__PURE__*/React.cloneElement(child, {\n        className: clsx(child.props.className, classes.avatar),\n        variant: child.props.variant || variant\n      });\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? AvatarGroup.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The avatars to stack.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `slotProps` prop.\n   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    additionalAvatar: PropTypes.object\n  }),\n  /**\n   * Max avatars to show before +x.\n   * @default 5\n   */\n  max: chainPropTypes(PropTypes.number, props => {\n    if (props.max < 2) {\n      return new Error(['MUI: The prop `max` should be equal to 2 or above.', 'A value below is clamped to 2.'].join('\\n'));\n    }\n    return null;\n  }),\n  /**\n   * custom renderer of extraAvatars\n   * @param {number} surplus number of extra avatars\n   * @returns {React.ReactNode} custom element to display\n   */\n  renderSurplus: PropTypes.func,\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.\n   *\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    additionalAvatar: PropTypes.object\n  }),\n  /**\n   * Spacing between avatars.\n   * @default 'medium'\n   */\n  spacing: PropTypes.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.number]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The total number of avatars. Used for calculating the number of extra avatars.\n   * @default children.length\n   */\n  total: PropTypes.number,\n  /**\n   * The variant to use.\n   * @default 'circular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default AvatarGroup;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { elementAcceptingRef, exactProp, unstable_ownerDocument as ownerDocument, unstable_useForkRef as useForkRef, unstable_useEventCallback as useEventCallback } from '@mui/utils';\n\n// TODO: return `EventHandlerName extends `on${infer EventName}` ? Lowercase<EventName> : never` once generatePropTypes runs with TS 4.1\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction mapEventPropToEvent(eventProp) {\n  return eventProp.substring(2).toLowerCase();\n}\nfunction clickedRootScrollbar(event, doc) {\n  return doc.documentElement.clientWidth < event.clientX || doc.documentElement.clientHeight < event.clientY;\n}\n/**\n * Listen for click events that occur somewhere in the document, outside of the element itself.\n * For instance, if you need to hide a menu when people click anywhere else on your page.\n *\n * Demos:\n *\n * - [Click-Away Listener](https://mui.com/base-ui/react-click-away-listener/)\n *\n * API:\n *\n * - [ClickAwayListener API](https://mui.com/base-ui/react-click-away-listener/components-api/#click-away-listener)\n */\nfunction ClickAwayListener(props) {\n  const {\n    children,\n    disableReactTree = false,\n    mouseEvent = 'onClick',\n    onClickAway,\n    touchEvent = 'onTouchEnd'\n  } = props;\n  const movedRef = React.useRef(false);\n  const nodeRef = React.useRef(null);\n  const activatedRef = React.useRef(false);\n  const syntheticEventRef = React.useRef(false);\n  React.useEffect(() => {\n    // Ensure that this component is not \"activated\" synchronously.\n    // https://github.com/facebook/react/issues/20074\n    setTimeout(() => {\n      activatedRef.current = true;\n    }, 0);\n    return () => {\n      activatedRef.current = false;\n    };\n  }, []);\n  const handleRef = useForkRef(\n  // @ts-expect-error TODO upstream fix\n  children.ref, nodeRef);\n\n  // The handler doesn't take event.defaultPrevented into account:\n  //\n  // event.preventDefault() is meant to stop default behaviors like\n  // clicking a checkbox to check it, hitting a button to submit a form,\n  // and hitting left arrow to move the cursor in a text input etc.\n  // Only special HTML elements have these default behaviors.\n  const handleClickAway = useEventCallback(event => {\n    // Given developers can stop the propagation of the synthetic event,\n    // we can only be confident with a positive value.\n    const insideReactTree = syntheticEventRef.current;\n    syntheticEventRef.current = false;\n    const doc = ownerDocument(nodeRef.current);\n\n    // 1. IE11 support, which trigger the handleClickAway even after the unbind\n    // 2. The child might render null.\n    // 3. Behave like a blur listener.\n    if (!activatedRef.current || !nodeRef.current || 'clientX' in event && clickedRootScrollbar(event, doc)) {\n      return;\n    }\n\n    // Do not act if user performed touchmove\n    if (movedRef.current) {\n      movedRef.current = false;\n      return;\n    }\n    let insideDOM;\n\n    // If not enough, can use https://github.com/DieterHolvoet/event-propagation-path/blob/master/propagationPath.js\n    if (event.composedPath) {\n      insideDOM = event.composedPath().indexOf(nodeRef.current) > -1;\n    } else {\n      insideDOM = !doc.documentElement.contains(\n      // @ts-expect-error returns `false` as intended when not dispatched from a Node\n      event.target) || nodeRef.current.contains(\n      // @ts-expect-error returns `false` as intended when not dispatched from a Node\n      event.target);\n    }\n    if (!insideDOM && (disableReactTree || !insideReactTree)) {\n      onClickAway(event);\n    }\n  });\n\n  // Keep track of mouse/touch events that bubbled up through the portal.\n  const createHandleSynthetic = handlerName => event => {\n    syntheticEventRef.current = true;\n    const childrenPropsHandler = children.props[handlerName];\n    if (childrenPropsHandler) {\n      childrenPropsHandler(event);\n    }\n  };\n  const childrenProps = {\n    ref: handleRef\n  };\n  if (touchEvent !== false) {\n    childrenProps[touchEvent] = createHandleSynthetic(touchEvent);\n  }\n  React.useEffect(() => {\n    if (touchEvent !== false) {\n      const mappedTouchEvent = mapEventPropToEvent(touchEvent);\n      const doc = ownerDocument(nodeRef.current);\n      const handleTouchMove = () => {\n        movedRef.current = true;\n      };\n      doc.addEventListener(mappedTouchEvent, handleClickAway);\n      doc.addEventListener('touchmove', handleTouchMove);\n      return () => {\n        doc.removeEventListener(mappedTouchEvent, handleClickAway);\n        doc.removeEventListener('touchmove', handleTouchMove);\n      };\n    }\n    return undefined;\n  }, [handleClickAway, touchEvent]);\n  if (mouseEvent !== false) {\n    childrenProps[mouseEvent] = createHandleSynthetic(mouseEvent);\n  }\n  React.useEffect(() => {\n    if (mouseEvent !== false) {\n      const mappedMouseEvent = mapEventPropToEvent(mouseEvent);\n      const doc = ownerDocument(nodeRef.current);\n      doc.addEventListener(mappedMouseEvent, handleClickAway);\n      return () => {\n        doc.removeEventListener(mappedMouseEvent, handleClickAway);\n      };\n    }\n    return undefined;\n  }, [handleClickAway, mouseEvent]);\n  return /*#__PURE__*/_jsx(React.Fragment, {\n    children: /*#__PURE__*/React.cloneElement(children, childrenProps)\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ClickAwayListener.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The wrapped element.\n   */\n  children: elementAcceptingRef.isRequired,\n  /**\n   * If `true`, the React tree is ignored and only the DOM tree is considered.\n   * This prop changes how portaled elements are handled.\n   * @default false\n   */\n  disableReactTree: PropTypes.bool,\n  /**\n   * The mouse event to listen to. You can disable the listener by providing `false`.\n   * @default 'onClick'\n   */\n  mouseEvent: PropTypes.oneOf(['onClick', 'onMouseDown', 'onMouseUp', 'onPointerDown', 'onPointerUp', false]),\n  /**\n   * Callback fired when a \"click away\" event is detected.\n   */\n  onClickAway: PropTypes.func.isRequired,\n  /**\n   * The touch event to listen to. You can disable the listener by providing `false`.\n   * @default 'onTouchEnd'\n   */\n  touchEvent: PropTypes.oneOf(['onTouchEnd', 'onTouchStart', false])\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  ClickAwayListener['propTypes' + ''] = exactProp(ClickAwayListener.propTypes);\n}\nexport { ClickAwayListener };","var arrayPush = require('./_arrayPush'),\n    isFlattenable = require('./_isFlattenable');\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n","var Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n","var baseFlatten = require('./_baseFlatten');\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nmodule.exports = flatten;\n"],"names":["StyledLightbox","theme","useTheme","_jsx","GlobalStyles","styles","alpha","palette","grey","fontSize","typography","h5","fontWeight","lineHeight","body2","filter","opacity","backgroundColor","common","black","Lightbox","_ref","slides","disabledZoom","disabledVideo","disabledTotal","disabledCaptions","disabledSlideshow","disabledThumbnails","disabledFullscreen","onGetCurrentIndex","other","totalItems","length","_jsxs","_Fragment","children","ReactLightbox","animation","swipe","carousel","finite","controller","closeOnBackdropClick","plugins","getPlugins","on","view","_ref2","index","toolbar","buttons","DisplayTotal","render","iconClose","Iconify","width","icon","iconZoomIn","iconZoomOut","iconSlideshowPlay","iconSlideshowPause","iconPrev","iconNext","iconExitFullscreen","iconEnterFullscreen","_ref3","Captions","Fullscreen","Slideshow","Thumbnails","Video","Zoom","plugin","_ref4","currentIndex","useLightboxState","Box","component","className","sx","alignItems","display","justifyContent","useLightBox","selected","setSelected","useState","open","onOpen","useCallback","slideUrl","slideIndex","findIndex","slide","type","poster","src","onClose","SearchNotFound","query","Paper","bgcolor","textAlign","Typography","variant","gutterBottom","options","revalidateIfStale","revalidateOnFocus","revalidateOnReconnect","useCollapseNav","openMobile","setOpenMobile","collapseDesktop","setCollapseDesktop","onCollapseDesktop","prev","onCloseDesktop","onOpenMobile","onCloseMobile","ChatNavItem","collapse","conversation","user","useMockedUser","mdUp","useResponsive","router","useRouter","group","displayName","displayText","participants","lastActivity","hasOnlineInGroup","currentUserId","messages","participantsInConversation","participant","id","lastMessage","map","name","join","item","status","includes","sender","senderId","message","contentType","body","concat","createdAt","useGetNavItem","singleParticipant","avatarUrl","handleClickConversation","async","conversationId","URL","endpoints","chat","mutate","params","endpoint","currentData","conversations","unreadCount","clickConversation","push","paths","dashboard","error","console","renderGroup","Badge","anchorOrigin","vertical","horizontal","AvatarGroup","height","slice","Avatar","alt","renderSingle","ListItemButton","disableGutters","onClick","py","px","color","overlap","badgeContent","ListItemText","ml","primary","primaryTypographyProps","noWrap","secondary","secondaryTypographyProps","Stack","mb","formatDistanceToNowStrict","Date","addSuffix","borderRadius","ChatNavAccount","_user$displayName","popover","usePopover","setStatus","handleChangeStatus","event","target","value","photoURL","cursor","charAt","toUpperCase","CustomPopover","arrow","p","direction","spacing","pr","pl","email","Tooltip","title","IconButton","Divider","borderStyle","MenuItem","badgeClasses","badge","position","m","flexShrink","Select","native","fullWidth","onChange","input","InputBase","inputProps","textTransform","option","ChatNavItemSkeleton","Skeleton","flexGrow","ChatNavSearchResults","results","onClickResult","totalResults","notFound","mx","result","mr","NAV_WIDTH","NAV_COLLAPSE_WIDTH","ChatNav","loading","contacts","selectedConversationId","searchContacts","setSearchContacts","useEffect","handleToggleNav","handleClickCompose","handleSearchContacts","inputValue","prevState","contact","toLowerCase","handleClickAwaySearch","handleClickResult","renderToggleBtn","left","top","zIndex","main","boxShadow","customShadows","contrastText","darker","renderSkeleton","Array","_","renderList","allIds","byId","renderListResults","renderSearchInput","ClickAwayListener","onClickAway","TextField","placeholder","InputProps","startAdornment","InputAdornment","mt","renderContent","pb","pt","Scrollbar","borderRight","divider","transition","transitions","create","duration","shorter","Drawer","slotProps","backdrop","invisible","PaperProps","ChatRoomParticipantDialog","Dialog","maxWidth","right","DialogContent","role","address","size","info","ChatRoomGroup","useBoolean","handleOpen","totalParticipants","renderBtn","onToggle","Collapse","in","handleClose","ChatRoomSingle","phoneNumber","renderInfo","ChatRoomAttachments","attachments","totalAttachments","disabled","attachment","overflow","FileThumbnail","imageView","file","preview","onDownload","fDateTime","ChatRoom","lgUp","uniq","flatten","z8","background","paper","border","neutral","borderLeft","anchor","ChatMessageItem","onOpenLightbox","me","senderDetails","hasImage","find","firstName","split","useGetMessage","renderBody","minWidth","minHeight","renderActions","ChatMessageList","messagesEndRef","useRef","scrollMessagesToBottom","current","scrollTop","scrollHeight","useMessagesScroll","lightbox","ref","close","ChatMessageInput","recipients","onAddRecipients","fileRef","setMessage","myContact","useMemo","messageData","uuidv4","sub","minutes","conversationData","handleAttach","click","handleChangeMessage","handleSendMessage","key","CONVERSATIONS_URL","CONVERSATION_URL","currentConversation","currentConversations","sendMessage","res","data","axios","post","createConversation","onKeyUp","endAdornment","borderTop","style","ChatHeaderDetail","max","avatarGroupClasses","avatar","fToNow","ChatHeaderCompose","searchRecipients","setSearchRecipients","handleAddRecipients","Autocomplete","multiple","limitTags","popupIcon","defaultValue","disableCloseOnSelect","noOptionsText","newValue","onInputChange","getOptionLabel","recipient","isOptionEqualToValue","renderInput","renderOption","props","_createElement","easing","easeInOut","renderTags","getTagProps","Chip","label","ChatView","settings","useSettingsContext","useSearchParams","get","setRecipients","isLoading","isValidating","useSWR","fetcher","contactsLoading","contactsError","contactsValidating","contactsEmpty","useGetContacts","conversationsLoading","keyBy","Object","keys","conversationsError","conversationsValidating","conversationsEmpty","useGetConversations","conversationError","conversationLoading","conversationValidating","useGetConversation","details","renderHead","renderNav","renderMessages","Container","themeStretch","xs","md","Card","ChatPage","Helmet","replace","c","r","Math","random","toString","_excluded","SPACINGS","small","medium","AvatarGroupRoot","styled","slot","overridesResolver","_extends","root","ownerState","marginValue","undefined","avatarClasses","vars","default","boxSizing","marginLeft","flexDirection","React","inProps","_slotProps$additional","useThemeProps","childrenProp","componentsProps","renderSurplus","total","_objectWithoutPropertiesLoose","clampedMax","classes","composeClasses","getAvatarGroupUtilityClass","useUtilityClasses","toArray","child","totalAvatars","min","maxAvatars","extraAvatars","extraAvatarsElement","additionalAvatarSlotProps","additionalAvatar","as","clsx","reverse","mapEventPropToEvent","eventProp","substring","disableReactTree","mouseEvent","touchEvent","movedRef","nodeRef","activatedRef","syntheticEventRef","setTimeout","handleRef","useForkRef","handleClickAway","useEventCallback","insideReactTree","doc","ownerDocument","documentElement","clientWidth","clientX","clientHeight","clientY","clickedRootScrollbar","insideDOM","composedPath","indexOf","contains","createHandleSynthetic","handlerName","childrenPropsHandler","childrenProps","mappedTouchEvent","handleTouchMove","addEventListener","removeEventListener","mappedMouseEvent","arrayPush","require","isFlattenable","module","exports","baseFlatten","array","depth","predicate","isStrict","Symbol","isArguments","isArray","spreadableSymbol","isConcatSpreadable"],"sourceRoot":""}