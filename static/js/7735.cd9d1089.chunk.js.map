{"version":3,"file":"static/js/7735.cd9d1089.chunk.js","mappings":"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","sources":["components/custom-dialog/confirm-dialog.tsx","sections/file-manager/file-manager-file-details.tsx","sections/file-manager/file-manager-folder-item.tsx","sections/file-manager/file-manager-invited-item.tsx","sections/file-manager/file-manager-new-folder-dialog.tsx","sections/file-manager/file-manager-panel.tsx","sections/file-manager/file-manager-share-dialog.tsx","../node_modules/@mui/material/AvatarGroup/AvatarGroup.js"],"sourcesContent":["import Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\n\nimport { ConfirmDialogProps } from './types';\n\n// ----------------------------------------------------------------------\n\nexport default function ConfirmDialog({\n  title,\n  content,\n  action,\n  open,\n  onClose,\n  ...other\n}: ConfirmDialogProps) {\n  return (\n    <Dialog fullWidth maxWidth=\"xs\" open={open} onClose={onClose} {...other}>\n      <DialogTitle sx={{ pb: 2 }}>{title}</DialogTitle>\n\n      {content && <DialogContent sx={{ typography: 'body2' }}> {content} </DialogContent>}\n\n      <DialogActions>\n        {action}\n\n        <Button variant=\"outlined\" color=\"inherit\" onClick={onClose}>\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import { useState, useCallback } from 'react';\n\nimport Box from '@mui/material/Box';\nimport Chip from '@mui/material/Chip';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport Divider from '@mui/material/Divider';\nimport Checkbox from '@mui/material/Checkbox';\nimport TextField from '@mui/material/TextField';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport Drawer, { DrawerProps } from '@mui/material/Drawer';\n\nimport { useBoolean } from 'src/hooks/use-boolean';\n\nimport { fData } from 'src/utils/format-number';\nimport { fDateTime } from 'src/utils/format-time';\n\nimport Iconify from 'src/components/iconify';\nimport Scrollbar from 'src/components/scrollbar';\nimport FileThumbnail, { fileFormat } from 'src/components/file-thumbnail';\n\nimport { IFile } from 'src/types/file';\n\nimport FileManagerShareDialog from './file-manager-share-dialog';\nimport FileManagerInvitedItem from './file-manager-invited-item';\n\n// ----------------------------------------------------------------------\n\ntype Props = DrawerProps & {\n  item: IFile;\n  favorited?: boolean;\n  //\n  onFavorite?: VoidFunction;\n  onCopyLink: VoidFunction;\n  //\n  onClose: VoidFunction;\n  onDelete: VoidFunction;\n};\n\nexport default function FileManagerFileDetails({\n  item,\n  open,\n  favorited,\n  //\n  onFavorite,\n  onCopyLink,\n  onClose,\n  onDelete,\n  ...other\n}: Props) {\n  const { name, size, url, type, shared, modifiedAt } = item;\n\n  const hasShared = shared && !!shared.length;\n\n  const toggleTags = useBoolean(true);\n\n  const share = useBoolean();\n\n  const properties = useBoolean(true);\n\n  const [inviteEmail, setInviteEmail] = useState('');\n\n  const [tags, setTags] = useState(item.tags.slice(0, 3));\n\n  const handleChangeInvite = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    setInviteEmail(event.target.value);\n  }, []);\n\n  const handleChangeTags = useCallback((newValue: string[]) => {\n    setTags(newValue);\n  }, []);\n\n  const renderTags = (\n    <Stack spacing={1.5}>\n      <Stack\n        direction=\"row\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        sx={{ typography: 'subtitle2' }}\n      >\n        Tags\n        <IconButton size=\"small\" onClick={toggleTags.onToggle}>\n          <Iconify\n            icon={toggleTags.value ? 'eva:arrow-ios-upward-fill' : 'eva:arrow-ios-downward-fill'}\n          />\n        </IconButton>\n      </Stack>\n\n      {toggleTags.value && (\n        <Autocomplete\n          multiple\n          freeSolo\n          options={item.tags.map((option) => option)}\n          getOptionLabel={(option) => option}\n          defaultValue={item.tags.slice(0, 3)}\n          value={tags}\n          onChange={(event, newValue) => {\n            handleChangeTags(newValue);\n          }}\n          renderOption={(props, option) => (\n            <li {...props} key={option}>\n              {option}\n            </li>\n          )}\n          renderTags={(selected, getTagProps) =>\n            selected.map((option, index) => (\n              <Chip\n                {...getTagProps({ index })}\n                size=\"small\"\n                variant=\"soft\"\n                label={option}\n                key={option}\n              />\n            ))\n          }\n          renderInput={(params) => <TextField {...params} placeholder=\"#Add a tags\" />}\n        />\n      )}\n    </Stack>\n  );\n\n  const renderProperties = (\n    <Stack spacing={1.5}>\n      <Stack\n        direction=\"row\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        sx={{ typography: 'subtitle2' }}\n      >\n        Properties\n        <IconButton size=\"small\" onClick={properties.onToggle}>\n          <Iconify\n            icon={properties.value ? 'eva:arrow-ios-upward-fill' : 'eva:arrow-ios-downward-fill'}\n          />\n        </IconButton>\n      </Stack>\n\n      {properties.value && (\n        <>\n          <Stack direction=\"row\" sx={{ typography: 'caption', textTransform: 'capitalize' }}>\n            <Box component=\"span\" sx={{ width: 80, color: 'text.secondary', mr: 2 }}>\n              Size\n            </Box>\n            {fData(size)}\n          </Stack>\n\n          <Stack direction=\"row\" sx={{ typography: 'caption', textTransform: 'capitalize' }}>\n            <Box component=\"span\" sx={{ width: 80, color: 'text.secondary', mr: 2 }}>\n              Modified\n            </Box>\n            {fDateTime(modifiedAt)}\n          </Stack>\n\n          <Stack direction=\"row\" sx={{ typography: 'caption', textTransform: 'capitalize' }}>\n            <Box component=\"span\" sx={{ width: 80, color: 'text.secondary', mr: 2 }}>\n              Type\n            </Box>\n            {fileFormat(type)}\n          </Stack>\n        </>\n      )}\n    </Stack>\n  );\n\n  const renderShared = (\n    <>\n      <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" sx={{ p: 2.5 }}>\n        <Typography variant=\"subtitle2\"> File Share With </Typography>\n\n        <IconButton\n          size=\"small\"\n          color=\"primary\"\n          onClick={share.onTrue}\n          sx={{\n            width: 24,\n            height: 24,\n            bgcolor: 'primary.main',\n            color: 'primary.contrastText',\n            '&:hover': {\n              bgcolor: 'primary.dark',\n            },\n          }}\n        >\n          <Iconify icon=\"mingcute:add-line\" />\n        </IconButton>\n      </Stack>\n\n      {hasShared && (\n        <Box sx={{ pl: 2.5, pr: 1 }}>\n          {shared.map((person) => (\n            <FileManagerInvitedItem key={person.id} person={person} />\n          ))}\n        </Box>\n      )}\n    </>\n  );\n\n  return (\n    <>\n      <Drawer\n        open={open}\n        onClose={onClose}\n        anchor=\"right\"\n        slotProps={{\n          backdrop: { invisible: true },\n        }}\n        PaperProps={{\n          sx: { width: 320 },\n        }}\n        {...other}\n      >\n        <Scrollbar sx={{ height: 1 }}>\n          <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" sx={{ p: 2.5 }}>\n            <Typography variant=\"h6\"> Info </Typography>\n\n            <Checkbox\n              color=\"warning\"\n              icon={<Iconify icon=\"eva:star-outline\" />}\n              checkedIcon={<Iconify icon=\"eva:star-fill\" />}\n              checked={favorited}\n              onChange={onFavorite}\n            />\n          </Stack>\n\n          <Stack\n            spacing={2.5}\n            justifyContent=\"center\"\n            sx={{\n              p: 2.5,\n              bgcolor: 'background.neutral',\n            }}\n          >\n            <FileThumbnail\n              imageView\n              file={type === 'folder' ? type : url}\n              sx={{ width: 64, height: 64 }}\n              imgSx={{ borderRadius: 1 }}\n            />\n\n            <Typography variant=\"subtitle1\" sx={{ wordBreak: 'break-all' }}>\n              {name}\n            </Typography>\n\n            <Divider sx={{ borderStyle: 'dashed' }} />\n\n            {renderTags}\n\n            {renderProperties}\n          </Stack>\n\n          {renderShared}\n        </Scrollbar>\n\n        <Box sx={{ p: 2.5 }}>\n          <Button\n            fullWidth\n            variant=\"soft\"\n            color=\"error\"\n            size=\"large\"\n            startIcon={<Iconify icon=\"solar:trash-bin-trash-bold\" />}\n            onClick={onDelete}\n          >\n            Delete\n          </Button>\n        </Box>\n      </Drawer>\n\n      <FileManagerShareDialog\n        open={share.value}\n        shared={shared}\n        inviteEmail={inviteEmail}\n        onChangeInvite={handleChangeInvite}\n        onCopyLink={onCopyLink}\n        onClose={() => {\n          share.onFalse();\n          setInviteEmail('');\n        }}\n      />\n    </>\n  );\n}\n","import { useState, useCallback } from 'react';\n\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport Avatar from '@mui/material/Avatar';\nimport Divider from '@mui/material/Divider';\nimport MenuItem from '@mui/material/MenuItem';\nimport Checkbox from '@mui/material/Checkbox';\nimport { CardProps } from '@mui/material/Card';\nimport IconButton from '@mui/material/IconButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport AvatarGroup, { avatarGroupClasses } from '@mui/material/AvatarGroup';\n\nimport { useBoolean } from 'src/hooks/use-boolean';\nimport { useCopyToClipboard } from 'src/hooks/use-copy-to-clipboard';\n\nimport { fData } from 'src/utils/format-number';\n\nimport Iconify from 'src/components/iconify';\nimport { useSnackbar } from 'src/components/snackbar';\nimport { ConfirmDialog } from 'src/components/custom-dialog';\nimport CustomPopover, { usePopover } from 'src/components/custom-popover';\n\nimport { IFolderManager } from 'src/types/file';\n\nimport FileManagerShareDialog from './file-manager-share-dialog';\nimport FileManagerFileDetails from './file-manager-file-details';\nimport FileManagerNewFolderDialog from './file-manager-new-folder-dialog';\n\n// ----------------------------------------------------------------------\n\ninterface Props extends CardProps {\n  folder: IFolderManager;\n  selected?: boolean;\n  onSelect?: VoidFunction;\n  onDelete: VoidFunction;\n}\n\nexport default function FileManagerFolderItem({\n  folder,\n  selected,\n  onSelect,\n  onDelete,\n  sx,\n  ...other\n}: Props) {\n  const { enqueueSnackbar } = useSnackbar();\n\n  const { copy } = useCopyToClipboard();\n\n  const [inviteEmail, setInviteEmail] = useState('');\n\n  const [folderName, setFolderName] = useState(folder.name);\n\n  const editFolder = useBoolean();\n\n  const checkbox = useBoolean();\n\n  const share = useBoolean();\n\n  const popover = usePopover();\n\n  const confirm = useBoolean();\n\n  const details = useBoolean();\n\n  const favorite = useBoolean(folder.isFavorited);\n\n  const handleChangeInvite = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    setInviteEmail(event.target.value);\n  }, []);\n\n  const handleChangeFolderName = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    setFolderName(event.target.value);\n  }, []);\n\n  const handleCopy = useCallback(() => {\n    enqueueSnackbar('Copied!');\n    copy(folder.url);\n  }, [copy, enqueueSnackbar, folder.url]);\n\n  const renderAction = (\n    <Stack\n      direction=\"row\"\n      alignItems=\"center\"\n      sx={{\n        top: 8,\n        right: 8,\n        position: 'absolute',\n      }}\n    >\n      <Checkbox\n        color=\"warning\"\n        icon={<Iconify icon=\"eva:star-outline\" />}\n        checkedIcon={<Iconify icon=\"eva:star-fill\" />}\n        checked={favorite.value}\n        onChange={favorite.onToggle}\n      />\n\n      <IconButton color={popover.open ? 'inherit' : 'default'} onClick={popover.onOpen}>\n        <Iconify icon=\"eva:more-vertical-fill\" />\n      </IconButton>\n    </Stack>\n  );\n\n  const renderIcon =\n    (checkbox.value || selected) && onSelect ? (\n      <Checkbox\n        size=\"medium\"\n        checked={selected}\n        onClick={onSelect}\n        icon={<Iconify icon=\"eva:radio-button-off-fill\" />}\n        checkedIcon={<Iconify icon=\"eva:checkmark-circle-2-fill\" />}\n        sx={{ p: 0.75 }}\n      />\n    ) : (\n      <Box\n        component=\"img\"\n        src=\"/static/assets/icons/files/ic_folder.svg\"\n        sx={{ width: 36, height: 36 }}\n      />\n    );\n\n  const renderText = (\n    <ListItemText\n      onClick={details.onTrue}\n      primary={folder.name}\n      secondary={\n        <>\n          {fData(folder.size)}\n          <Box\n            component=\"span\"\n            sx={{\n              mx: 0.75,\n              width: 2,\n              height: 2,\n              borderRadius: '50%',\n              bgcolor: 'currentColor',\n            }}\n          />\n          {folder.totalFiles} files\n        </>\n      }\n      primaryTypographyProps={{\n        noWrap: true,\n        typography: 'subtitle1',\n      }}\n      secondaryTypographyProps={{\n        mt: 0.5,\n        component: 'span',\n        alignItems: 'center',\n        typography: 'caption',\n        color: 'text.disabled',\n        display: 'inline-flex',\n      }}\n    />\n  );\n\n  const renderAvatar = (\n    <AvatarGroup\n      max={3}\n      sx={{\n        [`& .${avatarGroupClasses.avatar}`]: {\n          width: 24,\n          height: 24,\n          '&:first-of-type': {\n            fontSize: 12,\n          },\n        },\n      }}\n    >\n      {folder.shared?.map((person) => (\n        <Avatar key={person.id} alt={person.name} src={person.avatarUrl} />\n      ))}\n    </AvatarGroup>\n  );\n\n  return (\n    <>\n      <Stack\n        component={Paper}\n        variant=\"outlined\"\n        spacing={1}\n        alignItems=\"flex-start\"\n        sx={{\n          p: 2.5,\n          maxWidth: 222,\n          borderRadius: 2,\n          bgcolor: 'unset',\n          cursor: 'pointer',\n          position: 'relative',\n          ...((checkbox.value || selected) && {\n            bgcolor: 'background.paper',\n            boxShadow: (theme) => theme.customShadows.z20,\n          }),\n          ...sx,\n        }}\n        {...other}\n      >\n        <Box onMouseEnter={checkbox.onTrue} onMouseLeave={checkbox.onFalse}>\n          {renderIcon}\n        </Box>\n\n        {renderAction}\n\n        {renderText}\n\n        {!!folder?.shared?.length && renderAvatar}\n      </Stack>\n\n      <CustomPopover\n        open={popover.open}\n        onClose={popover.onClose}\n        arrow=\"right-top\"\n        sx={{ width: 160 }}\n      >\n        <MenuItem\n          onClick={() => {\n            popover.onClose();\n            handleCopy();\n          }}\n        >\n          <Iconify icon=\"eva:link-2-fill\" />\n          Copy Link\n        </MenuItem>\n\n        <MenuItem\n          onClick={() => {\n            popover.onClose();\n            share.onTrue();\n          }}\n        >\n          <Iconify icon=\"solar:share-bold\" />\n          Share\n        </MenuItem>\n\n        <MenuItem\n          onClick={() => {\n            popover.onClose();\n            editFolder.onTrue();\n          }}\n        >\n          <Iconify icon=\"solar:pen-bold\" />\n          Edit\n        </MenuItem>\n\n        <Divider sx={{ borderStyle: 'dashed' }} />\n\n        <MenuItem\n          onClick={() => {\n            confirm.onTrue();\n            popover.onClose();\n          }}\n          sx={{ color: 'error.main' }}\n        >\n          <Iconify icon=\"solar:trash-bin-trash-bold\" />\n          Delete\n        </MenuItem>\n      </CustomPopover>\n\n      <FileManagerFileDetails\n        item={folder}\n        favorited={favorite.value}\n        onFavorite={favorite.onToggle}\n        onCopyLink={handleCopy}\n        open={details.value}\n        onClose={details.onFalse}\n        onDelete={() => {\n          details.onFalse();\n          onDelete();\n        }}\n      />\n\n      <FileManagerShareDialog\n        open={share.value}\n        shared={folder.shared}\n        inviteEmail={inviteEmail}\n        onChangeInvite={handleChangeInvite}\n        onCopyLink={handleCopy}\n        onClose={() => {\n          share.onFalse();\n          setInviteEmail('');\n        }}\n      />\n\n      <FileManagerNewFolderDialog\n        open={editFolder.value}\n        onClose={editFolder.onFalse}\n        title=\"Edit Folder\"\n        onUpdate={() => {\n          editFolder.onFalse();\n          setFolderName(folderName);\n          console.info('UPDATE FOLDER', folderName);\n        }}\n        folderName={folderName}\n        onChangeFolderName={handleChangeFolderName}\n      />\n\n      <ConfirmDialog\n        open={confirm.value}\n        onClose={confirm.onFalse}\n        title=\"Delete\"\n        content=\"Are you sure want to delete?\"\n        action={\n          <Button variant=\"contained\" color=\"error\" onClick={onDelete}>\n            Delete\n          </Button>\n        }\n      />\n    </>\n  );\n}\n","import { useState, useCallback } from 'react';\n\nimport Button from '@mui/material/Button';\nimport Avatar from '@mui/material/Avatar';\nimport Divider from '@mui/material/Divider';\nimport Tooltip from '@mui/material/Tooltip';\nimport ListItem from '@mui/material/ListItem';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemText from '@mui/material/ListItemText';\n\nimport Iconify from 'src/components/iconify';\nimport CustomPopover, { usePopover } from 'src/components/custom-popover';\n\nimport { IFileShared } from 'src/types/file';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  person: IFileShared;\n};\n\nexport default function FileManagerInvitedItem({ person }: Props) {\n  const [permission, setPermission] = useState(person.permission);\n\n  const popover = usePopover();\n\n  const handleChangePermission = useCallback((newPermission: string) => {\n    setPermission(newPermission);\n  }, []);\n\n  return (\n    <>\n      <ListItem\n        sx={{\n          px: 0,\n          py: 1,\n        }}\n      >\n        <Avatar alt={person.name} src={person.avatarUrl} sx={{ mr: 2 }} />\n\n        <ListItemText\n          primary={person.name}\n          secondary={\n            <Tooltip title={person.email}>\n              <span>{person.email}</span>\n            </Tooltip>\n          }\n          primaryTypographyProps={{ noWrap: true, typography: 'subtitle2' }}\n          secondaryTypographyProps={{ noWrap: true, component: 'span' }}\n          sx={{ flexGrow: 1, pr: 1 }}\n        />\n\n        <Button\n          size=\"small\"\n          color=\"inherit\"\n          endIcon={\n            <Iconify\n              width={20}\n              icon={popover.open ? 'eva:arrow-ios-upward-fill' : 'eva:arrow-ios-downward-fill'}\n              sx={{ ml: -1 }}\n            />\n          }\n          onClick={popover.onOpen}\n          sx={{\n            flexShrink: 0,\n            ...(popover.open && {\n              bgcolor: 'action.selected',\n            }),\n          }}\n        >\n          Can {permission}\n        </Button>\n      </ListItem>\n\n      <CustomPopover open={popover.open} onClose={popover.onClose} sx={{ width: 160 }}>\n        <>\n          <MenuItem\n            selected={permission === 'view'}\n            onClick={() => {\n              popover.onClose();\n              handleChangePermission('view');\n            }}\n          >\n            <Iconify icon=\"solar:eye-bold\" />\n            Can view\n          </MenuItem>\n\n          <MenuItem\n            selected={permission === 'edit'}\n            onClick={() => {\n              popover.onClose();\n              handleChangePermission('edit');\n            }}\n          >\n            <Iconify icon=\"solar:pen-bold\" />\n            Can edit\n          </MenuItem>\n\n          <Divider sx={{ borderStyle: 'dashed' }} />\n\n          <MenuItem\n            onClick={() => {\n              popover.onClose();\n            }}\n            sx={{ color: 'error.main' }}\n          >\n            <Iconify icon=\"solar:trash-bin-trash-bold\" />\n            Remove\n          </MenuItem>\n        </>\n      </CustomPopover>\n    </>\n  );\n}\n","import { useState, useEffect, useCallback } from 'react';\n\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport Dialog, { DialogProps } from '@mui/material/Dialog';\n\nimport Iconify from 'src/components/iconify';\nimport { Upload } from 'src/components/upload';\n\n// ----------------------------------------------------------------------\n\ninterface Props extends DialogProps {\n  title?: string;\n  //\n  onCreate?: VoidFunction;\n  onUpdate?: VoidFunction;\n  //\n  folderName?: string;\n  onChangeFolderName?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  //\n  open: boolean;\n  onClose: VoidFunction;\n}\n\nexport default function FileManagerNewFolderDialog({\n  title = 'Upload Files',\n  open,\n  onClose,\n  //\n  onCreate,\n  onUpdate,\n  //\n  folderName,\n  onChangeFolderName,\n  ...other\n}: Props) {\n  const [files, setFiles] = useState<(File | string)[]>([]);\n\n  useEffect(() => {\n    if (!open) {\n      setFiles([]);\n    }\n  }, [open]);\n\n  const handleDrop = useCallback(\n    (acceptedFiles: File[]) => {\n      const newFiles = acceptedFiles.map((file) =>\n        Object.assign(file, {\n          preview: URL.createObjectURL(file),\n        })\n      );\n\n      setFiles([...files, ...newFiles]);\n    },\n    [files]\n  );\n\n  const handleUpload = () => {\n    onClose();\n    console.info('ON UPLOAD');\n  };\n\n  const handleRemoveFile = (inputFile: File | string) => {\n    const filtered = files.filter((file) => file !== inputFile);\n    setFiles(filtered);\n  };\n\n  const handleRemoveAllFiles = () => {\n    setFiles([]);\n  };\n\n  return (\n    <Dialog fullWidth maxWidth=\"sm\" open={open} onClose={onClose} {...other}>\n      <DialogTitle sx={{ p: (theme) => theme.spacing(3, 3, 2, 3) }}> {title} </DialogTitle>\n\n      <DialogContent dividers sx={{ pt: 1, pb: 0, border: 'none' }}>\n        {(onCreate || onUpdate) && (\n          <TextField\n            fullWidth\n            label=\"Folder name\"\n            value={folderName}\n            onChange={onChangeFolderName}\n            sx={{ mb: 3 }}\n          />\n        )}\n\n        <Upload multiple files={files} onDrop={handleDrop} onRemove={handleRemoveFile} />\n      </DialogContent>\n\n      <DialogActions>\n        <Button\n          variant=\"contained\"\n          startIcon={<Iconify icon=\"eva:cloud-upload-fill\" />}\n          onClick={handleUpload}\n        >\n          Upload\n        </Button>\n\n        {!!files.length && (\n          <Button variant=\"outlined\" color=\"inherit\" onClick={handleRemoveAllFiles}>\n            Remove all\n          </Button>\n        )}\n\n        {(onCreate || onUpdate) && (\n          <Stack direction=\"row\" justifyContent=\"flex-end\" flexGrow={1}>\n            <Button variant=\"soft\" onClick={onCreate || onUpdate}>\n              {onUpdate ? 'Save' : 'Create'}\n            </Button>\n          </Stack>\n        )}\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Stack, { StackProps } from '@mui/material/Stack';\n\nimport { RouterLink } from 'src/routes/components';\n\nimport Iconify from 'src/components/iconify';\n\n// ----------------------------------------------------------------------\n\ninterface Props extends StackProps {\n  title: string;\n  subTitle?: string;\n  link?: string;\n  onOpen?: VoidFunction;\n  collapse?: boolean;\n  onCollapse?: VoidFunction;\n}\n\nexport default function FileManagerPanel({\n  title,\n  subTitle,\n  link,\n  onOpen,\n  collapse,\n  onCollapse,\n  sx,\n  ...other\n}: Props) {\n  return (\n    <Stack direction=\"row\" alignItems=\"center\" sx={{ mb: 3, ...sx }} {...other}>\n      <Stack flexGrow={1}>\n        <Stack direction=\"row\" alignItems=\"center\" spacing={1} flexGrow={1}>\n          <Typography variant=\"h6\"> {title} </Typography>\n\n          <IconButton\n            size=\"small\"\n            color=\"primary\"\n            onClick={onOpen}\n            sx={{\n              width: 24,\n              height: 24,\n              bgcolor: 'primary.main',\n              color: 'primary.contrastText',\n              '&:hover': {\n                bgcolor: 'primary.dark',\n              },\n            }}\n          >\n            <Iconify icon=\"mingcute:add-line\" />\n          </IconButton>\n        </Stack>\n\n        <Box sx={{ typography: 'body2', color: 'text.disabled', mt: 0.5 }}>{subTitle}</Box>\n      </Stack>\n\n      {link && (\n        <Button\n          href={link}\n          component={RouterLink}\n          size=\"small\"\n          color=\"inherit\"\n          endIcon={<Iconify icon=\"eva:arrow-ios-forward-fill\" width={18} sx={{ ml: -0.5 }} />}\n        >\n          View All\n        </Button>\n      )}\n\n      {onCollapse && (\n        <IconButton onClick={onCollapse}>\n          <Iconify icon={collapse ? 'eva:arrow-ios-downward-fill' : 'eva:arrow-ios-upward-fill'} />\n        </IconButton>\n      )}\n    </Stack>\n  );\n}\n","import List from '@mui/material/List';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport Dialog, { DialogProps } from '@mui/material/Dialog';\n\nimport Iconify from 'src/components/iconify';\nimport Scrollbar from 'src/components/scrollbar';\n\nimport { IFileShared } from 'src/types/file';\n\nimport FileManagerInvitedItem from './file-manager-invited-item';\n\n// ----------------------------------------------------------------------\n\ntype Props = DialogProps & {\n  inviteEmail?: string;\n  shared?: IFileShared[] | null;\n  onCopyLink?: VoidFunction;\n  onChangeInvite?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  //\n  open: boolean;\n  onClose: VoidFunction;\n};\n\nexport default function FileManagerShareDialog({\n  shared,\n  inviteEmail,\n  onCopyLink,\n  onChangeInvite,\n  //\n  open,\n  onClose,\n  ...other\n}: Props) {\n  const hasShared = shared && !!shared.length;\n\n  return (\n    <Dialog fullWidth maxWidth=\"xs\" open={open} onClose={onClose} {...other}>\n      <DialogTitle> Invite </DialogTitle>\n\n      <DialogContent sx={{ overflow: 'unset' }}>\n        {onChangeInvite && (\n          <TextField\n            fullWidth\n            value={inviteEmail}\n            placeholder=\"Email\"\n            onChange={onChangeInvite}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <Button\n                    color=\"inherit\"\n                    variant=\"contained\"\n                    disabled={!inviteEmail}\n                    sx={{ mr: -0.75 }}\n                  >\n                    Send Invite\n                  </Button>\n                </InputAdornment>\n              ),\n            }}\n            sx={{ mb: 2 }}\n          />\n        )}\n\n        {hasShared && (\n          <Scrollbar sx={{ maxHeight: 60 * 6 }}>\n            <List disablePadding>\n              {shared.map((person) => (\n                <FileManagerInvitedItem key={person.id} person={person} />\n              ))}\n            </List>\n          </Scrollbar>\n        )}\n      </DialogContent>\n\n      <DialogActions sx={{ justifyContent: 'space-between' }}>\n        {onCopyLink && (\n          <Button startIcon={<Iconify icon=\"eva:link-2-fill\" />} onClick={onCopyLink}>\n            Copy link\n          </Button>\n        )}\n\n        {onClose && (\n          <Button variant=\"outlined\" color=\"inherit\" onClick={onClose}>\n            Close\n          </Button>\n        )}\n      </DialogActions>\n    </Dialog>\n  );\n}\n","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"componentsProps\", \"max\", \"renderSurplus\", \"slotProps\", \"spacing\", \"total\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { isFragment } from 'react-is';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Avatar, { avatarClasses } from '../Avatar';\nimport avatarGroupClasses, { getAvatarGroupUtilityClass } from './avatarGroupClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst SPACINGS = {\n  small: -16,\n  medium: null\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar']\n  };\n  return composeClasses(slots, getAvatarGroupUtilityClass, classes);\n};\nconst AvatarGroupRoot = styled('div', {\n  name: 'MuiAvatarGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${avatarGroupClasses.avatar}`]: styles.avatar\n  }, styles.root)\n})(({\n  theme,\n  ownerState\n}) => {\n  const marginValue = ownerState.spacing && SPACINGS[ownerState.spacing] !== undefined ? SPACINGS[ownerState.spacing] : -ownerState.spacing;\n  return {\n    [`& .${avatarClasses.root}`]: {\n      border: `2px solid ${(theme.vars || theme).palette.background.default}`,\n      boxSizing: 'content-box',\n      marginLeft: marginValue != null ? marginValue : -8,\n      '&:last-child': {\n        marginLeft: 0\n      }\n    },\n    display: 'flex',\n    flexDirection: 'row-reverse'\n  };\n});\nconst AvatarGroup = /*#__PURE__*/React.forwardRef(function AvatarGroup(inProps, ref) {\n  var _slotProps$additional;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAvatarGroup'\n  });\n  const {\n      children: childrenProp,\n      className,\n      component = 'div',\n      componentsProps = {},\n      max = 5,\n      renderSurplus,\n      slotProps = {},\n      spacing = 'medium',\n      total,\n      variant = 'circular'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  let clampedMax = max < 2 ? 2 : max;\n  const ownerState = _extends({}, props, {\n    max,\n    spacing,\n    component,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const children = React.Children.toArray(childrenProp).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The AvatarGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n    return /*#__PURE__*/React.isValidElement(child);\n  });\n  const totalAvatars = total || children.length;\n  if (totalAvatars === clampedMax) {\n    clampedMax += 1;\n  }\n  clampedMax = Math.min(totalAvatars + 1, clampedMax);\n  const maxAvatars = Math.min(children.length, clampedMax - 1);\n  const extraAvatars = Math.max(totalAvatars - clampedMax, totalAvatars - maxAvatars, 0);\n  const extraAvatarsElement = renderSurplus ? renderSurplus(extraAvatars) : `+${extraAvatars}`;\n  const additionalAvatarSlotProps = (_slotProps$additional = slotProps.additionalAvatar) != null ? _slotProps$additional : componentsProps.additionalAvatar;\n  return /*#__PURE__*/_jsxs(AvatarGroupRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: [extraAvatars ? /*#__PURE__*/_jsx(Avatar, _extends({\n      variant: variant\n    }, additionalAvatarSlotProps, {\n      className: clsx(classes.avatar, additionalAvatarSlotProps == null ? void 0 : additionalAvatarSlotProps.className),\n      children: extraAvatarsElement\n    })) : null, children.slice(0, maxAvatars).reverse().map(child => {\n      return /*#__PURE__*/React.cloneElement(child, {\n        className: clsx(child.props.className, classes.avatar),\n        variant: child.props.variant || variant\n      });\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? AvatarGroup.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The avatars to stack.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `slotProps` prop.\n   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    additionalAvatar: PropTypes.object\n  }),\n  /**\n   * Max avatars to show before +x.\n   * @default 5\n   */\n  max: chainPropTypes(PropTypes.number, props => {\n    if (props.max < 2) {\n      return new Error(['MUI: The prop `max` should be equal to 2 or above.', 'A value below is clamped to 2.'].join('\\n'));\n    }\n    return null;\n  }),\n  /**\n   * custom renderer of extraAvatars\n   * @param {number} surplus number of extra avatars\n   * @returns {React.ReactNode} custom element to display\n   */\n  renderSurplus: PropTypes.func,\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.\n   *\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    additionalAvatar: PropTypes.object\n  }),\n  /**\n   * Spacing between avatars.\n   * @default 'medium'\n   */\n  spacing: PropTypes.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.number]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The total number of avatars. Used for calculating the number of extra avatars.\n   * @default children.length\n   */\n  total: PropTypes.number,\n  /**\n   * The variant to use.\n   * @default 'circular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default AvatarGroup;"],"names":["ConfirmDialog","_ref","title","content","action","open","onClose","other","_jsxs","Dialog","fullWidth","maxWidth","children","_jsx","DialogTitle","sx","pb","DialogContent","typography","DialogActions","Button","variant","color","onClick","FileManagerFileDetails","item","favorited","onFavorite","onCopyLink","onDelete","name","size","url","type","shared","modifiedAt","hasShared","length","toggleTags","useBoolean","share","properties","inviteEmail","setInviteEmail","useState","tags","setTags","slice","handleChangeInvite","useCallback","event","target","value","handleChangeTags","newValue","renderTags","Stack","spacing","direction","alignItems","justifyContent","IconButton","onToggle","Iconify","icon","Autocomplete","multiple","freeSolo","options","map","option","getOptionLabel","defaultValue","onChange","renderOption","props","_createElement","key","selected","getTagProps","index","Chip","label","renderInput","params","TextField","placeholder","renderProperties","_Fragment","textTransform","Box","component","width","mr","fData","fDateTime","fileFormat","renderShared","p","Typography","onTrue","height","bgcolor","pl","pr","person","FileManagerInvitedItem","id","Drawer","anchor","slotProps","backdrop","invisible","PaperProps","Scrollbar","Checkbox","checkedIcon","checked","FileThumbnail","imageView","file","imgSx","borderRadius","wordBreak","Divider","borderStyle","startIcon","FileManagerShareDialog","onChangeInvite","onFalse","FileManagerFolderItem","_folder$shared","_folder$shared2","folder","onSelect","enqueueSnackbar","useSnackbar","copy","useCopyToClipboard","folderName","setFolderName","editFolder","checkbox","popover","usePopover","confirm","details","favorite","isFavorited","handleChangeFolderName","handleCopy","renderAction","top","right","position","onOpen","renderIcon","src","renderText","ListItemText","primary","secondary","mx","totalFiles","primaryTypographyProps","noWrap","secondaryTypographyProps","mt","display","renderAvatar","AvatarGroup","max","concat","avatarGroupClasses","avatar","fontSize","Avatar","alt","avatarUrl","Paper","cursor","boxShadow","theme","customShadows","z20","onMouseEnter","onMouseLeave","CustomPopover","arrow","MenuItem","FileManagerNewFolderDialog","onUpdate","console","info","onChangeFolderName","permission","setPermission","handleChangePermission","newPermission","ListItem","px","py","Tooltip","email","flexGrow","endIcon","ml","flexShrink","onCreate","files","setFiles","useEffect","handleDrop","acceptedFiles","newFiles","Object","assign","preview","URL","createObjectURL","dividers","pt","border","mb","Upload","onDrop","onRemove","inputFile","filtered","filter","handleUpload","handleRemoveAllFiles","FileManagerPanel","subTitle","link","collapse","onCollapse","href","RouterLink","overflow","InputProps","endAdornment","InputAdornment","disabled","maxHeight","List","disablePadding","_excluded","SPACINGS","small","medium","AvatarGroupRoot","styled","slot","overridesResolver","styles","_extends","root","ownerState","marginValue","undefined","avatarClasses","vars","palette","background","default","boxSizing","marginLeft","flexDirection","React","inProps","ref","_slotProps$additional","useThemeProps","childrenProp","className","componentsProps","renderSurplus","total","_objectWithoutPropertiesLoose","clampedMax","classes","composeClasses","getAvatarGroupUtilityClass","useUtilityClasses","toArray","child","totalAvatars","Math","min","maxAvatars","extraAvatars","extraAvatarsElement","additionalAvatarSlotProps","additionalAvatar","as","clsx","reverse"],"sourceRoot":""}