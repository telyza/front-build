{"version":3,"file":"static/js/5367.d8021a5c.chunk.js","mappings":"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","sources":["components/color-utils/color-picker.tsx","components/color-utils/color-preview.tsx","components/custom-date-range-picker/utils.ts","components/custom-date-range-picker/custom-date-range-picker.tsx","components/custom-date-range-picker/use-date-range-picker.ts","api/calendar.ts","sections/calendar/styles.tsx","sections/calendar/calendar-form.tsx","sections/calendar/calendar-toolbar.tsx","sections/calendar/calendar-filters.tsx","sections/calendar/calendar-filters-result.tsx","sections/calendar/view/calendar-view.tsx","sections/calendar/hooks/use-calendar.ts","sections/calendar/hooks/use-event.ts","pages/dashboard/calendar.tsx","utils/uuidv4.ts"],"sourcesContent":["import { forwardRef, useCallback } from 'react';\n\nimport Stack from '@mui/material/Stack';\nimport { alpha } from '@mui/material/styles';\nimport ButtonBase from '@mui/material/ButtonBase';\n\nimport Iconify from '../iconify';\nimport { ColorPickerProps } from './types';\n\n// ----------------------------------------------------------------------\n\nconst ColorPicker = forwardRef<HTMLDivElement, ColorPickerProps>(\n  ({ colors, selected, onSelectColor, limit = 'auto', sx, ...other }, ref) => {\n    const singleSelect = typeof selected === 'string';\n\n    const handleSelect = useCallback(\n      (color: string) => {\n        if (singleSelect) {\n          if (color !== selected) {\n            onSelectColor(color);\n          }\n        } else {\n          const newSelected = selected.includes(color)\n            ? selected.filter((value) => value !== color)\n            : [...selected, color];\n\n          onSelectColor(newSelected);\n        }\n      },\n      [onSelectColor, selected, singleSelect]\n    );\n\n    return (\n      <Stack\n        ref={ref}\n        direction=\"row\"\n        display=\"inline-flex\"\n        sx={{\n          flexWrap: 'wrap',\n          ...(limit !== 'auto' && {\n            width: limit * 36,\n            justifyContent: 'flex-end',\n          }),\n          ...sx,\n        }}\n        {...other}\n      >\n        {colors.map((color) => {\n          const hasSelected = singleSelect ? selected === color : selected.includes(color);\n\n          return (\n            <ButtonBase\n              key={color}\n              sx={{\n                width: 36,\n                height: 36,\n                borderRadius: '50%',\n              }}\n              onClick={() => {\n                handleSelect(color);\n              }}\n            >\n              <Stack\n                alignItems=\"center\"\n                justifyContent=\"center\"\n                sx={{\n                  width: 20,\n                  height: 20,\n                  bgcolor: color,\n                  borderRadius: '50%',\n                  border: (theme) => `solid 1px ${alpha(theme.palette.grey[500], 0.16)}`,\n                  ...(hasSelected && {\n                    transform: 'scale(1.3)',\n                    boxShadow: `4px 4px 8px 0 ${alpha(color, 0.48)}`,\n                    outline: `solid 2px ${alpha(color, 0.08)}`,\n                    transition: (theme) =>\n                      theme.transitions.create('all', {\n                        duration: theme.transitions.duration.shortest,\n                      }),\n                  }),\n                }}\n              >\n                <Iconify\n                  width={hasSelected ? 12 : 0}\n                  icon=\"eva:checkmark-fill\"\n                  sx={{\n                    color: (theme) => theme.palette.getContrastText(color),\n                    transition: (theme) =>\n                      theme.transitions.create('all', {\n                        duration: theme.transitions.duration.shortest,\n                      }),\n                  }}\n                />\n              </Stack>\n            </ButtonBase>\n          );\n        })}\n      </Stack>\n    );\n  }\n);\n\nexport default ColorPicker;\n","import Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport { alpha } from '@mui/material/styles';\n\nimport { ColorPreviewProps } from './types';\n\n// ----------------------------------------------------------------------\n\nexport default function ColorPreview({ colors, limit = 3, sx }: ColorPreviewProps) {\n  const renderColors = colors.slice(0, limit);\n\n  const remainingColor = colors.length - limit;\n\n  return (\n    <Stack component=\"span\" direction=\"row\" alignItems=\"center\" justifyContent=\"flex-end\" sx={sx}>\n      {renderColors.map((color, index) => (\n        <Box\n          key={color + index}\n          sx={{\n            ml: -0.75,\n            width: 16,\n            height: 16,\n            bgcolor: color,\n            borderRadius: '50%',\n            border: (theme) => `solid 2px ${theme.palette.background.paper}`,\n            boxShadow: (theme) => `inset -1px 1px 2px ${alpha(theme.palette.common.black, 0.24)}`,\n          }}\n        />\n      ))}\n\n      {colors.length > limit && (\n        <Box component=\"span\" sx={{ typography: 'subtitle2' }}>{`+${remainingColor}`}</Box>\n      )}\n    </Stack>\n  );\n}\n","import { getYear, isSameDay, isSameMonth } from 'date-fns';\n\nimport { fDate } from 'src/utils/format-time';\n\n// ----------------------------------------------------------------------\n\nexport function shortDateLabel(startDate: Date | null, endDate: Date | null) {\n  const getCurrentYear = new Date().getFullYear();\n\n  const startDateYear = startDate ? getYear(startDate) : null;\n\n  const endDateYear = endDate ? getYear(endDate) : null;\n\n  const currentYear = getCurrentYear === startDateYear && getCurrentYear === endDateYear;\n\n  const sameDay = startDate && endDate ? isSameDay(new Date(startDate), new Date(endDate)) : false;\n\n  const sameMonth =\n    startDate && endDate ? isSameMonth(new Date(startDate), new Date(endDate)) : false;\n\n  if (currentYear) {\n    if (sameMonth) {\n      if (sameDay) {\n        return fDate(endDate, 'dd MMM yy');\n      }\n      return `${fDate(startDate, 'dd')} - ${fDate(endDate, 'dd MMM yy')}`;\n    }\n    return `${fDate(startDate, 'dd MMM')} - ${fDate(endDate, 'dd MMM yy')}`;\n  }\n\n  return `${fDate(startDate, 'dd MMM yy')} - ${fDate(endDate, 'dd MMM yy')}`;\n}\n","import Paper from '@mui/material/Paper';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { DateCalendar } from '@mui/x-date-pickers/DateCalendar';\n\nimport { useResponsive } from 'src/hooks/use-responsive';\n\nimport { DateRangePickerProps } from './types';\n\n// ----------------------------------------------------------------------\n\nexport default function CustomDateRangePicker({\n  title = 'Select date range',\n  variant = 'input',\n  //\n  startDate,\n  endDate,\n  //\n  onChangeStartDate,\n  onChangeEndDate,\n  //\n  open,\n  onClose,\n  //\n  error,\n}: DateRangePickerProps) {\n  const mdUp = useResponsive('up', 'md');\n\n  const isCalendarView = variant === 'calendar';\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth={isCalendarView ? false : 'xs'}\n      open={open}\n      onClose={onClose}\n      PaperProps={{\n        sx: {\n          ...(isCalendarView && {\n            maxWidth: 720,\n          }),\n        },\n      }}\n    >\n      <DialogTitle sx={{ pb: 2 }}>{title}</DialogTitle>\n\n      <DialogContent\n        sx={{\n          ...(isCalendarView &&\n            mdUp && {\n              overflow: 'unset',\n            }),\n        }}\n      >\n        <Stack\n          justifyContent=\"center\"\n          spacing={isCalendarView ? 3 : 2}\n          direction={isCalendarView && mdUp ? 'row' : 'column'}\n          sx={{ pt: 1 }}\n        >\n          {isCalendarView ? (\n            <>\n              <Paper\n                variant=\"outlined\"\n                sx={{\n                  borderRadius: 2,\n                  borderColor: 'divider',\n                  borderStyle: 'dashed',\n                }}\n              >\n                <DateCalendar value={startDate} onChange={onChangeStartDate} />\n              </Paper>\n\n              <Paper\n                variant=\"outlined\"\n                sx={{\n                  borderRadius: 2,\n                  borderColor: 'divider',\n                  borderStyle: 'dashed',\n                }}\n              >\n                <DateCalendar value={endDate} onChange={onChangeEndDate} />\n              </Paper>\n            </>\n          ) : (\n            <>\n              <DatePicker label=\"Start date\" value={startDate} onChange={onChangeStartDate} />\n\n              <DatePicker label=\"End date\" value={endDate} onChange={onChangeEndDate} />\n            </>\n          )}\n        </Stack>\n\n        {error && (\n          <FormHelperText error sx={{ px: 2 }}>\n            End date must be later than start date\n          </FormHelperText>\n        )}\n      </DialogContent>\n\n      <DialogActions>\n        <Button variant=\"outlined\" color=\"inherit\" onClick={onClose}>\n          Cancel\n        </Button>\n\n        <Button disabled={error} variant=\"contained\" onClick={onClose}>\n          Apply\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import { useState, useCallback } from 'react';\n\nimport { fDate } from 'src/utils/format-time';\n\nimport { shortDateLabel } from './utils';\nimport { DateRangePickerProps } from './types';\n\n// ----------------------------------------------------------------------\n\ntype ReturnType = DateRangePickerProps;\n\nexport default function useDateRangePicker(start: Date | null, end: Date | null): ReturnType {\n  const [open, setOpen] = useState(false);\n\n  const [endDate, setEndDate] = useState(end);\n\n  const [startDate, setStartDate] = useState(start);\n\n  const error = start && end ? new Date(start).getTime() > new Date(end).getTime() : false;\n\n  const onOpen = useCallback(() => {\n    setOpen(true);\n  }, []);\n\n  const onClose = useCallback(() => {\n    setOpen(false);\n  }, []);\n\n  const onChangeStartDate = useCallback((newValue: Date | null) => {\n    setStartDate(newValue);\n  }, []);\n\n  const onChangeEndDate = useCallback(\n    (newValue: Date | null) => {\n      if (error) {\n        setEndDate(null);\n      }\n      setEndDate(newValue);\n    },\n    [error]\n  );\n\n  const onReset = useCallback(() => {\n    setStartDate(null);\n    setEndDate(null);\n  }, []);\n\n  return {\n    startDate,\n    endDate,\n    onChangeStartDate,\n    onChangeEndDate,\n    //\n    open,\n    onOpen,\n    onClose,\n    onReset,\n    //\n    selected: !!startDate && !!endDate,\n    error,\n    //\n    label: `${fDate(startDate)} - ${fDate(endDate)}`,\n    shortLabel: shortDateLabel(startDate, endDate),\n    //\n    setStartDate,\n    setEndDate,\n  };\n}\n","import { useMemo } from 'react';\nimport useSWR, { mutate } from 'swr';\n\nimport { fetcher, endpoints } from 'src/utils/axios';\n\nimport { ICalendarEvent } from 'src/types/calendar';\n\n// ----------------------------------------------------------------------\n\nconst URL = endpoints.calendar;\n\nconst options = {\n  revalidateIfStale: false,\n  revalidateOnFocus: false,\n  revalidateOnReconnect: false,\n};\n\nexport function useGetEvents() {\n  const { data, isLoading, error, isValidating } = useSWR(URL, fetcher, options);\n\n  const memoizedValue = useMemo(() => {\n    const events = data?.events.map((event: ICalendarEvent) => ({\n      ...event,\n      textColor: event.color,\n    }));\n\n    return {\n      events: (events as ICalendarEvent[]) || [],\n      eventsLoading: isLoading,\n      eventsError: error,\n      eventsValidating: isValidating,\n      eventsEmpty: !isLoading && !data?.events.length,\n    };\n  }, [data?.events, error, isLoading, isValidating]);\n\n  return memoizedValue;\n}\n\n// ----------------------------------------------------------------------\n\nexport async function createEvent(eventData: ICalendarEvent) {\n  /**\n   * Work on server\n   */\n  // const data = { eventData };\n  // await axios.post(URL, data);\n\n  /**\n   * Work in local\n   */\n  mutate(\n    URL,\n    (currentData: any) => {\n      const events: ICalendarEvent[] = [...currentData.events, eventData];\n\n      return {\n        ...currentData,\n        events,\n      };\n    },\n    false\n  );\n}\n\n// ----------------------------------------------------------------------\n\nexport async function updateEvent(eventData: Partial<ICalendarEvent>) {\n  /**\n   * Work on server\n   */\n  // const data = { eventData };\n  // await axios.put(endpoints.calendar, data);\n\n  /**\n   * Work in local\n   */\n  mutate(\n    URL,\n    (currentData: any) => {\n      const events: ICalendarEvent[] = currentData.events.map((event: ICalendarEvent) =>\n        event.id === eventData.id ? { ...event, ...eventData } : event\n      );\n\n      return {\n        ...currentData,\n        events,\n      };\n    },\n    false\n  );\n}\n\n// ----------------------------------------------------------------------\n\nexport async function deleteEvent(eventId: string) {\n  /**\n   * Work on server\n   */\n  // const data = { eventId };\n  // await axios.patch(endpoints.calendar, data);\n\n  /**\n   * Work in local\n   */\n  mutate(\n    URL,\n    (currentData: any) => {\n      const events: ICalendarEvent[] = currentData.events.filter(\n        (event: ICalendarEvent) => event.id !== eventId\n      );\n\n      return {\n        ...currentData,\n        events,\n      };\n    },\n    false\n  );\n}\n","import { alpha, styled } from '@mui/material/styles';\n\n// ----------------------------------------------------------------------\n\nexport const StyledCalendar = styled('div')(({ theme }) => ({\n  width: 'calc(100% + 2px)',\n  marginLeft: -1,\n  marginBottom: -1,\n\n  '& .fc': {\n    '--fc-border-color': alpha(theme.palette.grey[500], 0.16),\n    '--fc-now-indicator-color': theme.palette.error.main,\n    '--fc-today-bg-color': alpha(theme.palette.grey[500], 0.08),\n    '--fc-page-bg-color': theme.palette.background.default,\n    '--fc-neutral-bg-color': theme.palette.background.neutral,\n    '--fc-list-event-hover-bg-color': theme.palette.action.hover,\n    '--fc-highlight-color': theme.palette.action.hover,\n  },\n\n  '& .fc .fc-license-message': { display: 'none' },\n  '& .fc a': { color: theme.palette.text.primary },\n\n  // Table Head\n  '& .fc .fc-col-header ': {\n    boxShadow: `inset 0 -1px 0 ${theme.palette.divider}`,\n    '& th': { borderColor: 'transparent' },\n    '& .fc-col-header-cell-cushion': {\n      ...theme.typography.subtitle2,\n      padding: '13px 0',\n    },\n  },\n\n  // List Empty\n  '& .fc .fc-list-empty': {\n    ...theme.typography.h6,\n    backgroundColor: 'transparent',\n    color: theme.palette.text.secondary,\n  },\n\n  // Event\n  '& .fc .fc-event': {\n    borderColor: 'transparent !important',\n    backgroundColor: 'transparent !important',\n  },\n  '& .fc .fc-event .fc-event-main': {\n    padding: '2px 4px',\n    borderRadius: 6,\n    backgroundColor: theme.palette.common.white,\n    '&:before': {\n      top: 0,\n      left: 0,\n      width: '100%',\n      content: \"''\",\n      opacity: 0.24,\n      height: '100%',\n      borderRadius: 6,\n      position: 'absolute',\n      backgroundColor: 'currentColor',\n      transition: theme.transitions.create(['opacity']),\n      '&:hover': {\n        '&:before': {\n          opacity: 0.32,\n        },\n      },\n    },\n  },\n  '& .fc .fc-event .fc-event-main-frame': {\n    fontSize: 13,\n    lineHeight: '20px',\n    filter: 'brightness(0.48)',\n  },\n  '& .fc .fc-daygrid-event .fc-event-title': {\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n    textOverflow: 'ellipsis',\n  },\n  '& .fc .fc-event .fc-event-time': {\n    overflow: 'unset',\n    fontWeight: theme.typography.fontWeightBold,\n  },\n\n  // Popover\n  '& .fc .fc-popover': {\n    border: 0,\n    overflow: 'hidden',\n    boxShadow: theme.customShadows.dropdown,\n    borderRadius: theme.shape.borderRadius * 1.5,\n    backgroundColor: theme.palette.background.paper,\n  },\n  '& .fc .fc-popover-header': {\n    ...theme.typography.subtitle2,\n    padding: theme.spacing(1),\n    backgroundColor: alpha(theme.palette.grey[500], 0.08),\n  },\n  '& .fc .fc-popover-close': {\n    opacity: 0.48,\n    transition: theme.transitions.create(['opacity']),\n    '&:hover': { opacity: 1 },\n  },\n  '& .fc .fc-more-popover .fc-popover-body': {\n    padding: theme.spacing(1),\n  },\n  '& .fc .fc-popover-body': {\n    '& .fc-daygrid-event.fc-event-start, & .fc-daygrid-event.fc-event-end': {\n      margin: '2px 0',\n    },\n  },\n\n  // Month View\n  '& .fc .fc-day-other .fc-daygrid-day-top': {\n    opacity: 1,\n    '& .fc-daygrid-day-number': {\n      color: theme.palette.text.disabled,\n    },\n  },\n  '& .fc .fc-daygrid-day-number': {\n    ...theme.typography.body2,\n    padding: theme.spacing(1, 1, 0),\n  },\n  '& .fc .fc-daygrid-event': {\n    marginTop: 4,\n  },\n  '& .fc .fc-daygrid-event.fc-event-start, & .fc .fc-daygrid-event.fc-event-end': {\n    marginLeft: 4,\n    marginRight: 4,\n  },\n  '& .fc .fc-daygrid-more-link': {\n    ...theme.typography.caption,\n    color: theme.palette.text.secondary,\n    '&:hover': {\n      backgroundColor: 'unset',\n      textDecoration: 'underline',\n      color: theme.palette.text.primary,\n      fontWeight: theme.typography.fontWeightMedium,\n    },\n  },\n\n  // Week & Day View\n  '& .fc .fc-timegrid-axis-cushion': {\n    ...theme.typography.body2,\n    color: theme.palette.text.secondary,\n  },\n  '& .fc .fc-timegrid-slot-label-cushion': {\n    ...theme.typography.body2,\n  },\n\n  // Agenda View\n  '& .fc-direction-ltr .fc-list-day-text, .fc-direction-rtl .fc-list-day-side-text, .fc-direction-ltr .fc-list-day-side-text, .fc-direction-rtl .fc-list-day-text':\n    {\n      ...theme.typography.subtitle2,\n    },\n  '& .fc .fc-list-event': {\n    ...theme.typography.body2,\n    '& .fc-list-event-time': {\n      color: theme.palette.text.secondary,\n    },\n  },\n  '& .fc .fc-list-table': {\n    '& th, td': {\n      borderColor: 'transparent',\n    },\n  },\n}));\n","import * as Yup from 'yup';\nimport { useCallback } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\n\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport Tooltip from '@mui/material/Tooltip';\nimport IconButton from '@mui/material/IconButton';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport DialogActions from '@mui/material/DialogActions';\nimport { MobileDateTimePicker } from '@mui/x-date-pickers/MobileDateTimePicker';\n\nimport uuidv4 from 'src/utils/uuidv4';\nimport { isAfter, fTimestamp } from 'src/utils/format-time';\n\nimport { createEvent, updateEvent, deleteEvent } from 'src/api/calendar';\n\nimport Iconify from 'src/components/iconify';\nimport { useSnackbar } from 'src/components/snackbar';\nimport { ColorPicker } from 'src/components/color-utils';\nimport FormProvider, { RHFSwitch, RHFTextField } from 'src/components/hook-form';\n\nimport { ICalendarDate, ICalendarEvent } from 'src/types/calendar';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  colorOptions: string[];\n  onClose: VoidFunction;\n  currentEvent?: ICalendarEvent;\n};\n\nexport default function CalendarForm({ currentEvent, colorOptions, onClose }: Props) {\n  const { enqueueSnackbar } = useSnackbar();\n\n  const EventSchema = Yup.object().shape({\n    title: Yup.string().max(255).required('Title is required'),\n    description: Yup.string().max(5000, 'Description must be at most 5000 characters'),\n    // not required\n    color: Yup.string(),\n    allDay: Yup.boolean(),\n    start: Yup.mixed(),\n    end: Yup.mixed(),\n  });\n\n  const methods = useForm({\n    resolver: yupResolver(EventSchema),\n    defaultValues: currentEvent,\n  });\n\n  const {\n    reset,\n    watch,\n    control,\n    handleSubmit,\n    formState: { isSubmitting },\n  } = methods;\n\n  const values = watch();\n\n  const dateError = isAfter(values.start, values.end);\n\n  const onSubmit = handleSubmit(async (data) => {\n    const eventData: ICalendarEvent = {\n      id: currentEvent?.id ? currentEvent?.id : uuidv4(),\n      color: data?.color,\n      title: data?.title,\n      allDay: data?.allDay,\n      description: data?.description,\n      end: data?.end,\n      start: data?.start,\n    } as ICalendarEvent;\n\n    try {\n      if (!dateError) {\n        if (currentEvent?.id) {\n          await updateEvent(eventData);\n          enqueueSnackbar('Update success!');\n        } else {\n          await createEvent(eventData);\n          enqueueSnackbar('Create success!');\n        }\n        onClose();\n        reset();\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  });\n\n  const onDelete = useCallback(async () => {\n    try {\n      await deleteEvent(`${currentEvent?.id}`);\n      enqueueSnackbar('Delete success!');\n      onClose();\n    } catch (error) {\n      console.error(error);\n    }\n  }, [currentEvent?.id, enqueueSnackbar, onClose]);\n\n  return (\n    <FormProvider methods={methods} onSubmit={onSubmit}>\n      <Stack spacing={3} sx={{ px: 3 }}>\n        <RHFTextField name=\"title\" label=\"Title\" />\n\n        <RHFTextField name=\"description\" label=\"Description\" multiline rows={3} />\n\n        <RHFSwitch name=\"allDay\" label=\"All day\" />\n\n        <Controller\n          name=\"start\"\n          control={control}\n          render={({ field }) => (\n            <MobileDateTimePicker\n              {...field}\n              value={new Date(field.value as ICalendarDate)}\n              onChange={(newValue) => {\n                if (newValue) {\n                  field.onChange(fTimestamp(newValue));\n                }\n              }}\n              label=\"Start date\"\n              format=\"dd/MM/yyyy hh:mm a\"\n              slotProps={{\n                textField: {\n                  fullWidth: true,\n                },\n              }}\n            />\n          )}\n        />\n\n        <Controller\n          name=\"end\"\n          control={control}\n          render={({ field }) => (\n            <MobileDateTimePicker\n              {...field}\n              value={new Date(field.value as ICalendarDate)}\n              onChange={(newValue) => {\n                if (newValue) {\n                  field.onChange(fTimestamp(newValue));\n                }\n              }}\n              label=\"End date\"\n              format=\"dd/MM/yyyy hh:mm a\"\n              slotProps={{\n                textField: {\n                  fullWidth: true,\n                  error: dateError,\n                  helperText: dateError && 'End date must be later than start date',\n                },\n              }}\n            />\n          )}\n        />\n\n        <Controller\n          name=\"color\"\n          control={control}\n          render={({ field }) => (\n            <ColorPicker\n              selected={field.value as string}\n              onSelectColor={(color) => field.onChange(color as string)}\n              colors={colorOptions}\n            />\n          )}\n        />\n      </Stack>\n\n      <DialogActions>\n        {!!currentEvent?.id && (\n          <Tooltip title=\"Delete Event\">\n            <IconButton onClick={onDelete}>\n              <Iconify icon=\"solar:trash-bin-trash-bold\" />\n            </IconButton>\n          </Tooltip>\n        )}\n\n        <Box sx={{ flexGrow: 1 }} />\n\n        <Button variant=\"outlined\" color=\"inherit\" onClick={onClose}>\n          Cancel\n        </Button>\n\n        <LoadingButton\n          type=\"submit\"\n          variant=\"contained\"\n          loading={isSubmitting}\n          disabled={dateError}\n        >\n          Save Changes\n        </LoadingButton>\n      </DialogActions>\n    </FormProvider>\n  );\n}\n","import Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport MenuItem from '@mui/material/MenuItem';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport LinearProgress from '@mui/material/LinearProgress';\n\nimport { useResponsive } from 'src/hooks/use-responsive';\n\nimport { fDate } from 'src/utils/format-time';\n\nimport Iconify from 'src/components/iconify';\nimport CustomPopover, { usePopover } from 'src/components/custom-popover';\n\nimport { ICalendarView } from 'src/types/calendar';\n\n// ----------------------------------------------------------------------\n\nconst VIEW_OPTIONS = [\n  {\n    value: 'dayGridMonth',\n    label: 'Month',\n    icon: 'mingcute:calendar-month-line',\n  },\n  { value: 'timeGridWeek', label: 'Week', icon: 'mingcute:calendar-week-line' },\n  { value: 'timeGridDay', label: 'Day', icon: 'mingcute:calendar-day-line' },\n  {\n    value: 'listWeek',\n    label: 'Agenda',\n    icon: 'fluent:calendar-agenda-24-regular',\n  },\n] as const;\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  date: Date;\n  view: ICalendarView;\n  loading: boolean;\n  onToday: VoidFunction;\n  onNextDate: VoidFunction;\n  onPrevDate: VoidFunction;\n  onOpenFilters: VoidFunction;\n  onChangeView: (newView: ICalendarView) => void;\n};\n\nexport default function CalendarToolbar({\n  date,\n  view,\n  loading,\n  onToday,\n  onNextDate,\n  onPrevDate,\n  onChangeView,\n  onOpenFilters,\n}: Props) {\n  const smUp = useResponsive('up', 'sm');\n\n  const popover = usePopover();\n\n  const selectedItem = VIEW_OPTIONS.filter((item) => item.value === view)[0];\n\n  return (\n    <>\n      <Stack\n        direction=\"row\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        sx={{ p: 2.5, pr: 2, position: 'relative' }}\n      >\n        {smUp && (\n          <Button\n            size=\"small\"\n            color=\"inherit\"\n            onClick={popover.onOpen}\n            startIcon={<Iconify icon={selectedItem.icon} />}\n            endIcon={<Iconify icon=\"eva:arrow-ios-downward-fill\" sx={{ ml: -0.5 }} />}\n          >\n            {selectedItem.label}\n          </Button>\n        )}\n\n        <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n          <IconButton onClick={onPrevDate}>\n            <Iconify icon=\"eva:arrow-ios-back-fill\" />\n          </IconButton>\n\n          <Typography variant=\"h6\">{fDate(date)}</Typography>\n\n          <IconButton onClick={onNextDate}>\n            <Iconify icon=\"eva:arrow-ios-forward-fill\" />\n          </IconButton>\n        </Stack>\n\n        <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n          <Button size=\"small\" color=\"error\" variant=\"contained\" onClick={onToday}>\n            Today\n          </Button>\n\n          <IconButton onClick={onOpenFilters}>\n            <Iconify icon=\"ic:round-filter-list\" />\n          </IconButton>\n        </Stack>\n\n        {loading && (\n          <LinearProgress\n            color=\"inherit\"\n            sx={{\n              height: 2,\n              width: 1,\n              position: 'absolute',\n              bottom: 0,\n              left: 0,\n            }}\n          />\n        )}\n      </Stack>\n\n      <CustomPopover\n        open={popover.open}\n        onClose={popover.onClose}\n        arrow=\"top-left\"\n        sx={{ width: 160 }}\n      >\n        {VIEW_OPTIONS.map((viewOption) => (\n          <MenuItem\n            key={viewOption.value}\n            selected={viewOption.value === view}\n            onClick={() => {\n              popover.onClose();\n              onChangeView(viewOption.value);\n            }}\n          >\n            <Iconify icon={viewOption.icon} />\n            {viewOption.label}\n          </MenuItem>\n        ))}\n      </CustomPopover>\n    </>\n  );\n}\n","import { useCallback } from 'react';\nimport orderBy from 'lodash/orderBy';\n\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Badge from '@mui/material/Badge';\nimport Drawer from '@mui/material/Drawer';\nimport Divider from '@mui/material/Divider';\nimport Tooltip from '@mui/material/Tooltip';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\n\nimport { fDateTime } from 'src/utils/format-time';\n\nimport Iconify from 'src/components/iconify';\nimport Scrollbar from 'src/components/scrollbar';\nimport { ColorPicker } from 'src/components/color-utils';\n\nimport { ICalendarEvent, ICalendarFilters, ICalendarFilterValue } from 'src/types/calendar';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  //\n  filters: ICalendarFilters;\n  onFilters: (name: string, value: ICalendarFilterValue) => void;\n  //\n  canReset: boolean;\n  onResetFilters: VoidFunction;\n  //\n  dateError: boolean;\n  //\n  open: boolean;\n  onClose: VoidFunction;\n  //\n  events: ICalendarEvent[];\n  colorOptions: string[];\n  onClickEvent: (eventId: string) => void;\n};\n\nexport default function CalendarFilters({\n  open,\n  onClose,\n  //\n  filters,\n  onFilters,\n  //\n  canReset,\n  onResetFilters,\n  //\n  dateError,\n  //\n  events,\n  colorOptions,\n  onClickEvent,\n}: Props) {\n  const handleFilterColors = useCallback(\n    (newValue: string | string[]) => {\n      onFilters('colors', newValue as string[]);\n    },\n    [onFilters]\n  );\n\n  const handleFilterStartDate = useCallback(\n    (newValue: Date | null) => {\n      onFilters('startDate', newValue);\n    },\n    [onFilters]\n  );\n\n  const handleFilterEndDate = useCallback(\n    (newValue: Date | null) => {\n      onFilters('endDate', newValue);\n    },\n    [onFilters]\n  );\n\n  const renderHead = (\n    <Stack\n      direction=\"row\"\n      alignItems=\"center\"\n      justifyContent=\"space-between\"\n      sx={{ py: 2, pr: 1, pl: 2.5 }}\n    >\n      <Typography variant=\"h6\" sx={{ flexGrow: 1 }}>\n        Filters\n      </Typography>\n\n      <Tooltip title=\"Reset\">\n        <IconButton onClick={onResetFilters}>\n          <Badge color=\"error\" variant=\"dot\" invisible={!canReset}>\n            <Iconify icon=\"solar:restart-bold\" />\n          </Badge>\n        </IconButton>\n      </Tooltip>\n\n      <IconButton onClick={onClose}>\n        <Iconify icon=\"mingcute:close-line\" />\n      </IconButton>\n    </Stack>\n  );\n\n  const renderColors = (\n    <Stack spacing={1} sx={{ my: 3, px: 2.5 }}>\n      <Typography variant=\"subtitle2\">Colors</Typography>\n      <ColorPicker\n        colors={colorOptions}\n        selected={filters.colors}\n        onSelectColor={handleFilterColors}\n      />\n    </Stack>\n  );\n\n  const renderDateRange = (\n    <Stack spacing={1.5} sx={{ mb: 3, px: 2.5 }}>\n      <Typography variant=\"subtitle2\">Range</Typography>\n\n      <Stack spacing={2}>\n        <DatePicker label=\"Start date\" value={filters.startDate} onChange={handleFilterStartDate} />\n\n        <DatePicker\n          label=\"End date\"\n          value={filters.endDate}\n          onChange={handleFilterEndDate}\n          slotProps={{\n            textField: {\n              error: dateError,\n              helperText: dateError && 'End date must be later than start date',\n            },\n          }}\n        />\n      </Stack>\n    </Stack>\n  );\n\n  const renderEvents = (\n    <>\n      <Typography variant=\"subtitle2\" sx={{ px: 2.5, mb: 1 }}>\n        Events ({events.length})\n      </Typography>\n\n      <Scrollbar sx={{ height: 1 }}>\n        {orderBy(events, ['end'], ['desc']).map((event) => (\n          <ListItemButton\n            key={event.id}\n            onClick={() => onClickEvent(`${event.id}`)}\n            sx={{\n              py: 1.5,\n              borderBottom: (theme) => `dashed 1px ${theme.palette.divider}`,\n            }}\n          >\n            <Box\n              sx={{\n                top: 16,\n                left: 0,\n                width: 0,\n                height: 0,\n                position: 'absolute',\n                borderRight: '10px solid transparent',\n                borderTop: `10px solid ${event.color}`,\n              }}\n            />\n\n            <ListItemText\n              disableTypography\n              primary={\n                <Typography variant=\"subtitle2\" sx={{ fontSize: 13, mt: 0.5 }}>\n                  {event.title}\n                </Typography>\n              }\n              secondary={\n                <Typography\n                  variant=\"caption\"\n                  component=\"div\"\n                  sx={{ fontSize: 11, color: 'text.disabled' }}\n                >\n                  {event.allDay ? (\n                    fDateTime(event.start, 'dd MMM yy')\n                  ) : (\n                    <>\n                      {`${fDateTime(event.start, 'dd MMM yy p')} - ${fDateTime(\n                        event.end,\n                        'dd MMM yy p'\n                      )}`}\n                    </>\n                  )}\n                </Typography>\n              }\n              sx={{ display: 'flex', flexDirection: 'column-reverse' }}\n            />\n          </ListItemButton>\n        ))}\n      </Scrollbar>\n    </>\n  );\n\n  return (\n    <Drawer\n      anchor=\"right\"\n      open={open}\n      onClose={onClose}\n      slotProps={{\n        backdrop: { invisible: true },\n      }}\n      PaperProps={{\n        sx: { width: 320 },\n      }}\n    >\n      {renderHead}\n\n      <Divider sx={{ borderStyle: 'dashed' }} />\n\n      {renderColors}\n\n      {renderDateRange}\n\n      {renderEvents}\n    </Drawer>\n  );\n}\n","import Box from '@mui/material/Box';\nimport Chip from '@mui/material/Chip';\nimport Paper from '@mui/material/Paper';\nimport Button from '@mui/material/Button';\nimport { alpha } from '@mui/material/styles';\nimport Stack, { StackProps } from '@mui/material/Stack';\n\nimport Iconify from 'src/components/iconify';\nimport { shortDateLabel } from 'src/components/custom-date-range-picker';\n\nimport { ICalendarFilters, ICalendarFilterValue } from 'src/types/calendar';\n\n// ----------------------------------------------------------------------\n\ntype Props = StackProps & {\n  filters: ICalendarFilters;\n  onFilters: (name: string, value: ICalendarFilterValue) => void;\n  //\n  canReset: boolean;\n  onResetFilters: VoidFunction;\n  //\n  results: number;\n};\n\nexport default function CalendarFiltersResult({\n  filters,\n  onFilters,\n  //\n  canReset,\n  onResetFilters,\n  //\n  results,\n  ...other\n}: Props) {\n  const shortLabel = shortDateLabel(filters.startDate, filters.endDate);\n\n  const handleRemoveColor = (inputValue: string) => {\n    const newValue = filters.colors.filter((item) => item !== inputValue);\n    onFilters('colors', newValue);\n  };\n\n  const handleRemoveDate = () => {\n    onFilters('startDate', null);\n    onFilters('endDate', null);\n  };\n\n  return (\n    <Stack spacing={1.5} {...other}>\n      <Box sx={{ typography: 'body2' }}>\n        <strong>{results}</strong>\n        <Box component=\"span\" sx={{ color: 'text.secondary', ml: 0.25 }}>\n          results found\n        </Box>\n      </Box>\n\n      <Stack flexGrow={1} spacing={1} direction=\"row\" flexWrap=\"wrap\" alignItems=\"center\">\n        {!!filters.colors.length && (\n          <Block label=\"Colors:\">\n            {filters.colors.map((item) => (\n              <Chip\n                key={item}\n                size=\"small\"\n                label={\n                  <Box\n                    sx={{\n                      ml: -0.5,\n                      width: 18,\n                      height: 18,\n                      bgcolor: item,\n                      borderRadius: '50%',\n                      border: (theme) => `solid 1px ${alpha(theme.palette.common.white, 0.24)}`,\n                    }}\n                  />\n                }\n                onDelete={() => handleRemoveColor(item)}\n              />\n            ))}\n          </Block>\n        )}\n\n        {filters.startDate && filters.endDate && (\n          <Block label=\"Date:\">\n            <Chip size=\"small\" label={shortLabel} onDelete={handleRemoveDate} />\n          </Block>\n        )}\n\n        {canReset && (\n          <Button\n            color=\"error\"\n            onClick={onResetFilters}\n            startIcon={<Iconify icon=\"solar:trash-bin-trash-bold\" />}\n          >\n            Clear\n          </Button>\n        )}\n      </Stack>\n    </Stack>\n  );\n}\n\n// ----------------------------------------------------------------------\n\ntype BlockProps = StackProps & {\n  label: string;\n};\n\nfunction Block({ label, children, sx, ...other }: BlockProps) {\n  return (\n    <Stack\n      component={Paper}\n      variant=\"outlined\"\n      spacing={1}\n      direction=\"row\"\n      sx={{\n        p: 1,\n        borderRadius: 1,\n        overflow: 'hidden',\n        borderStyle: 'dashed',\n        ...sx,\n      }}\n      {...other}\n    >\n      <Box component=\"span\" sx={{ typography: 'subtitle2' }}>\n        {label}\n      </Box>\n\n      <Stack spacing={1} direction=\"row\" flexWrap=\"wrap\">\n        {children}\n      </Stack>\n    </Stack>\n  );\n}\n","import Calendar from '@fullcalendar/react'; // => request placed at the top\nimport listPlugin from '@fullcalendar/list';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport timelinePlugin from '@fullcalendar/timeline';\nimport { useState, useEffect, useCallback } from 'react';\nimport interactionPlugin from '@fullcalendar/interaction';\n\nimport Card from '@mui/material/Card';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport { useTheme } from '@mui/material/styles';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport { useBoolean } from 'src/hooks/use-boolean';\nimport { useResponsive } from 'src/hooks/use-responsive';\n\nimport { isAfter, isBetween } from 'src/utils/format-time';\n\nimport { CALENDAR_COLOR_OPTIONS } from 'src/_mock/_calendar';\nimport { updateEvent, useGetEvents } from 'src/api/calendar';\n\nimport Iconify from 'src/components/iconify';\nimport { useSettingsContext } from 'src/components/settings';\n\nimport { ICalendarEvent, ICalendarFilters, ICalendarFilterValue } from 'src/types/calendar';\n\nimport { StyledCalendar } from '../styles';\nimport CalendarForm from '../calendar-form';\nimport { useEvent, useCalendar } from '../hooks';\nimport CalendarToolbar from '../calendar-toolbar';\nimport CalendarFilters from '../calendar-filters';\nimport CalendarFiltersResult from '../calendar-filters-result';\n\n// ----------------------------------------------------------------------\n\nconst defaultFilters: ICalendarFilters = {\n  colors: [],\n  startDate: null,\n  endDate: null,\n};\n\n// ----------------------------------------------------------------------\n\nexport default function CalendarView() {\n  const theme = useTheme();\n\n  const settings = useSettingsContext();\n\n  const smUp = useResponsive('up', 'sm');\n\n  const openFilters = useBoolean();\n\n  const [filters, setFilters] = useState(defaultFilters);\n\n  const { events, eventsLoading } = useGetEvents();\n\n  const dateError = isAfter(filters.startDate, filters.endDate);\n\n  const {\n    calendarRef,\n    //\n    view,\n    date,\n    //\n    onDatePrev,\n    onDateNext,\n    onDateToday,\n    onDropEvent,\n    onChangeView,\n    onSelectRange,\n    onClickEvent,\n    onResizeEvent,\n    onInitialView,\n    //\n    openForm,\n    onOpenForm,\n    onCloseForm,\n    //\n    selectEventId,\n    selectedRange,\n    //\n    onClickEventInFilters,\n  } = useCalendar();\n\n  const currentEvent = useEvent(events, selectEventId, selectedRange, openForm);\n\n  useEffect(() => {\n    onInitialView();\n  }, [onInitialView]);\n\n  const handleFilters = useCallback((name: string, value: ICalendarFilterValue) => {\n    setFilters((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  }, []);\n\n  const handleResetFilters = useCallback(() => {\n    setFilters(defaultFilters);\n  }, []);\n\n  const canReset = !!filters.colors.length || (!!filters.startDate && !!filters.endDate);\n\n  const dataFiltered = applyFilter({\n    inputData: events,\n    filters,\n    dateError,\n  });\n\n  const renderResults = (\n    <CalendarFiltersResult\n      filters={filters}\n      onFilters={handleFilters}\n      //\n      canReset={canReset}\n      onResetFilters={handleResetFilters}\n      //\n      results={dataFiltered.length}\n      sx={{ mb: { xs: 3, md: 5 } }}\n    />\n  );\n\n  return (\n    <>\n      <Container maxWidth={settings.themeStretch ? false : 'xl'}>\n        <Stack\n          direction=\"row\"\n          alignItems=\"center\"\n          justifyContent=\"space-between\"\n          sx={{\n            mb: { xs: 3, md: 5 },\n          }}\n        >\n          <Typography variant=\"h4\">Calendar</Typography>\n          <Button\n            variant=\"contained\"\n            startIcon={<Iconify icon=\"mingcute:add-line\" />}\n            onClick={onOpenForm}\n          >\n            New Event\n          </Button>\n        </Stack>\n\n        {canReset && renderResults}\n\n        <Card>\n          <StyledCalendar>\n            <CalendarToolbar\n              date={date}\n              view={view}\n              loading={eventsLoading}\n              onNextDate={onDateNext}\n              onPrevDate={onDatePrev}\n              onToday={onDateToday}\n              onChangeView={onChangeView}\n              onOpenFilters={openFilters.onTrue}\n            />\n\n            <Calendar\n              weekends\n              editable\n              droppable\n              selectable\n              rerenderDelay={10}\n              allDayMaintainDuration\n              eventResizableFromStart\n              ref={calendarRef}\n              initialDate={date}\n              initialView={view}\n              dayMaxEventRows={3}\n              eventDisplay=\"block\"\n              events={dataFiltered}\n              headerToolbar={false}\n              select={onSelectRange}\n              eventClick={onClickEvent}\n              height={smUp ? 720 : 'auto'}\n              eventDrop={(arg) => {\n                onDropEvent(arg, updateEvent);\n              }}\n              eventResize={(arg) => {\n                onResizeEvent(arg, updateEvent);\n              }}\n              plugins={[\n                listPlugin,\n                dayGridPlugin,\n                timelinePlugin,\n                timeGridPlugin,\n                interactionPlugin,\n              ]}\n            />\n          </StyledCalendar>\n        </Card>\n      </Container>\n\n      <Dialog\n        fullWidth\n        maxWidth=\"xs\"\n        open={openForm}\n        onClose={onCloseForm}\n        transitionDuration={{\n          enter: theme.transitions.duration.shortest,\n          exit: theme.transitions.duration.shortest - 80,\n        }}\n      >\n        <DialogTitle sx={{ minHeight: 76 }}>\n          {openForm && <> {currentEvent?.id ? 'Edit Event' : 'Add Event'}</>}\n        </DialogTitle>\n\n        <CalendarForm\n          currentEvent={currentEvent}\n          colorOptions={CALENDAR_COLOR_OPTIONS}\n          onClose={onCloseForm}\n        />\n      </Dialog>\n\n      <CalendarFilters\n        open={openFilters.value}\n        onClose={openFilters.onFalse}\n        //\n        filters={filters}\n        onFilters={handleFilters}\n        //\n        canReset={canReset}\n        onResetFilters={handleResetFilters}\n        //\n        dateError={dateError}\n        //\n        events={events}\n        colorOptions={CALENDAR_COLOR_OPTIONS}\n        onClickEvent={onClickEventInFilters}\n      />\n    </>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction applyFilter({\n  inputData,\n  filters,\n  dateError,\n}: {\n  inputData: ICalendarEvent[];\n  filters: ICalendarFilters;\n  dateError: boolean;\n}) {\n  const { colors, startDate, endDate } = filters;\n\n  const stabilizedThis = inputData.map((el, index) => [el, index] as const);\n\n  inputData = stabilizedThis.map((el) => el[0]);\n\n  if (colors.length) {\n    inputData = inputData.filter((event) => colors.includes(event.color as string));\n  }\n\n  if (!dateError) {\n    if (startDate && endDate) {\n      inputData = inputData.filter((event) => isBetween(event.start, startDate, endDate));\n    }\n  }\n\n  return inputData;\n}\n","import FullCalendar from '@fullcalendar/react';\nimport { useRef, useState, useCallback } from 'react';\nimport { EventResizeDoneArg } from '@fullcalendar/interaction';\nimport { EventDropArg, DateSelectArg, EventClickArg } from '@fullcalendar/core';\n\nimport { useResponsive } from 'src/hooks/use-responsive';\n\nimport { fTimestamp } from 'src/utils/format-time';\n\nimport { ICalendarView, ICalendarRange, ICalendarEvent } from 'src/types/calendar';\n\n// ----------------------------------------------------------------------\n\nexport default function useCalendar() {\n  const calendarRef = useRef<FullCalendar>(null);\n\n  const calendarEl = calendarRef.current;\n\n  const smUp = useResponsive('up', 'sm');\n\n  const [date, setDate] = useState(new Date());\n\n  const [openForm, setOpenForm] = useState(false);\n\n  const [selectEventId, setSelectEventId] = useState('');\n\n  const [selectedRange, setSelectedRange] = useState<ICalendarRange>(null);\n\n  const [view, setView] = useState<ICalendarView>(smUp ? 'dayGridMonth' : 'listWeek');\n\n  const onOpenForm = useCallback(() => {\n    setOpenForm(true);\n  }, []);\n\n  const onCloseForm = useCallback(() => {\n    setOpenForm(false);\n    setSelectedRange(null);\n    setSelectEventId('');\n  }, []);\n\n  const onInitialView = useCallback(() => {\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n\n      const newView = smUp ? 'dayGridMonth' : 'listWeek';\n      calendarApi.changeView(newView);\n      setView(newView);\n    }\n  }, [calendarEl, smUp]);\n\n  const onChangeView = useCallback(\n    (newView: ICalendarView) => {\n      if (calendarEl) {\n        const calendarApi = calendarEl.getApi();\n\n        calendarApi.changeView(newView);\n        setView(newView);\n      }\n    },\n    [calendarEl]\n  );\n\n  const onDateToday = useCallback(() => {\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n\n      calendarApi.today();\n      setDate(calendarApi.getDate());\n    }\n  }, [calendarEl]);\n\n  const onDatePrev = useCallback(() => {\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n\n      calendarApi.prev();\n      setDate(calendarApi.getDate());\n    }\n  }, [calendarEl]);\n\n  const onDateNext = useCallback(() => {\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n\n      calendarApi.next();\n      setDate(calendarApi.getDate());\n    }\n  }, [calendarEl]);\n\n  const onSelectRange = useCallback(\n    (arg: DateSelectArg) => {\n      if (calendarEl) {\n        const calendarApi = calendarEl.getApi();\n\n        calendarApi.unselect();\n      }\n      onOpenForm();\n      setSelectedRange({\n        start: fTimestamp(arg.start),\n        end: fTimestamp(arg.end),\n      });\n    },\n    [calendarEl, onOpenForm]\n  );\n\n  const onClickEvent = useCallback(\n    (arg: EventClickArg) => {\n      const { event } = arg;\n\n      onOpenForm();\n      setSelectEventId(event.id);\n    },\n    [onOpenForm]\n  );\n\n  const onResizeEvent = useCallback(\n    (arg: EventResizeDoneArg, updateEvent: (eventData: Partial<ICalendarEvent>) => void) => {\n      const { event } = arg;\n\n      updateEvent({\n        id: event.id,\n        allDay: event.allDay,\n        start: fTimestamp(event.start),\n        end: fTimestamp(event.end),\n      });\n    },\n    []\n  );\n\n  const onDropEvent = useCallback(\n    (arg: EventDropArg, updateEvent: (eventData: Partial<ICalendarEvent>) => void) => {\n      const { event } = arg;\n\n      updateEvent({\n        id: event.id,\n        allDay: event.allDay,\n        start: fTimestamp(event.start),\n        end: fTimestamp(event.end),\n      });\n    },\n    []\n  );\n\n  const onClickEventInFilters = useCallback(\n    (eventId: string) => {\n      if (eventId) {\n        onOpenForm();\n        setSelectEventId(eventId);\n      }\n    },\n    [onOpenForm]\n  );\n\n  return {\n    calendarRef,\n    //\n    view,\n    date,\n    //\n    onDatePrev,\n    onDateNext,\n    onDateToday,\n    onDropEvent,\n    onClickEvent,\n    onChangeView,\n    onSelectRange,\n    onResizeEvent,\n    onInitialView,\n    //\n    openForm,\n    onOpenForm,\n    onCloseForm,\n    //\n    selectEventId,\n    selectedRange,\n    //\n    onClickEventInFilters,\n  };\n}\n","import { useMemo } from 'react';\nimport merge from 'lodash/merge';\n\nimport { CALENDAR_COLOR_OPTIONS } from 'src/_mock/_calendar';\n\nimport { ICalendarRange, ICalendarEvent } from 'src/types/calendar';\n\n// ----------------------------------------------------------------------\n\nexport default function useEvent(\n  events: ICalendarEvent[],\n  selectEventId: string,\n  selectedRange: ICalendarRange,\n  openForm: boolean\n) {\n  const currentEvent = events.find((event) => event.id === selectEventId);\n\n  const defaultValues: ICalendarEvent = useMemo(\n    () => ({\n      id: '',\n      title: '',\n      description: '',\n      color: CALENDAR_COLOR_OPTIONS[1],\n      allDay: false,\n      start: selectedRange ? selectedRange.start : new Date().getTime(),\n      end: selectedRange ? selectedRange.end : new Date().getTime(),\n    }),\n    [selectedRange]\n  );\n\n  if (!openForm) {\n    return undefined;\n  }\n\n  if (currentEvent || selectedRange) {\n    return merge({}, defaultValues, currentEvent);\n  }\n\n  return defaultValues;\n}\n","import { Helmet } from 'react-helmet-async';\n\nimport { CalendarView } from 'src/sections/calendar/view';\n\n// ----------------------------------------------------------------------\n\nexport default function CalendarPage() {\n  return (\n    <>\n      <Helmet>\n        <title> Game: Calendar</title>\n      </Helmet>\n\n      <CalendarView />\n    </>\n  );\n}\n","/* eslint-disable */\n// ----------------------------------------------------------------------\n\nexport default function uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0,\n      v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n"],"names":["forwardRef","_ref","ref","colors","selected","onSelectColor","limit","sx","other","singleSelect","handleSelect","useCallback","color","newSelected","includes","filter","value","_jsx","Stack","direction","display","flexWrap","width","justifyContent","children","map","hasSelected","ButtonBase","height","borderRadius","onClick","alignItems","bgcolor","border","theme","concat","alpha","palette","grey","transform","boxShadow","outline","transition","transitions","create","duration","shortest","Iconify","icon","getContrastText","ColorPreview","renderColors","slice","remainingColor","length","_jsxs","component","index","Box","ml","background","paper","common","black","typography","shortDateLabel","startDate","endDate","getCurrentYear","Date","getFullYear","startDateYear","getYear","endDateYear","currentYear","sameDay","isSameDay","sameMonth","isSameMonth","fDate","CustomDateRangePicker","title","variant","onChangeStartDate","onChangeEndDate","open","onClose","error","mdUp","useResponsive","isCalendarView","Dialog","fullWidth","maxWidth","PaperProps","DialogTitle","pb","DialogContent","overflow","spacing","pt","_Fragment","Paper","borderColor","borderStyle","DateCalendar","onChange","DatePicker","label","FormHelperText","px","DialogActions","Button","disabled","useDateRangePicker","start","end","setOpen","useState","setEndDate","setStartDate","getTime","onOpen","newValue","onReset","shortLabel","URL","endpoints","calendar","options","revalidateIfStale","revalidateOnFocus","revalidateOnReconnect","async","updateEvent","eventData","mutate","currentData","events","event","id","StyledCalendar","styled","marginLeft","marginBottom","main","default","neutral","action","hover","text","primary","divider","subtitle2","padding","h6","backgroundColor","secondary","white","top","left","content","opacity","position","fontSize","lineHeight","whiteSpace","textOverflow","fontWeight","fontWeightBold","customShadows","dropdown","shape","margin","body2","marginTop","marginRight","caption","textDecoration","fontWeightMedium","CalendarForm","currentEvent","colorOptions","enqueueSnackbar","useSnackbar","EventSchema","Yup","max","required","description","allDay","methods","useForm","resolver","yupResolver","defaultValues","reset","watch","control","handleSubmit","formState","isSubmitting","values","dateError","isAfter","onSubmit","uuidv4","data","createEvent","console","onDelete","eventId","deleteEvent","FormProvider","RHFTextField","name","multiline","rows","RHFSwitch","Controller","render","_ref2","field","MobileDateTimePicker","fTimestamp","format","slotProps","textField","_ref3","helperText","_ref4","ColorPicker","Tooltip","IconButton","flexGrow","LoadingButton","type","loading","VIEW_OPTIONS","CalendarToolbar","date","view","onToday","onNextDate","onPrevDate","onChangeView","onOpenFilters","smUp","popover","usePopover","selectedItem","item","p","pr","size","startIcon","endIcon","Typography","LinearProgress","bottom","CustomPopover","arrow","viewOption","MenuItem","CalendarFilters","filters","onFilters","canReset","onResetFilters","onClickEvent","handleFilterColors","handleFilterStartDate","handleFilterEndDate","renderHead","py","pl","Badge","invisible","my","renderDateRange","mb","renderEvents","Scrollbar","orderBy","ListItemButton","borderBottom","borderRight","borderTop","ListItemText","disableTypography","mt","fDateTime","flexDirection","Drawer","anchor","backdrop","Divider","CalendarFiltersResult","results","Block","Chip","inputValue","handleRemoveColor","handleRemoveDate","defaultFilters","CalendarView","useTheme","settings","useSettingsContext","openFilters","useBoolean","setFilters","eventsLoading","isLoading","isValidating","useSWR","fetcher","useMemo","textColor","eventsError","eventsValidating","eventsEmpty","useGetEvents","calendarRef","onDatePrev","onDateNext","onDateToday","onDropEvent","onSelectRange","onResizeEvent","onInitialView","openForm","onOpenForm","onCloseForm","selectEventId","selectedRange","onClickEventInFilters","useRef","calendarEl","current","setDate","setOpenForm","setSelectEventId","setSelectedRange","setView","calendarApi","getApi","newView","changeView","today","getDate","prev","next","arg","unselect","useCalendar","find","CALENDAR_COLOR_OPTIONS","merge","useEvent","useEffect","handleFilters","prevState","handleResetFilters","dataFiltered","inputData","stabilizedThis","el","isBetween","applyFilter","renderResults","xs","md","Container","themeStretch","Card","onTrue","Calendar","weekends","editable","droppable","selectable","rerenderDelay","allDayMaintainDuration","eventResizableFromStart","initialDate","initialView","dayMaxEventRows","eventDisplay","headerToolbar","select","eventClick","eventDrop","eventResize","plugins","listPlugin","dayGridPlugin","timelinePlugin","timeGridPlugin","interactionPlugin","transitionDuration","enter","exit","minHeight","onFalse","CalendarPage","Helmet","replace","c","r","Math","random","toString"],"sourceRoot":""}