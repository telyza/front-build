{"version":3,"file":"static/js/8075.eb7a5052.chunk.js","mappings":"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","sources":["components/empty-content/empty-content.tsx","components/markdown/styles.ts","components/markdown/markdown.tsx","components/text-max-line/use-typography.ts","components/text-max-line/text-max-line.tsx","sections/mail/mail-nav-item.tsx","sections/mail/mail-skeleton.tsx","sections/mail/mail-nav.tsx","sections/mail/mail-item.tsx","sections/mail/mail-list.tsx","sections/mail/mail-header.tsx","sections/mail/mail-compose.tsx","sections/mail/mail-details.tsx","sections/mail/view/mail-view.tsx","api/mail.ts","pages/dashboard/mail.tsx"],"sourcesContent":["import Box from '@mui/material/Box';\nimport { alpha } from '@mui/material/styles';\nimport Typography from '@mui/material/Typography';\nimport Stack, { StackProps } from '@mui/material/Stack';\n\n// ----------------------------------------------------------------------\n\ntype EmptyContentProps = StackProps & {\n  title?: string;\n  imgUrl?: string;\n  filled?: boolean;\n  description?: string;\n  action?: React.ReactNode;\n};\n\nexport default function EmptyContent({\n  title,\n  imgUrl,\n  action,\n  filled,\n  description,\n  sx,\n  ...other\n}: EmptyContentProps) {\n  return (\n    <Stack\n      flexGrow={1}\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      sx={{\n        px: 3,\n        height: 1,\n        ...(filled && {\n          borderRadius: 2,\n          bgcolor: (theme) => alpha(theme.palette.grey[500], 0.04),\n          border: (theme) => `dashed 1px ${alpha(theme.palette.grey[500], 0.08)}`,\n        }),\n        ...sx,\n      }}\n      {...other}\n    >\n      <Box\n        component=\"img\"\n        alt=\"empty content\"\n        src={imgUrl || '/static/assets/icons/empty/ic_content.svg'}\n        sx={{ width: 1, maxWidth: 160 }}\n      />\n\n      {title && (\n        <Typography\n          variant=\"h6\"\n          component=\"span\"\n          sx={{ mt: 1, color: 'text.disabled', textAlign: 'center' }}\n        >\n          {title}\n        </Typography>\n      )}\n\n      {description && (\n        <Typography variant=\"caption\" sx={{ mt: 1, color: 'text.disabled', textAlign: 'center' }}>\n          {description}\n        </Typography>\n      )}\n\n      {action && action}\n    </Stack>\n  );\n}\n","import { alpha, styled } from '@mui/material/styles';\n\n// ----------------------------------------------------------------------\n\nconst StyledMarkdown = styled('div')(({ theme }) => {\n  const lightMode = theme.palette.mode === 'light';\n\n  return {\n    // Text\n    h1: { margin: 0, ...theme.typography.h1 },\n    h2: { margin: 0, ...theme.typography.h2 },\n    h3: { margin: 0, ...theme.typography.h3 },\n    h4: { margin: 0, ...theme.typography.h4 },\n    h5: { margin: 0, ...theme.typography.h5 },\n    h6: { margin: 0, ...theme.typography.h6 },\n    p: { margin: 0, ...theme.typography.body1 },\n\n    br: {\n      display: 'grid',\n      content: '\"\"',\n      marginTop: '0.75em',\n    },\n\n    // Divider\n    hr: {\n      margin: 0,\n      flexShrink: 0,\n      borderWidth: 0,\n      msFlexNegative: 0,\n      WebkitFlexShrink: 0,\n      borderStyle: 'solid',\n      borderBottomWidth: 'thin',\n      borderColor: theme.palette.divider,\n    },\n\n    // List\n    '& ul, & ol': {\n      margin: 0,\n      '& li': {\n        lineHeight: 2,\n      },\n    },\n\n    // Blockquote\n    '& blockquote': {\n      lineHeight: 1.5,\n      fontSize: '1.5em',\n      margin: '40px auto',\n      position: 'relative',\n      fontFamily: 'Georgia, serif',\n      padding: theme.spacing(3, 3, 3, 8),\n      color: theme.palette.text.secondary,\n      borderRadius: theme.shape.borderRadius * 2,\n      backgroundColor: theme.palette.background.neutral,\n      [theme.breakpoints.up('md')]: {\n        width: '80%',\n      },\n      '& p, & span': {\n        marginBottom: 0,\n        fontSize: 'inherit',\n        fontFamily: 'inherit',\n      },\n      '&:before': {\n        left: 16,\n        top: -8,\n        display: 'block',\n        fontSize: '3em',\n        content: '\"\\\\201C\"',\n        position: 'absolute',\n        color: theme.palette.text.disabled,\n      },\n    },\n\n    // Code Block\n    '& pre, & pre > code': {\n      fontSize: 16,\n      overflowX: 'auto',\n      whiteSpace: 'pre',\n      padding: theme.spacing(2),\n      color: theme.palette.common.white,\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: lightMode ? theme.palette.grey[900] : alpha(theme.palette.grey[500], 0.16),\n    },\n    '& code': {\n      fontSize: 14,\n      borderRadius: 4,\n      whiteSpace: 'pre',\n      padding: theme.spacing(0.2, 0.5),\n      color: theme.palette.warning[lightMode ? 'darker' : 'lighter'],\n      backgroundColor: theme.palette.warning[lightMode ? 'lighter' : 'darker'],\n      '&.hljs': { padding: 0, backgroundColor: 'transparent' },\n    },\n\n    // Table\n    table: {\n      width: '100%',\n      borderCollapse: 'collapse',\n      border: `1px solid ${theme.palette.divider}`,\n      'th, td': {\n        padding: theme.spacing(1),\n        border: `1px solid ${theme.palette.divider}`,\n      },\n      'tbody tr:nth-of-type(odd)': {\n        backgroundColor: theme.palette.background.neutral,\n      },\n    },\n\n    // Checkbox\n    input: {\n      '&[type=checkbox]': {\n        position: 'relative',\n        cursor: 'pointer',\n        '&:before': {\n          content: '\"\"',\n          top: -2,\n          left: -2,\n          width: 17,\n          height: 17,\n          borderRadius: 3,\n          position: 'absolute',\n          backgroundColor: theme.palette.grey[lightMode ? 300 : 700],\n        },\n        '&:checked': {\n          '&:before': {\n            backgroundColor: theme.palette.primary.main,\n          },\n          '&:after': {\n            content: '\"\"',\n            top: 1,\n            left: 5,\n            width: 4,\n            height: 9,\n            position: 'absolute',\n            transform: 'rotate(45deg)',\n            msTransform: 'rotate(45deg)',\n            WebkitTransform: 'rotate(45deg)',\n            border: `solid ${theme.palette.common.white}`,\n            borderWidth: '0 2px 2px 0',\n          },\n        },\n      },\n    },\n  };\n});\n\nexport default StyledMarkdown;\n","/* eslint-disable perfectionist/sort-imports */\nimport 'src/utils/highlight';\n\n// markdown plugins\nimport rehypeRaw from 'rehype-raw';\nimport remarkGfm from 'remark-gfm';\nimport ReactMarkdown from 'react-markdown';\nimport rehypeHighlight from 'rehype-highlight';\n\nimport Link from '@mui/material/Link';\n\nimport { RouterLink } from 'src/routes/components';\n\nimport Image from '../image';\nimport StyledMarkdown from './styles';\nimport { MarkdownProps } from './types';\n\n// ----------------------------------------------------------------------\n\nexport default function Markdown({ sx, ...other }: MarkdownProps) {\n  return (\n    <StyledMarkdown sx={sx}>\n      <ReactMarkdown\n        rehypePlugins={[rehypeRaw, rehypeHighlight, [remarkGfm, { singleTilde: false }]]}\n        components={components}\n        {...other}\n      />\n    </StyledMarkdown>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nconst components = {\n  img: ({ ...props }) => <Image alt={props.alt} ratio=\"16/9\" sx={{ borderRadius: 2 }} {...props} />,\n  a: ({ ...props }) => {\n    const isHttp = props.href.includes('http');\n\n    return isHttp ? (\n      <Link target=\"_blank\" rel=\"noopener\" {...props} />\n    ) : (\n      <Link component={RouterLink} href={props.href} {...props}>\n        {props.children}\n      </Link>\n    );\n  },\n};\n","import { useTheme } from '@mui/material/styles';\nimport { Variant } from '@mui/material/styles/createTypography';\n\nimport { useWidth } from 'src/hooks/use-responsive';\n\n// ----------------------------------------------------------------------\n\nfunction remToPx(value: string) {\n  return Math.round(parseFloat(value) * 16);\n}\n\nexport default function useTypography(variant: Variant) {\n  const theme = useTheme();\n\n  const breakpoints = useWidth();\n\n  const key = theme.breakpoints.up(breakpoints === 'xl' ? 'lg' : breakpoints);\n\n  const hasResponsive =\n    variant === 'h1' ||\n    variant === 'h2' ||\n    variant === 'h3' ||\n    variant === 'h4' ||\n    variant === 'h5' ||\n    variant === 'h6';\n\n  const getFont: any =\n    hasResponsive && theme.typography[variant][key]\n      ? theme.typography[variant][key]\n      : theme.typography[variant];\n\n  const fontSize = remToPx(getFont.fontSize);\n\n  const lineHeight = Number(theme.typography[variant].lineHeight) * fontSize;\n\n  const { fontWeight, letterSpacing } = theme.typography[variant];\n\n  return { fontSize, lineHeight, fontWeight, letterSpacing };\n}\n","import { forwardRef } from 'react';\n\nimport Link from '@mui/material/Link';\nimport Typography from '@mui/material/Typography';\n\nimport { TextMaxLineProps } from './types';\nimport useTypography from './use-typography';\n\n// ----------------------------------------------------------------------\n\nconst TextMaxLine = forwardRef<HTMLAnchorElement, TextMaxLineProps>(\n  ({ asLink, variant = 'body1', line = 2, persistent = false, children, sx, ...other }, ref) => {\n    const { lineHeight } = useTypography(variant);\n\n    const styles = {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      display: '-webkit-box',\n      WebkitLineClamp: line,\n      WebkitBoxOrient: 'vertical',\n      ...(persistent && {\n        height: lineHeight * line,\n      }),\n      ...sx,\n    } as const;\n\n    if (asLink) {\n      return (\n        <Link color=\"inherit\" ref={ref} variant={variant} sx={{ ...styles }} {...other}>\n          {children}\n        </Link>\n      );\n    }\n\n    return (\n      <Typography ref={ref} variant={variant} sx={{ ...styles }} {...other}>\n        {children}\n      </Typography>\n    );\n  }\n);\n\nexport default TextMaxLine;\n","import Typography from '@mui/material/Typography';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemButton from '@mui/material/ListItemButton';\n\nimport Iconify, { IconifyProps } from 'src/components/iconify';\n\nimport { IMailLabel } from 'src/types/mail';\n\n// ----------------------------------------------------------------------\n\nconst LABEL_ICONS = {\n  all: 'fluent:mail-24-filled',\n  inbox: 'solar:inbox-bold',\n  trash: 'solar:trash-bin-trash-bold',\n  drafts: 'solar:file-text-bold',\n  spam: 'solar:danger-bold',\n  sent: 'iconamoon:send-fill',\n  starred: 'eva:star-fill',\n  important: 'material-symbols:label-important-rounded',\n  social: 'solar:tag-horizontal-bold-duotone',\n  promotions: 'solar:tag-horizontal-bold-duotone',\n  forums: 'solar:tag-horizontal-bold-duotone',\n};\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  selected: boolean;\n  label: IMailLabel;\n  onClickNavItem: VoidFunction;\n};\n\nexport default function MailNavItem({ selected, label, onClickNavItem, ...other }: Props) {\n  const { unreadCount, color, name } = label;\n\n  const labelIcon = (LABEL_ICONS as Record<string, IconifyProps>)[label.id];\n\n  return (\n    <ListItemButton\n      disableRipple\n      onClick={onClickNavItem}\n      sx={{\n        px: 0,\n        height: 40,\n        color: 'text.secondary',\n        ...(selected && {\n          color: 'text.primary',\n        }),\n        '&:hover': {\n          bgcolor: 'transparent',\n        },\n      }}\n      {...other}\n    >\n      <Iconify\n        icon={labelIcon}\n        width={22}\n        sx={{\n          mr: 2,\n          color,\n        }}\n      />\n\n      <ListItemText\n        primary={name}\n        primaryTypographyProps={{\n          textTransform: 'capitalize',\n          typography: selected ? 'subtitle2' : 'body2',\n        }}\n      />\n\n      {!!unreadCount && <Typography variant=\"caption\">{unreadCount}</Typography>}\n    </ListItemButton>\n  );\n}\n","import { alpha } from '@mui/material/styles';\nimport Skeleton from '@mui/material/Skeleton';\nimport Stack, { StackProps } from '@mui/material/Stack';\n\n// ----------------------------------------------------------------------\n\nexport function MailNavItemSkeleton({ sx, ...other }: StackProps) {\n  return (\n    <Stack\n      spacing={2}\n      direction=\"row\"\n      alignItems=\"center\"\n      sx={{\n        py: 1,\n        color: (theme) => alpha(theme.palette.grey[500], 0.24),\n        ...sx,\n      }}\n      {...other}\n    >\n      <Skeleton variant=\"circular\" sx={{ width: 32, height: 32, bgcolor: 'currentColor' }} />\n\n      <Skeleton sx={{ width: 0.5, height: 10, bgcolor: 'currentColor' }} />\n    </Stack>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nexport function MailItemSkeleton({ sx, ...other }: StackProps) {\n  return (\n    <Stack\n      spacing={2}\n      direction=\"row\"\n      alignItems=\"center\"\n      sx={{\n        py: 1,\n        ...sx,\n      }}\n      {...other}\n    >\n      <Skeleton variant=\"circular\" sx={{ width: 40, height: 40 }} />\n\n      <Stack spacing={1} flexGrow={1}>\n        <Skeleton sx={{ width: 0.75, height: 10 }} />\n        <Skeleton sx={{ width: 0.5, height: 10 }} />\n      </Stack>\n    </Stack>\n  );\n}\n","import Stack from '@mui/material/Stack';\nimport Drawer from '@mui/material/Drawer';\nimport Button from '@mui/material/Button';\n\nimport { useResponsive } from 'src/hooks/use-responsive';\n\nimport Iconify from 'src/components/iconify';\nimport Scrollbar from 'src/components/scrollbar';\n\nimport { IMailLabel } from 'src/types/mail';\n\nimport MailNavItem from './mail-nav-item';\nimport { MailNavItemSkeleton } from './mail-skeleton';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  loading: boolean;\n  openNav: boolean;\n  onCloseNav: VoidFunction;\n  //\n  labels: IMailLabel[];\n  selectedLabelId: string;\n  handleClickLabel: (labelId: string) => void;\n  //\n  onToggleCompose: VoidFunction;\n};\n\nexport default function MailNav({\n  loading,\n  openNav,\n  onCloseNav,\n  //\n  labels,\n  selectedLabelId,\n  handleClickLabel,\n  //\n  onToggleCompose,\n}: Props) {\n  const mdUp = useResponsive('up', 'md');\n\n  const renderSkeleton = (\n    <>\n      {[...Array(8)].map((_, index) => (\n        <MailNavItemSkeleton key={index} />\n      ))}\n    </>\n  );\n\n  const renderList = (\n    <>\n      {labels.map((label) => (\n        <MailNavItem\n          key={label.id}\n          label={label}\n          selected={selectedLabelId === label.id}\n          onClickNavItem={() => {\n            handleClickLabel(label.id);\n          }}\n        />\n      ))}\n    </>\n  );\n\n  const renderContent = (\n    <>\n      <Stack\n        sx={{\n          p: (theme) => ({\n            xs: theme.spacing(2.5, 2.5, 2, 2.5),\n            md: theme.spacing(2, 1.5),\n          }),\n        }}\n      >\n        <Button\n          fullWidth\n          color=\"inherit\"\n          variant=\"contained\"\n          startIcon={<Iconify icon=\"solar:pen-bold\" />}\n          onClick={onToggleCompose}\n        >\n          Compose\n        </Button>\n      </Stack>\n\n      <Scrollbar>\n        <Stack\n          sx={{\n            px: { xs: 3.5, md: 2.5 },\n          }}\n        >\n          {loading && renderSkeleton}\n\n          {!!labels.length && renderList}\n        </Stack>\n      </Scrollbar>\n    </>\n  );\n\n  return mdUp ? (\n    <Stack\n      sx={{\n        width: 200,\n        flexShrink: 0,\n      }}\n    >\n      {renderContent}\n    </Stack>\n  ) : (\n    <Drawer\n      open={openNav}\n      onClose={onCloseNav}\n      slotProps={{\n        backdrop: { invisible: true },\n      }}\n      PaperProps={{\n        sx: {\n          width: 260,\n        },\n      }}\n    >\n      {renderContent}\n    </Drawer>\n  );\n}\n","import { formatDistanceToNowStrict } from 'date-fns';\n\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Avatar from '@mui/material/Avatar';\nimport Typography from '@mui/material/Typography';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemButton, { ListItemButtonProps } from '@mui/material/ListItemButton';\n\nimport { IMail } from 'src/types/mail';\n\n// ----------------------------------------------------------------------\n\ntype Props = ListItemButtonProps & {\n  mail: IMail;\n  selected: boolean;\n};\n\nexport default function MailItem({ mail, selected, sx, ...other }: Props) {\n  return (\n    <ListItemButton\n      sx={{\n        p: 1,\n        mb: 0.5,\n        borderRadius: 1,\n        ...(selected && {\n          bgcolor: 'action.selected',\n        }),\n        ...sx,\n      }}\n      {...other}\n    >\n      <Avatar\n        alt={mail.from.name}\n        src={mail.from.avatarUrl ? `${mail.from.avatarUrl}` : ''}\n        sx={{ mr: 2 }}\n      >\n        {mail.from.name.charAt(0).toUpperCase()}\n      </Avatar>\n      <>\n        <ListItemText\n          primary={mail.from.name}\n          primaryTypographyProps={{\n            noWrap: true,\n            variant: 'subtitle2',\n          }}\n          secondary={mail.message}\n          secondaryTypographyProps={{\n            noWrap: true,\n            component: 'span',\n            variant: mail.isUnread ? 'subtitle2' : 'body2',\n            color: mail.isUnread ? 'text.primary' : 'text.secondary',\n          }}\n        />\n\n        <Stack alignItems=\"flex-end\" sx={{ ml: 2, height: 44 }}>\n          <Typography\n            noWrap\n            variant=\"body2\"\n            component=\"span\"\n            sx={{\n              mb: 1.5,\n              fontSize: 12,\n              color: 'text.disabled',\n            }}\n          >\n            {formatDistanceToNowStrict(new Date(mail.createdAt), {\n              addSuffix: false,\n            })}\n          </Typography>\n\n          {!!mail.isUnread && (\n            <Box\n              sx={{\n                bgcolor: 'info.main',\n                width: 8,\n                height: 8,\n                borderRadius: '50%',\n              }}\n            />\n          )}\n        </Stack>\n      </>\n    </ListItemButton>\n  );\n}\n","import Stack from '@mui/material/Stack';\nimport Drawer from '@mui/material/Drawer';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport InputAdornment from '@mui/material/InputAdornment';\n\nimport { useResponsive } from 'src/hooks/use-responsive';\n\nimport Iconify from 'src/components/iconify';\nimport Scrollbar from 'src/components/scrollbar';\n\nimport { IMails } from 'src/types/mail';\n\nimport MailItem from './mail-item';\nimport { MailItemSkeleton } from './mail-skeleton';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  loading: boolean;\n  mails: IMails;\n  //\n  openMail: boolean;\n  onCloseMail: VoidFunction;\n  onClickMail: (id: string) => void;\n  //\n  selectedLabelId: string;\n  selectedMailId: string;\n};\n\nexport default function MailList({\n  loading,\n  mails,\n  //\n  openMail,\n  onCloseMail,\n  onClickMail,\n  //\n  selectedLabelId,\n  selectedMailId,\n}: Props) {\n  const mdUp = useResponsive('up', 'md');\n\n  const renderSkeleton = (\n    <>\n      {[...Array(8)].map((_, index) => (\n        <MailItemSkeleton key={index} />\n      ))}\n    </>\n  );\n\n  const renderList = (\n    <>\n      {mails.allIds.map((mailId) => (\n        <MailItem\n          key={mailId}\n          mail={mails.byId[mailId]}\n          selected={selectedMailId === mailId}\n          onClick={() => {\n            onClickMail(mailId);\n          }}\n        />\n      ))}\n    </>\n  );\n\n  const renderContent = (\n    <>\n      <Stack sx={{ p: 2 }}>\n        {mdUp ? (\n          <TextField\n            placeholder=\"Search...\"\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <Iconify icon=\"eva:search-fill\" sx={{ color: 'text.disabled' }} />\n                </InputAdornment>\n              ),\n            }}\n          />\n        ) : (\n          <Typography variant=\"h6\" sx={{ textTransform: 'capitalize' }}>\n            {selectedLabelId}\n          </Typography>\n        )}\n      </Stack>\n\n      <Scrollbar sx={{ px: 2 }}>\n        {loading && renderSkeleton}\n\n        {!!mails.allIds.length && renderList}\n      </Scrollbar>\n    </>\n  );\n\n  return mdUp ? (\n    <Stack\n      sx={{\n        width: 320,\n        flexShrink: 0,\n        borderRadius: 1.5,\n        bgcolor: 'background.default',\n      }}\n    >\n      {renderContent}\n    </Stack>\n  ) : (\n    <Drawer\n      open={openMail}\n      onClose={onCloseMail}\n      slotProps={{\n        backdrop: { invisible: true },\n      }}\n      PaperProps={{\n        sx: {\n          width: 320,\n        },\n      }}\n    >\n      {renderContent}\n    </Drawer>\n  );\n}\n","import TextField from '@mui/material/TextField';\nimport IconButton from '@mui/material/IconButton';\nimport Stack, { StackProps } from '@mui/material/Stack';\nimport InputAdornment from '@mui/material/InputAdornment';\n\nimport Iconify from 'src/components/iconify';\n\n// ----------------------------------------------------------------------\n\ntype Props = StackProps & {\n  onOpenNav: VoidFunction;\n  onOpenMail: VoidFunction | null;\n};\n\nexport default function MailHeader({ onOpenNav, onOpenMail, ...other }: Props) {\n  return (\n    <Stack spacing={2} direction=\"row\" alignItems=\"center\" sx={{ py: 1 }} {...other}>\n      <Stack direction=\"row\" alignItems=\"center\">\n        <IconButton onClick={onOpenNav}>\n          <Iconify icon=\"fluent:mail-24-filled\" />\n        </IconButton>\n\n        {onOpenMail && (\n          <IconButton onClick={onOpenMail}>\n            <Iconify icon=\"solar:chat-round-dots-bold\" />\n          </IconButton>\n        )}\n      </Stack>\n\n      <TextField\n        fullWidth\n        size=\"small\"\n        placeholder=\"Search...\"\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <Iconify icon=\"eva:search-fill\" sx={{ color: 'text.disabled' }} />\n            </InputAdornment>\n          ),\n        }}\n      />\n    </Stack>\n  );\n}\n","import { useState, useCallback } from 'react';\n\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport Portal from '@mui/material/Portal';\nimport { alpha } from '@mui/material/styles';\nimport Backdrop from '@mui/material/Backdrop';\nimport InputBase from '@mui/material/InputBase';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\n\nimport { useBoolean } from 'src/hooks/use-boolean';\nimport { useResponsive } from 'src/hooks/use-responsive';\n\nimport Editor from 'src/components/editor';\nimport Iconify from 'src/components/iconify';\n\n// ----------------------------------------------------------------------\n\nconst ZINDEX = 1998;\n\nconst POSITION = 24;\n\ntype Props = {\n  onCloseCompose: VoidFunction;\n};\n\nexport default function MailCompose({ onCloseCompose }: Props) {\n  const smUp = useResponsive('up', 'sm');\n\n  const [message, setMessage] = useState('');\n\n  const fullScreen = useBoolean();\n\n  const handleChangeMessage = useCallback((value: string) => {\n    setMessage(value);\n  }, []);\n\n  return (\n    <Portal>\n      {(fullScreen.value || !smUp) && <Backdrop open sx={{ zIndex: ZINDEX }} />}\n\n      <Paper\n        sx={{\n          right: 0,\n          bottom: 0,\n          borderRadius: 2,\n          display: 'flex',\n          position: 'fixed',\n          zIndex: ZINDEX + 1,\n          m: `${POSITION}px`,\n          overflow: 'hidden',\n          flexDirection: 'column',\n          boxShadow: (theme) => theme.customShadows.dropdown,\n          ...(fullScreen.value && {\n            m: 0,\n            right: POSITION / 2,\n            bottom: POSITION / 2,\n            width: `calc(100% - ${POSITION}px)`,\n            height: `calc(100% - ${POSITION}px)`,\n          }),\n        }}\n      >\n        <Stack\n          direction=\"row\"\n          alignItems=\"center\"\n          sx={{\n            bgcolor: 'background.neutral',\n            p: (theme) => theme.spacing(1.5, 1, 1.5, 2),\n          }}\n        >\n          <Typography variant=\"h6\" sx={{ flexGrow: 1 }}>\n            New Message\n          </Typography>\n\n          <IconButton onClick={fullScreen.onToggle}>\n            <Iconify icon={fullScreen ? 'eva:collapse-fill' : 'eva:expand-fill'} />\n          </IconButton>\n\n          <IconButton onClick={onCloseCompose}>\n            <Iconify icon=\"mingcute:close-line\" />\n          </IconButton>\n        </Stack>\n\n        <InputBase\n          placeholder=\"To\"\n          endAdornment={\n            <Stack direction=\"row\" spacing={0.5} sx={{ typography: 'subtitle2' }}>\n              <Box\n                sx={{\n                  cursor: 'pointer',\n                  '&:hover': { textDecoration: 'underline' },\n                }}\n              >\n                Cc\n              </Box>\n              <Box\n                sx={{\n                  cursor: 'pointer',\n                  '&:hover': { textDecoration: 'underline' },\n                }}\n              >\n                Bcc\n              </Box>\n            </Stack>\n          }\n          sx={{\n            px: 2,\n            height: 48,\n            borderBottom: (theme) => `solid 1px ${alpha(theme.palette.grey[500], 0.08)}`,\n          }}\n        />\n\n        <InputBase\n          placeholder=\"Subject\"\n          sx={{\n            px: 2,\n            height: 48,\n            borderBottom: (theme) => `solid 1px ${alpha(theme.palette.grey[500], 0.08)}`,\n          }}\n        />\n\n        <Stack spacing={2} flexGrow={1} sx={{ p: 2 }}>\n          <Editor\n            simple\n            id=\"compose-mail\"\n            value={message}\n            onChange={handleChangeMessage}\n            placeholder=\"Type a message\"\n            sx={{\n              '& .ql-editor': {},\n              ...(fullScreen.value && {\n                height: 1,\n                '& .quill': {\n                  height: 1,\n                },\n                '& .ql-editor': {\n                  maxHeight: 'unset',\n                },\n              }),\n            }}\n          />\n\n          <Stack direction=\"row\" alignItems=\"center\">\n            <Stack direction=\"row\" alignItems=\"center\" flexGrow={1}>\n              <IconButton>\n                <Iconify icon=\"solar:gallery-add-bold\" />\n              </IconButton>\n\n              <IconButton>\n                <Iconify icon=\"eva:attach-2-fill\" />\n              </IconButton>\n            </Stack>\n\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              endIcon={<Iconify icon=\"iconamoon:send-fill\" />}\n            >\n              Send\n            </Button>\n          </Stack>\n        </Stack>\n      </Paper>\n    </Portal>\n  );\n}\n","import Box from '@mui/material/Box';\nimport Link from '@mui/material/Link';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport Avatar from '@mui/material/Avatar';\nimport Divider from '@mui/material/Divider';\nimport Tooltip from '@mui/material/Tooltip';\nimport Collapse from '@mui/material/Collapse';\nimport Checkbox from '@mui/material/Checkbox';\nimport IconButton from '@mui/material/IconButton';\nimport ButtonBase from '@mui/material/ButtonBase';\nimport Typography from '@mui/material/Typography';\nimport ListItemText from '@mui/material/ListItemText';\nimport { alpha, darken, lighten } from '@mui/material/styles';\n\nimport { useBoolean } from 'src/hooks/use-boolean';\n\nimport { fDateTime } from 'src/utils/format-time';\n\nimport Label from 'src/components/label';\nimport Editor from 'src/components/editor';\nimport Iconify from 'src/components/iconify';\nimport Markdown from 'src/components/markdown';\nimport Scrollbar from 'src/components/scrollbar';\nimport TextMaxLine from 'src/components/text-max-line';\nimport EmptyContent from 'src/components/empty-content';\nimport FileThumbnail from 'src/components/file-thumbnail';\n\nimport { IMail, IMailLabel } from 'src/types/mail';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  mail: IMail;\n  renderLabel: (id: string) => IMailLabel;\n};\n\nexport default function MailDetails({ mail, renderLabel }: Props) {\n  const showAttachments = useBoolean(true);\n\n  if (!mail) {\n    return (\n      <EmptyContent\n        title=\"No Conversation Selected\"\n        description=\"Select a conversation to read\"\n        imgUrl=\"/static/assets/icons/empty/ic_email_selected.svg\"\n        sx={{\n          borderRadius: 1.5,\n          bgcolor: 'background.default',\n        }}\n      />\n    );\n  }\n\n  const renderHead = (\n    <Stack direction=\"row\" alignItems=\"center\" flexShrink={0} sx={{ height: 56, pl: 2, pr: 1 }}>\n      <Stack direction=\"row\" spacing={1} flexGrow={1}>\n        {mail.labelIds.map((labelId) => {\n          const label = renderLabel(labelId);\n\n          return label ? (\n            <Label\n              key={label.id}\n              sx={{\n                bgcolor: alpha(label.color, 0.16),\n                color: (theme) =>\n                  theme.palette.mode === 'light'\n                    ? darken(label.color, 0.24)\n                    : lighten(label.color, 0.24),\n              }}\n            >\n              {label.name}\n            </Label>\n          ) : null;\n        })}\n      </Stack>\n\n      <Stack direction=\"row\" alignItems=\"center\">\n        <Checkbox\n          color=\"warning\"\n          icon={<Iconify icon=\"eva:star-outline\" />}\n          checkedIcon={<Iconify icon=\"eva:star-fill\" />}\n          checked={mail.isStarred}\n        />\n\n        <Checkbox\n          color=\"warning\"\n          icon={<Iconify icon=\"material-symbols:label-important-rounded\" />}\n          checkedIcon={<Iconify icon=\"material-symbols:label-important-rounded\" />}\n          checked={mail.isImportant}\n        />\n\n        <Tooltip title=\"Archive\">\n          <IconButton>\n            <Iconify icon=\"solar:archive-down-minimlistic-bold\" />\n          </IconButton>\n        </Tooltip>\n\n        <Tooltip title=\"Mark Unread\">\n          <IconButton>\n            <Iconify icon=\"fluent:mail-unread-20-filled\" />\n          </IconButton>\n        </Tooltip>\n\n        <Tooltip title=\"Trash\">\n          <IconButton>\n            <Iconify icon=\"solar:trash-bin-trash-bold\" />\n          </IconButton>\n        </Tooltip>\n\n        <IconButton>\n          <Iconify icon=\"eva:more-vertical-fill\" />\n        </IconButton>\n      </Stack>\n    </Stack>\n  );\n\n  const renderSubject = (\n    <Stack spacing={2} direction=\"row\" flexShrink={0} sx={{ p: 2 }}>\n      <TextMaxLine variant=\"subtitle2\" sx={{ flexGrow: 1 }}>\n        Re: {mail.subject}\n      </TextMaxLine>\n\n      <Stack spacing={0.5}>\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"flex-end\">\n          <IconButton size=\"small\">\n            <Iconify width={18} icon=\"solar:reply-bold\" />\n          </IconButton>\n\n          <IconButton size=\"small\">\n            <Iconify width={18} icon=\"solar:multiple-forward-left-broken\" />\n          </IconButton>\n\n          <IconButton size=\"small\">\n            <Iconify width={18} icon=\"solar:forward-bold\" />\n          </IconButton>\n        </Stack>\n\n        <Typography variant=\"caption\" noWrap sx={{ color: 'text.disabled' }}>\n          {fDateTime(mail.createdAt)}\n        </Typography>\n      </Stack>\n    </Stack>\n  );\n\n  const renderSender = (\n    <Stack\n      flexShrink={0}\n      direction=\"row\"\n      alignItems=\"center\"\n      sx={{\n        p: (theme) => theme.spacing(2, 2, 1, 2),\n      }}\n    >\n      <Avatar\n        alt={mail.from.name}\n        src={mail.from.avatarUrl ? `${mail.from.avatarUrl}` : ''}\n        sx={{ mr: 2 }}\n      >\n        {mail.from.name.charAt(0).toUpperCase()}\n      </Avatar>\n\n      <ListItemText\n        primary={\n          <>\n            {mail.from.name}\n            <Box component=\"span\" sx={{ typography: 'body2', color: 'text.disabled' }}>\n              {` <${mail.from.email}>`}\n            </Box>\n          </>\n        }\n        secondary={\n          <>\n            {`To: `}\n            {mail.to.map((person) => (\n              <Link key={person.email} sx={{ color: 'text.secondary' }}>\n                {`${person.email}, `}\n              </Link>\n            ))}\n          </>\n        }\n        secondaryTypographyProps={{\n          mt: 0.5,\n          noWrap: true,\n          component: 'span',\n          typography: 'caption',\n        }}\n      />\n    </Stack>\n  );\n\n  const renderAttachments = (\n    <Stack\n      spacing={1}\n      sx={{\n        p: 1,\n        borderRadius: 1,\n        bgcolor: 'background.neutral',\n      }}\n    >\n      <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\n        <ButtonBase\n          onClick={showAttachments.onToggle}\n          sx={{\n            color: 'text.secondary',\n            typography: 'caption',\n            borderRadius: 0.5,\n          }}\n        >\n          <Iconify icon=\"eva:attach-2-fill\" sx={{ mr: 0.5 }} />\n          {mail.attachments.length} attachments\n          <Iconify\n            icon={\n              showAttachments.value ? 'eva:arrow-ios-upward-fill' : 'eva:arrow-ios-downward-fill'\n            }\n            width={16}\n            sx={{ ml: 0.5 }}\n          />\n        </ButtonBase>\n\n        <Button startIcon={<Iconify icon=\"eva:cloud-download-fill\" />}>Download</Button>\n      </Stack>\n\n      <Collapse in={showAttachments.value} unmountOnExit timeout=\"auto\">\n        <Stack direction=\"row\" flexWrap=\"wrap\" spacing={1}>\n          {mail.attachments.map((attachment) => (\n            <Stack\n              key={attachment.id}\n              alignItems=\"center\"\n              justifyContent=\"center\"\n              sx={{\n                width: 40,\n                height: 40,\n                flexShrink: 0,\n                borderRadius: 1,\n                overflow: 'hidden',\n                position: 'relative',\n                backgroundColor: 'background.neutral',\n              }}\n            >\n              <FileThumbnail\n                tooltip\n                imageView\n                file={attachment.preview}\n                onDownload={() => console.info('DOWNLOAD')}\n                sx={{ width: 24, height: 24 }}\n              />\n            </Stack>\n          ))}\n        </Stack>\n      </Collapse>\n    </Stack>\n  );\n\n  const renderContent = (\n    <Box\n      sx={{\n        py: 3,\n        flexGrow: 1,\n        overflow: { xs: 'auto', md: 'hidden' },\n      }}\n    >\n      <Scrollbar>\n        <Markdown\n          children={mail.message}\n          sx={{\n            px: 2,\n            '& p': {\n              typography: 'body2',\n            },\n          }}\n        />\n      </Scrollbar>\n    </Box>\n  );\n\n  const renderEditor = (\n    <Stack\n      spacing={2}\n      sx={{\n        p: (theme) => theme.spacing(0, 2, 2, 2),\n      }}\n    >\n      <Editor simple id=\"reply-mail\" />\n\n      <Stack direction=\"row\" alignItems=\"center\">\n        <Stack direction=\"row\" alignItems=\"center\" flexGrow={1}>\n          <IconButton>\n            <Iconify icon=\"solar:gallery-add-bold\" />\n          </IconButton>\n\n          <IconButton>\n            <Iconify icon=\"eva:attach-2-fill\" />\n          </IconButton>\n        </Stack>\n\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          endIcon={<Iconify icon=\"iconamoon:send-fill\" />}\n        >\n          Send\n        </Button>\n      </Stack>\n    </Stack>\n  );\n\n  return (\n    <Stack\n      flexGrow={1}\n      sx={{\n        width: 1,\n        minWidth: 0,\n        borderRadius: 1.5,\n        bgcolor: 'background.default',\n      }}\n    >\n      {renderHead}\n\n      <Divider sx={{ borderStyle: 'dashed' }} />\n\n      {renderSubject}\n\n      <Divider sx={{ borderStyle: 'dashed' }} />\n\n      {renderSender}\n\n      {!!mail.attachments.length && <Stack sx={{ px: 2 }}> {renderAttachments} </Stack>}\n\n      {renderContent}\n\n      {renderEditor}\n    </Stack>\n  );\n}\n","import { useEffect, useCallback } from 'react';\n\nimport Stack from '@mui/material/Stack';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\n\nimport { paths } from 'src/routes/paths';\nimport { useRouter, useSearchParams } from 'src/routes/hooks';\n\nimport { useBoolean } from 'src/hooks/use-boolean';\nimport { useResponsive } from 'src/hooks/use-responsive';\n\nimport { useGetMail, useGetMails, useGetLabels } from 'src/api/mail';\n\nimport EmptyContent from 'src/components/empty-content';\nimport { useSettingsContext } from 'src/components/settings';\nimport { LoadingScreen } from 'src/components/loading-screen';\n\nimport MailNav from '../mail-nav';\nimport MailList from '../mail-list';\nimport MailHeader from '../mail-header';\nimport MailCompose from '../mail-compose';\nimport MailDetails from '../mail-details';\n\n// ----------------------------------------------------------------------\n\nconst LABEL_INDEX = 'inbox';\n\nexport default function MailView() {\n  const router = useRouter();\n\n  const searchParams = useSearchParams();\n\n  const selectedLabelId = searchParams.get('label') || LABEL_INDEX;\n\n  const selectedMailId = searchParams.get('id') || '';\n\n  const mdUp = useResponsive('up', 'md');\n\n  const settings = useSettingsContext();\n\n  const openNav = useBoolean();\n\n  const openMail = useBoolean();\n\n  const openCompose = useBoolean();\n\n  const { labels, labelsLoading } = useGetLabels();\n\n  const { mails, mailsLoading, mailsError, mailsEmpty } = useGetMails(selectedLabelId);\n\n  const { mail, mailLoading, mailError } = useGetMail(selectedMailId);\n\n  const firstMailId = mails.allIds[0] || '';\n\n  const handleToggleCompose = useCallback(() => {\n    if (openNav.value) {\n      openNav.onFalse();\n    }\n    openCompose.onToggle();\n  }, [openCompose, openNav]);\n\n  const handleClickLabel = useCallback(\n    (labelId: string) => {\n      if (!mdUp) {\n        openNav.onFalse();\n      }\n\n      if (labelId) {\n        const href =\n          labelId !== LABEL_INDEX\n            ? `${paths.dashboard.mail}?label=${labelId}`\n            : paths.dashboard.mail;\n        router.push(href);\n      }\n    },\n    [openNav, router, mdUp]\n  );\n\n  const handleClickMail = useCallback(\n    (mailId: string) => {\n      if (!mdUp) {\n        openMail.onFalse();\n      }\n\n      const href =\n        selectedLabelId !== LABEL_INDEX\n          ? `${paths.dashboard.mail}?id=${mailId}&label=${selectedLabelId}`\n          : `${paths.dashboard.mail}?id=${mailId}`;\n\n      router.push(href);\n    },\n    [openMail, router, selectedLabelId, mdUp]\n  );\n\n  useEffect(() => {\n    if (mailsError || mailError) {\n      router.push(paths.dashboard.mail);\n    }\n  }, [mailError, mailsError, router]);\n\n  useEffect(() => {\n    if (!selectedMailId && firstMailId) {\n      handleClickMail(firstMailId);\n    }\n  }, [firstMailId, handleClickMail, selectedMailId]);\n\n  useEffect(() => {\n    if (openCompose.value) {\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.overflow = '';\n    }\n  }, [openCompose.value]);\n\n  const renderLoading = (\n    <LoadingScreen\n      sx={{\n        borderRadius: 1.5,\n        bgcolor: 'background.default',\n      }}\n    />\n  );\n\n  const renderEmpty = (\n    <EmptyContent\n      title={`Nothing in ${selectedLabelId}`}\n      description=\"This folder is empty\"\n      imgUrl=\"/static/assets/icons/empty/ic_folder_empty.svg\"\n      sx={{\n        borderRadius: 1.5,\n        maxWidth: { md: 320 },\n        bgcolor: 'background.default',\n      }}\n    />\n  );\n\n  const renderMailNav = (\n    <MailNav\n      loading={labelsLoading}\n      openNav={openNav.value}\n      onCloseNav={openNav.onFalse}\n      //\n      labels={labels}\n      selectedLabelId={selectedLabelId}\n      handleClickLabel={handleClickLabel}\n      //\n      onToggleCompose={handleToggleCompose}\n    />\n  );\n\n  const renderMailList = (\n    <MailList\n      mails={mails}\n      loading={mailsLoading}\n      //\n      openMail={openMail.value}\n      onCloseMail={openMail.onFalse}\n      onClickMail={handleClickMail}\n      //\n      selectedLabelId={selectedLabelId}\n      selectedMailId={selectedMailId}\n    />\n  );\n\n  const renderMailDetails = (\n    <>\n      {mailsEmpty ? (\n        <EmptyContent\n          imgUrl=\"/static/assets/icons/empty/ic_email_disabled.svg\"\n          sx={{\n            borderRadius: 1.5,\n            bgcolor: 'background.default',\n            ...(!mdUp && {\n              display: 'none',\n            }),\n          }}\n        />\n      ) : (\n        <MailDetails\n          mail={mail}\n          renderLabel={(id: string) => labels.filter((label) => label.id === id)[0]}\n        />\n      )}\n    </>\n  );\n\n  return (\n    <>\n      <Container maxWidth={settings.themeStretch ? false : 'xl'}>\n        <Typography\n          variant=\"h4\"\n          sx={{\n            mb: { xs: 3, md: 5 },\n          }}\n        >\n          Mail\n        </Typography>\n\n        <Stack\n          spacing={1}\n          sx={{\n            p: 1,\n            borderRadius: 2,\n            overflow: 'hidden',\n            position: 'relative',\n            bgcolor: 'background.neutral',\n          }}\n        >\n          {!mdUp && (\n            <MailHeader\n              onOpenNav={openNav.onTrue}\n              onOpenMail={mailsEmpty ? null : openMail.onTrue}\n            />\n          )}\n\n          <Stack\n            spacing={1}\n            direction=\"row\"\n            sx={{\n              minHeight: { md: 720 },\n              height: { xs: 800, md: '72vh' },\n            }}\n          >\n            {renderMailNav}\n\n            {mailsEmpty ? renderEmpty : renderMailList}\n\n            {mailLoading ? renderLoading : renderMailDetails}\n          </Stack>\n        </Stack>\n      </Container>\n\n      {openCompose.value && <MailCompose onCloseCompose={openCompose.onFalse} />}\n    </>\n  );\n}\n","import useSWR from 'swr';\nimport { useMemo } from 'react';\nimport keyBy from 'lodash/keyBy';\n\nimport { fetcher, endpoints } from 'src/utils/axios';\n\nimport { IMail, IMails, IMailLabel } from 'src/types/mail';\n\n// ----------------------------------------------------------------------\n\nexport function useGetLabels() {\n  const URL = endpoints.mail.labels;\n\n  const { data, isLoading, error, isValidating } = useSWR(URL, fetcher);\n\n  const memoizedValue = useMemo(\n    () => ({\n      labels: (data?.labels as IMailLabel[]) || [],\n      labelsLoading: isLoading,\n      labelsError: error,\n      labelsValidating: isValidating,\n      labelsEmpty: !isLoading && !data?.labels.length,\n    }),\n    [data?.labels, error, isLoading, isValidating]\n  );\n\n  return memoizedValue;\n}\n\n// ----------------------------------------------------------------------\n\nexport function useGetMails(labelId: string) {\n  const URL = labelId ? [endpoints.mail.list, { params: { labelId } }] : '';\n\n  const { data, isLoading, error, isValidating } = useSWR(URL, fetcher);\n\n  const memoizedValue = useMemo(() => {\n    const byId = keyBy(data?.mails, 'id') || {};\n    const allIds = Object.keys(byId) || [];\n\n    return {\n      mails: {\n        byId,\n        allIds,\n      } as IMails,\n      mailsLoading: isLoading,\n      mailsError: error,\n      mailsValidating: isValidating,\n      mailsEmpty: !isLoading && !allIds.length,\n    };\n  }, [data?.mails, error, isLoading, isValidating]);\n\n  return memoizedValue;\n}\n\n// ----------------------------------------------------------------------\n\nexport function useGetMail(mailId: string) {\n  const URL = mailId ? [endpoints.mail.details, { params: { mailId } }] : '';\n\n  const { data, isLoading, error, isValidating } = useSWR(URL, fetcher);\n\n  const memoizedValue = useMemo(\n    () => ({\n      mail: data?.mail as IMail,\n      mailLoading: isLoading,\n      mailError: error,\n      mailValidating: isValidating,\n    }),\n    [data?.mail, error, isLoading, isValidating]\n  );\n\n  return memoizedValue;\n}\n","import { Helmet } from 'react-helmet-async';\n\nimport { MailView } from 'src/sections/mail/view';\n\n// ----------------------------------------------------------------------\n\nexport default function MailPage() {\n  return (\n    <>\n      <Helmet>\n        <title> Game: Mail</title>\n      </Helmet>\n\n      <MailView />\n    </>\n  );\n}\n"],"names":["EmptyContent","_ref","title","imgUrl","action","filled","description","sx","other","_jsxs","Stack","flexGrow","alignItems","justifyContent","px","height","borderRadius","bgcolor","theme","alpha","palette","grey","border","concat","children","_jsx","Box","component","alt","src","width","maxWidth","Typography","variant","mt","color","textAlign","styled","lightMode","mode","h1","margin","typography","h2","h3","h4","h5","h6","p","body1","br","display","content","marginTop","hr","flexShrink","borderWidth","msFlexNegative","WebkitFlexShrink","borderStyle","borderBottomWidth","borderColor","divider","lineHeight","fontSize","position","fontFamily","padding","spacing","text","secondary","shape","backgroundColor","background","neutral","breakpoints","up","marginBottom","left","top","disabled","overflowX","whiteSpace","common","white","warning","table","borderCollapse","input","cursor","primary","main","transform","msTransform","WebkitTransform","Markdown","StyledMarkdown","ReactMarkdown","rehypePlugins","rehypeRaw","rehypeHighlight","remarkGfm","singleTilde","components","img","_ref2","props","Image","ratio","a","_ref3","href","includes","Link","target","rel","RouterLink","useTypography","useTheme","useWidth","key","getFont","value","Math","round","parseFloat","Number","fontWeight","letterSpacing","forwardRef","ref","asLink","line","persistent","styles","overflow","textOverflow","WebkitLineClamp","WebkitBoxOrient","LABEL_ICONS","all","inbox","trash","drafts","spam","sent","starred","important","social","promotions","forums","MailNavItem","selected","label","onClickNavItem","unreadCount","name","labelIcon","id","ListItemButton","disableRipple","onClick","Iconify","icon","mr","ListItemText","primaryTypographyProps","textTransform","MailNavItemSkeleton","direction","py","Skeleton","MailItemSkeleton","MailNav","loading","openNav","onCloseNav","labels","selectedLabelId","handleClickLabel","onToggleCompose","mdUp","useResponsive","renderSkeleton","_Fragment","Array","map","_","index","renderList","renderContent","xs","md","Button","fullWidth","startIcon","Scrollbar","length","Drawer","open","onClose","slotProps","backdrop","invisible","PaperProps","MailItem","mail","mb","Avatar","from","avatarUrl","charAt","toUpperCase","noWrap","message","secondaryTypographyProps","isUnread","ml","formatDistanceToNowStrict","Date","createdAt","addSuffix","MailList","mails","openMail","onCloseMail","onClickMail","selectedMailId","allIds","mailId","byId","TextField","placeholder","InputProps","startAdornment","InputAdornment","MailHeader","onOpenNav","onOpenMail","IconButton","size","ZINDEX","POSITION","MailCompose","onCloseCompose","smUp","setMessage","useState","fullScreen","useBoolean","handleChangeMessage","useCallback","Portal","Backdrop","zIndex","Paper","right","bottom","m","flexDirection","boxShadow","customShadows","dropdown","onToggle","InputBase","endAdornment","textDecoration","borderBottom","Editor","simple","onChange","maxHeight","endIcon","MailDetails","renderLabel","showAttachments","renderHead","pl","pr","labelIds","labelId","Label","darken","lighten","Checkbox","checkedIcon","checked","isStarred","isImportant","Tooltip","renderSubject","TextMaxLine","subject","fDateTime","renderSender","email","to","person","renderAttachments","ButtonBase","attachments","Collapse","in","unmountOnExit","timeout","flexWrap","attachment","FileThumbnail","tooltip","imageView","file","preview","onDownload","console","info","renderEditor","minWidth","Divider","LABEL_INDEX","MailView","router","useRouter","searchParams","useSearchParams","get","settings","useSettingsContext","openCompose","labelsLoading","URL","endpoints","data","isLoading","error","isValidating","useSWR","fetcher","useMemo","labelsError","labelsValidating","labelsEmpty","useGetLabels","mailsLoading","mailsError","mailsEmpty","list","params","keyBy","Object","keys","mailsValidating","useGetMails","mailLoading","mailError","details","mailValidating","useGetMail","firstMailId","handleToggleCompose","onFalse","paths","dashboard","push","handleClickMail","useEffect","document","body","style","renderLoading","LoadingScreen","renderEmpty","renderMailNav","renderMailList","renderMailDetails","filter","Container","themeStretch","onTrue","minHeight","MailPage","Helmet"],"sourceRoot":""}