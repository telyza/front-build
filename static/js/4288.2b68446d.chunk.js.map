{"version":3,"file":"static/js/4288.2b68446d.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/CardMedia/cardMediaClasses.js","../node_modules/@mui/material/CardMedia/CardMedia.js","sections/overview/category-detail/view/category-detail-view.tsx","pages/dashboard/category-detail.tsx"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardMediaUtilityClass(slot) {\n  return generateUtilityClass('MuiCardMedia', slot);\n}\nconst cardMediaClasses = generateUtilityClasses('MuiCardMedia', ['root', 'media', 'img']);\nexport default cardMediaClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"image\", \"src\", \"style\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCardMediaUtilityClass } from './cardMediaClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    isMediaComponent,\n    isImageComponent\n  } = ownerState;\n  const slots = {\n    root: ['root', isMediaComponent && 'media', isImageComponent && 'img']\n  };\n  return composeClasses(slots, getCardMediaUtilityClass, classes);\n};\nconst CardMediaRoot = styled('div', {\n  name: 'MuiCardMedia',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      isMediaComponent,\n      isImageComponent\n    } = ownerState;\n    return [styles.root, isMediaComponent && styles.media, isImageComponent && styles.img];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'block',\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n  backgroundPosition: 'center'\n}, ownerState.isMediaComponent && {\n  width: '100%'\n}, ownerState.isImageComponent && {\n  // ⚠️ object-fit is not supported by IE11.\n  objectFit: 'cover'\n}));\nconst MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nconst IMAGE_COMPONENTS = ['picture', 'img'];\nconst CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardMedia'\n  });\n  const {\n      children,\n      className,\n      component = 'div',\n      image,\n      src,\n      style\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const isMediaComponent = MEDIA_COMPONENTS.indexOf(component) !== -1;\n  const composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: `url(\"${image}\")`\n  }, style) : style;\n  const ownerState = _extends({}, props, {\n    component,\n    isMediaComponent,\n    isImageComponent: IMAGE_COMPONENTS.indexOf(component) !== -1\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardMediaRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    role: !isMediaComponent && image ? 'img' : undefined,\n    ref: ref,\n    style: composedStyle,\n    ownerState: ownerState,\n    src: isMediaComponent ? image || src : undefined\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('MUI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n    return null;\n  }),\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardMedia;","import React, { useCallback, useEffect } from 'react';\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  Typography,\n  Grid,\n  Card,\n  CardMedia,\n  Box,\n  Stack,\n} from '@mui/material';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useTheme, styled } from '@mui/material/styles';\nimport { LoadingScreen } from 'src/components/loading-screen';\n// redux\nimport { useSelector, useDispatch } from 'src/redux/store';\nimport { getCategoryDetailSuccess, getCategoryDetail } from 'src/redux/slices/generale';\nimport Iconify from 'src/components/iconify';\nimport { paths } from 'src/routes/paths';\n\nconst GameCard = styled(Card)(({ theme }) => ({\n  background: '#1F1F1F',\n  borderRadius: theme.shape.borderRadius,\n  boxShadow: '0px 4px 10px rgba(0, 0, 0, 0.3)',\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'flex-end',\n  minHeight: 180,\n  position: 'relative',\n  overflow: 'hidden',\n  cursor: 'pointer',\n}));\n\nconst GameTitle = styled(Typography)(({ theme }) => ({\n  color: 'white',\n  fontWeight: 'bold',\n  fontSize: '1rem',\n  position: 'absolute',\n  bottom: theme.spacing(1.5),\n  left: theme.spacing(1.5),\n  zIndex: 1,\n  textShadow: '1px 1px 3px rgba(0,0,0,0.8)',\n}));\n\nexport default function CategoryDetailPage() {\n  const theme = useTheme();\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { category_detail, isLoadingCategory } = useSelector((state) => state.generale);\n\n  const fetchGame = useCallback(async () => {\n    if (id) {\n      const res = await getCategoryDetail(id);\n      dispatch(getCategoryDetailSuccess(res));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, id]);\n\n  useEffect(() => {\n    fetchGame();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [fetchGame]);\n\n  if (isLoadingCategory) {\n    return (\n      <Stack sx={{ py: 8 }}>\n        <LoadingScreen />\n      </Stack>\n    );\n  }\n\n  return (\n    <Box\n      sx={{\n        background: `url(/static/assets/background/instant-games-categories-elements-background.png) no-repeat, linear-gradient(180deg, ${theme.palette.primary.main} 0%, rgba(87, 0, 140, 0) 260px)`,\n      }}\n    >\n      <AppBar position=\"static\" sx={{ bgcolor: 'transparent', boxShadow: 'none', mb: 2 }}>\n        <Toolbar sx={{ justifyContent: 'space-between', px: 2 }}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"back\"\n            onClick={() => window.history.back()}\n          >\n            <Iconify icon=\"eva:arrow-back-fill\" width={24} color=\"white\" />\n          </IconButton>\n          <Typography\n            variant=\"h6\"\n            component=\"div\"\n            sx={{\n              fontWeight: 'bold',\n              color: 'white',\n              display: 'flex',\n              alignItems: 'center',\n              gap: 0.5,\n            }}\n          >\n            <Iconify icon=\"eva:flash-fill\" width={20} color=\"#FFD700\" />\n            {category_detail?.name || 'Category Detail'}\n          </Typography>\n          <IconButton edge=\"end\" color=\"inherit\" aria-label=\"menu\" />\n        </Toolbar>\n      </AppBar>\n\n      <Grid container spacing={2} sx={{ px: 2 }}>\n        {category_detail?.games?.map(\n          (game: {\n            id: string | null | undefined;\n            new: any;\n            image: string | undefined;\n            name:\n              | string\n              | number\n              | boolean\n              | React.ReactElement<any, string | React.JSXElementConstructor<any>>\n              | Iterable<React.ReactNode>\n              | null\n              | undefined;\n          }) => (\n            <Grid item xs={6} sm={4} md={3} key={game.id}>\n              <GameCard onClick={() => navigate(paths.casino.game_view(game.id))}>\n                <CardMedia\n                  component=\"img\"\n                  image={game.image || ''}\n                  alt={typeof game.name === 'string' ? game.name : ''}\n                  sx={{\n                    width: '100%',\n                    height: '100%',\n                    position: 'absolute',\n                    top: 0,\n                    left: 0,\n                    objectFit: 'cover',\n                    filter: 'brightness(0.7)',\n                  }}\n                />\n                <GameTitle variant=\"subtitle1\">{game.name}</GameTitle>\n              </GameCard>\n            </Grid>\n          )\n        )}\n      </Grid>\n      {category_detail?.games?.length === 0 && !isLoadingCategory && (\n        <Box sx={{ textAlign: 'center', py: 8 }}>\n          <Iconify icon=\"eva:alert-circle-outline\" width={48} color=\"#888\" />\n          <Typography variant=\"h6\" sx={{ color: 'text.secondary' }}>\n            Aucun jeu disponible pour cette catégorie\n          </Typography>\n          <Typography variant=\"body2\" sx={{ color: 'text.disabled' }}>\n            Veuillez revenir plus tard ou choisir une autre catégorie.\n          </Typography>\n        </Box>\n      )}\n    </Box>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n\nimport { CategoryDetail } from 'src/sections/overview/category-detail/view';\n\n// ----------------------------------------------------------------------\n\nexport default function OverviewAppPage() {\n  return (\n    <>\n      <Helmet>\n        <title> Game: Category Detail</title>\n      </Helmet>\n\n      <CategoryDetail />\n    </>\n  );\n}\n"],"names":["getCardMediaUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardMediaRoot","styled","name","overridesResolver","props","styles","ownerState","isMediaComponent","isImageComponent","root","media","img","_ref","_extends","display","backgroundSize","backgroundRepeat","backgroundPosition","width","objectFit","MEDIA_COMPONENTS","IMAGE_COMPONENTS","React","inProps","ref","useThemeProps","children","className","component","image","src","style","other","_objectWithoutPropertiesLoose","indexOf","composedStyle","backgroundImage","concat","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","as","role","undefined","GameCard","Card","theme","background","borderRadius","shape","boxShadow","flexDirection","justifyContent","minHeight","position","overflow","cursor","GameTitle","Typography","_ref2","color","fontWeight","fontSize","bottom","spacing","left","zIndex","textShadow","CategoryDetailPage","_category_detail$game","_category_detail$game2","useTheme","id","useParams","dispatch","useDispatch","navigate","useNavigate","category_detail","isLoadingCategory","useSelector","state","generale","fetchGame","useCallback","async","res","getCategoryDetail","getCategoryDetailSuccess","useEffect","Stack","sx","py","LoadingScreen","_jsxs","Box","palette","primary","main","AppBar","bgcolor","mb","Toolbar","px","IconButton","edge","onClick","window","history","back","Iconify","icon","variant","alignItems","gap","Grid","container","games","map","game","item","xs","sm","md","paths","casino","game_view","CardMedia","alt","height","top","filter","length","textAlign","OverviewAppPage","_Fragment","Helmet","CategoryDetail"],"sourceRoot":""}